{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Permission } from '../../Models/permission.model';\nlet PermissionComponent = class PermissionComponent {\n  constructor(PermissionService, RoleService, route, router, ApplicationService, JournalisationService, ActionService, UtilisateurService, FonctionService, cdr, ngZone) {\n    this.PermissionService = PermissionService;\n    this.RoleService = RoleService;\n    this.route = route;\n    this.router = router;\n    this.ApplicationService = ApplicationService;\n    this.JournalisationService = JournalisationService;\n    this.ActionService = ActionService;\n    this.UtilisateurService = UtilisateurService;\n    this.FonctionService = FonctionService;\n    this.cdr = cdr;\n    this.ngZone = ngZone;\n    this.permission = new Permission();\n    this.roles = [];\n    this.applications = [];\n    this.multiPermissions = [];\n    this.uniquePermissions = [];\n    this.rechApp = '';\n    this.rechRole = '';\n    this.rechFonctionMulti = '';\n    this.rechFonctionUnique = '';\n    this.IdApp = 0;\n    this.IdRole = 0;\n    this.i = 0;\n    this.listePermissionsPredefini = [];\n    this.read = false;\n    this.modify = false;\n    this.add = false;\n    this.delete = false;\n  }\n  ngOnInit() {\n    this.ajouterListePermissionsPredefini();\n    this.ApplicationService.getApplications().subscribe(data => {\n      this.applications = data;\n      if (this.applications && this.applications.length > 0) {\n        this.IdApp = this.applications[0].id;\n        this.rechApp = this.applications[0].nom;\n        this.RoleService.getRoles(this.IdApp).subscribe(data => {\n          this.roles = data;\n          this.IdRole = this.roles[0].id;\n          this.rechRole = this.roles[0].nom;\n          this.loadPermissions();\n        });\n      }\n    }, error => {\n      console.error('Erreur lors de la récupération des applications : ', error);\n    });\n  }\n  ngAfterViewInit() {\n    this.setPermissionsByRole();\n    this.cdr.detectChanges(); // Force la détection des changements\n    const cells = document.querySelectorAll('td.acces');\n    console.log(cells);\n  }\n  setPermissionsByRole() {\n    this.ApplicationService.Recherche(\"www.wbauth.com\").subscribe(dataApp => {\n      if (dataApp[0].url == \"www.wbauth.com\") {\n        let role = localStorage.getItem(\"role\");\n        this.RoleService.Recherche(role, dataApp[0].id).subscribe(dataRole => {\n          if (dataRole && dataRole.length == 1) {\n            this.PermissionService.getListeMultiFonction(dataApp[0].id, dataRole[0].id).subscribe(dataPermission => {\n              for (const perm of dataPermission) {\n                if (perm.nom == \"Gestion des permissions\") {\n                  if (perm.status[0] === \"1\") {\n                    this.read = true;\n                  }\n                  if (perm.status[1] === \"1\") {\n                    this.add = true;\n                  }\n                  if (perm.status[2] === \"1\") {\n                    this.modify = true;\n                  }\n                  if (perm.status[3] === \"1\") {\n                    this.delete = true;\n                  }\n                  if (perm.status[2] === \"0\") {\n                    const cells = document.querySelectorAll('td.acces');\n                    cells.forEach(cell => {\n                      if (cell.classList.contains('acces')) {\n                        const htmlCell = cell;\n                        htmlCell.classList.add(\"no-select\");\n                        htmlCell.style.cursor = \"not-allowed\";\n                      }\n                    });\n                  }\n                }\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n  loadApplications() {\n    this.ApplicationService.getApplications().subscribe(data => {\n      this.applications = data;\n    }, error => {\n      console.error('Erreur lors de la récupération des applications : ', error);\n    });\n  }\n  getSelectedApplicationId() {\n    const selectedApplication = this.applications.find(app => app.nom === this.rechApp);\n    if (selectedApplication) {\n      this.IdApp = selectedApplication.id;\n      this.RoleService.getRoles(this.IdApp).subscribe(data => {\n        this.roles = data;\n        this.IdRole = this.roles[0].id;\n        this.rechRole = this.roles[0].nom;\n        this.loadPermissions();\n      }, error => {\n        console.error('Erreur lors de la récupération des roles : ', error);\n      });\n      return selectedApplication.id;\n    } else return 0;\n  }\n  getSelectedRoleId() {\n    const selectedRole = this.roles.find(r => r.nom === this.rechRole);\n    if (selectedRole) {\n      this.IdRole = selectedRole.id;\n      this.loadPermissions();\n      return selectedRole.id;\n    } else return 0;\n  }\n  loadPermissions() {\n    if (this.applications.length > 0 && this.roles.length > 0) {\n      this.PermissionService.getListeMultiFonction(this.IdApp, this.IdRole).subscribe(data => {\n        this.multiPermissions = data;\n      }, error => {\n        console.error('Erreur lors de la récupération des Permissions : ', error);\n      });\n      this.PermissionService.getListeFonctionUnique(this.IdApp, this.IdRole).subscribe(data => {\n        this.uniquePermissions = data;\n      }, error => {\n        console.error('Erreur lors de la récupération des Permissions : ', error);\n      });\n    }\n  }\n  RechMultiFonction() {\n    if (this.rechFonctionMulti == \"\") this.loadPermissions();else {\n      this.PermissionService.getListeMultiFonction(this.IdApp, this.IdRole).subscribe(data => {\n        this.multiPermissions = data;\n        this.multiPermissions = this.multiPermissions.filter(perm => {\n          return perm.nom.toLowerCase().includes(this.rechFonctionMulti.toLowerCase());\n        });\n      });\n    }\n  }\n  RechFonctionUnique() {\n    if (this.rechFonctionUnique == \"\") this.loadPermissions();else {\n      this.PermissionService.getListeFonctionUnique(this.IdApp, this.IdRole).subscribe(data => {\n        this.uniquePermissions = data;\n        this.uniquePermissions = this.uniquePermissions.filter(perm => {\n          return perm.nom.toLowerCase().includes(this.rechFonctionUnique.toLowerCase());\n        });\n      });\n    }\n  }\n  onModifierAccesFonctionMulti(index, perm, event) {\n    this.i = index;\n    const target = event.target;\n    const span = target.querySelector('span');\n    if (span?.textContent === '✔') {\n      span.textContent = '✖';\n      target.style.backgroundColor = 'red';\n    } else if (span?.textContent === '✖') {\n      span.textContent = '✔';\n      target.style.backgroundColor = '#128d3a';\n    }\n    this.PermissionService.ModifierAcces(this.IdApp, this.i, perm).subscribe(() => {\n      this.loadPermissions();\n      this.EnregistrerAction(this.IdApp, this.IdRole, \"MultiFonction\", perm);\n    });\n  }\n  onModifierAccesFonctionUnique(perm, event) {\n    const target = event.target;\n    const span = target.querySelector('span');\n    if (span?.textContent === '✔' && perm.status == \"1\") {\n      span.textContent = '✖';\n      target.style.backgroundColor = 'red';\n    } else if (span?.textContent === '✖' && perm.status == \"0\") {\n      span.textContent = '✔';\n      target.style.backgroundColor = '#128d3a';\n    }\n    this.PermissionService.ModifierAcces(this.IdApp, this.i, perm).subscribe(() => {\n      this.loadPermissions();\n      this.EnregistrerAction(this.IdApp, this.IdRole, \"Fonction Unique\", perm);\n    });\n  }\n  onModifierClick(id) {\n    this.router.navigate(['Permission/ModifierPermission', id]);\n  }\n  EnregistrerActionSupp(id) {\n    let username = localStorage.getItem(\"username\");\n    this.UtilisateurService.Recherche(username).subscribe(data => {\n      this.JournalisationService.getJournalisations(data[0].id).subscribe(dataJournalisations => {\n        let idJournalisation = dataJournalisations[dataJournalisations.length - 1].id;\n        const action = {\n          id: 0,\n          application: \"www.wbauth.com\",\n          date: new Date(),\n          description: `l'utilisateur ${username} a supprimer la permission avec l'id '${id}' du role '${this.rechRole}' dans l'application '${this.rechApp}' avec l'id '${this.IdApp}'`,\n          idJournalisation: idJournalisation,\n          journalisation: dataJournalisations[dataJournalisations.length - 1]\n        };\n        this.ActionService.EnregistrementActions(action).subscribe(() => {\n          console.log(action);\n        });\n      });\n    });\n  }\n  deletePermission(id) {\n    if (confirm('Voulez-vous vraiment supprimer ce Permission ?')) {\n      this.PermissionService.deletePermission(id).subscribe(() => {\n        this.loadPermissions();\n        this.EnregistrerActionSupp(id);\n      });\n    }\n  }\n  scrollToTable2() {\n    if (this.table2) {\n      this.table2.nativeElement.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  }\n  scrollToTable1() {\n    if (this.table1) {\n      this.table1.nativeElement.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  }\n  EnregistrerAction(IdApp, IdRole, type, perm) {\n    let username = localStorage.getItem(\"username\");\n    this.UtilisateurService.Recherche(username).subscribe(data => {\n      this.JournalisationService.getJournalisations(data[0].id).subscribe(dataJournalisations => {\n        let idJournalisation = dataJournalisations[dataJournalisations.length - 1].id;\n        if (type === \"MultiFonction\") {\n          const action = {\n            id: 0,\n            application: \"www.wbauth.com\",\n            date: new Date(),\n            description: `l'utilisateur ${username} a modifier la permission '${perm.nom}' du role avec l'id '${IdRole}' de l'application avec l'id '${IdApp}'  `,\n            idJournalisation: idJournalisation,\n            journalisation: dataJournalisations[dataJournalisations.length - 1]\n          };\n          this.ActionService.EnregistrementActions(action).subscribe(() => {\n            console.log(action);\n          });\n        } else if (type === \"Fonction Unique\") {\n          const action = {\n            id: 0,\n            application: \"www.wbauth.com\",\n            date: new Date(),\n            description: `l'utilisateur ${username} a modifier la permission '${perm.nom}' du role avec l'id '${IdRole}' de l'application avec l'id '${IdApp}'  `,\n            idJournalisation: idJournalisation,\n            journalisation: dataJournalisations[dataJournalisations.length - 1]\n          };\n          this.ActionService.EnregistrementActions(action).subscribe(() => {\n            console.log(action);\n          });\n        }\n      });\n    });\n  }\n  ajouterListePermissionsPredefini() {\n    this.ApplicationService.Recherche(\"www.wbauth.com\").subscribe(dataApp => {\n      if (dataApp[0].url == \"www.wbauth.com\") {\n        this.RoleService.getRoles(dataApp[0].id).subscribe(dataRoles => {\n          for (const role of dataRoles) {\n            if (role.nom == \"Utilisateur\" || role.nom == \"utilisateur\") {\n              this.listePermissionsPredefini = [];\n              this.listePermissionsPredefini.push(new Permission(0, 'Gestion des applications', '100000', role.id, role, 0, null), new Permission(0, 'Gestion des fonctions', '100000', role.id, role, 0, null), new Permission(0, 'Gestion des roles', '100000', role.id, role, 0, null), new Permission(0, 'Gestion des permissions', '100000', role.id, role, 0, null), new Permission(0, 'Gestion des utilisateurs', '100000', role.id, role, 0, null), new Permission(0, 'Consulter la liste des accès utilisateurs', '0', role.id, role, 0, null), new Permission(0, 'Modifier la liste des accès d\\'un utilisateur', '0', role.id, role, 0, null), new Permission(0, 'Consulter la journalisation d\\'un utilisateur', '0', role.id, role, 0, null), new Permission(0, 'Modifier son compte utilisateur', '1', role.id, role, 0, null));\n              for (const perm of this.listePermissionsPredefini) {\n                if (perm.status.length > 2) {\n                  this.PermissionService.RechMultiFonction(perm.nom, dataApp[0].id, role.id).subscribe(dataPermission => {\n                    if (dataPermission && dataPermission.length < 1) {\n                      this.FonctionService.Recherche(perm.nom, dataApp[0].id).subscribe(dataFonction => {\n                        perm.idFonction = dataFonction[0].id;\n                        perm.Fonction = dataFonction[0];\n                        this.PermissionService.addPermission(perm).subscribe(() => {});\n                      });\n                    }\n                  });\n                } else if (perm.status.length < 2) {\n                  this.PermissionService.RechFonctionUnique(perm.nom, dataApp[0].id, role.id).subscribe(dataPermission => {\n                    if (dataPermission && dataPermission.length < 1) {\n                      this.FonctionService.Recherche(perm.nom, dataApp[0].id).subscribe(dataFonction => {\n                        perm.idFonction = dataFonction[0].id;\n                        perm.Fonction = dataFonction[0];\n                        this.PermissionService.addPermission(perm).subscribe(() => {});\n                      });\n                    }\n                  });\n                }\n              }\n            } else if (role.nom == \"Administrateur\" || role.nom == \"administrateur\") {\n              this.listePermissionsPredefini = [];\n              this.listePermissionsPredefini.push(new Permission(0, 'Gestion des applications', '100000', role.id, role, 0, null), new Permission(0, 'Gestion des fonctions', '100011', role.id, role, 0, null), new Permission(0, 'Gestion des roles', '100011', role.id, role, 0, null), new Permission(0, 'Gestion des permissions', '100011', role.id, role, 0, null), new Permission(0, 'Gestion des utilisateurs', '111111', role.id, role, 0, null), new Permission(0, 'Consulter la liste des accès utilisateurs', '1', role.id, role, 0, null), new Permission(0, 'Modifier la liste des accès d\\'un utilisateur', '1', role.id, role, 0, null), new Permission(0, 'Consulter la journalisation d\\'un utilisateur', '1', role.id, role, 0, null), new Permission(0, 'Modifier son compte utilisateur', '1', role.id, role, 0, null));\n              for (const perm of this.listePermissionsPredefini) {\n                if (perm.status.length > 2) {\n                  this.PermissionService.RechMultiFonction(perm.nom, dataApp[0].id, role.id).subscribe(dataPermission => {\n                    if (dataPermission && dataPermission.length < 1) {\n                      this.FonctionService.Recherche(perm.nom, dataApp[0].id).subscribe(dataFonction => {\n                        perm.idFonction = dataFonction[0].id;\n                        perm.Fonction = dataFonction[0];\n                        this.PermissionService.addPermission(perm).subscribe(() => {});\n                      });\n                    }\n                  });\n                } else if (perm.status.length < 2) {\n                  this.PermissionService.RechFonctionUnique(perm.nom, dataApp[0].id, role.id).subscribe(dataPermission => {\n                    if (dataPermission && dataPermission.length < 1) {\n                      this.FonctionService.Recherche(perm.nom, dataApp[0].id).subscribe(dataFonction => {\n                        perm.idFonction = dataFonction[0].id;\n                        perm.Fonction = dataFonction[0];\n                        this.PermissionService.addPermission(perm).subscribe(() => {});\n                      });\n                    }\n                  });\n                }\n              }\n            } else if (role.nom == \"Super-Administrateur\" || role.nom == \"Super-administrateur\" || role.nom == \"super-administrateur\" || role.nom == \"Super Administrateur\" || role.nom == \"Super administrateur\" || role.nom == \"super administrateur\") {\n              this.listePermissionsPredefini = [];\n              this.listePermissionsPredefini.push(new Permission(0, 'Gestion des applications', '111111', role.id, role, 0, null), new Permission(0, 'Gestion des fonctions', '111111', role.id, role, 0, null), new Permission(0, 'Gestion des roles', '111111', role.id, role, 0, null), new Permission(0, 'Gestion des permissions', '111111', role.id, role, 0, null), new Permission(0, 'Gestion des utilisateurs', '111111', role.id, role, 0, null), new Permission(0, 'Consulter la liste des accès utilisateurs', '1', role.id, role, 0, null), new Permission(0, 'Modifier la liste des accès d\\'un utilisateur', '1', role.id, role, 0, null), new Permission(0, 'Consulter la journalisation d\\'un utilisateur', '1', role.id, role, 0, null), new Permission(0, 'Modifier son compte utilisateur', '1', role.id, role, 0, null));\n              for (const perm of this.listePermissionsPredefini) {\n                if (perm.status.length > 2) {\n                  this.PermissionService.RechMultiFonction(perm.nom, dataApp[0].id, role.id).subscribe(dataPermission => {\n                    if (dataPermission && dataPermission.length < 1) {\n                      this.FonctionService.Recherche(perm.nom, dataApp[0].id).subscribe(dataFonction => {\n                        perm.idFonction = dataFonction[0].id;\n                        perm.Fonction = dataFonction[0];\n                        this.PermissionService.addPermission(perm).subscribe(() => {});\n                      });\n                    }\n                  });\n                } else if (perm.status.length < 2) {\n                  this.PermissionService.RechFonctionUnique(perm.nom, dataApp[0].id, role.id).subscribe(dataPermission => {\n                    if (dataPermission && dataPermission.length < 1) {\n                      this.FonctionService.Recherche(perm.nom, dataApp[0].id).subscribe(dataFonction => {\n                        perm.idFonction = dataFonction[0].id;\n                        perm.Fonction = dataFonction[0];\n                        this.PermissionService.addPermission(perm).subscribe(() => {});\n                      });\n                    }\n                  });\n                }\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n};\n__decorate([ViewChild('table2', {\n  static: false\n})], PermissionComponent.prototype, \"table2\", void 0);\n__decorate([ViewChild('table1', {\n  static: false\n})], PermissionComponent.prototype, \"table1\", void 0);\nPermissionComponent = __decorate([Component({\n  selector: 'app-Permission',\n  templateUrl: './Permission.component.html'\n})], PermissionComponent);\nexport { PermissionComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","Permission","PermissionComponent","constructor","PermissionService","RoleService","route","router","ApplicationService","JournalisationService","ActionService","UtilisateurService","FonctionService","cdr","ngZone","ngOnInit","ajouterListePermissionsPredefini","getApplications","subscribe","data","applications","length","IdApp","id","rechApp","nom","getRoles","roles","IdRole","rechRole","loadPermissions","error","console","ngAfterViewInit","setPermissionsByRole","detectChanges","cells","document","querySelectorAll","log","Recherche","dataApp","url","role","localStorage","getItem","dataRole","getListeMultiFonction","dataPermission","perm","status","read","add","modify","delete","forEach","cell","classList","contains","htmlCell","style","cursor","loadApplications","getSelectedApplicationId","selectedApplication","find","app","getSelectedRoleId","selectedRole","r","multiPermissions","getListeFonctionUnique","uniquePermissions","RechMultiFonction","rechFonctionMulti","filter","toLowerCase","includes","RechFonctionUnique","rechFonctionUnique","onModifierAccesFonctionMulti","index","event","i","target","span","querySelector","textContent","backgroundColor","ModifierAcces","EnregistrerAction","onModifierAccesFonctionUnique","onModifierClick","navigate","EnregistrerActionSupp","username","getJournalisations","dataJournalisations","idJournalisation","action","application","date","Date","description","journalisation","EnregistrementActions","deletePermission","confirm","scrollToTable2","table2","nativeElement","scrollIntoView","behavior","block","scrollToTable1","table1","type","dataRoles","listePermissionsPredefini","push","dataFonction","idFonction","Fonction","addPermission","__decorate","static","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Permission\\Permission.component.ts"],"sourcesContent":["import {  ChangeDetectorRef ,Component, Inject, ElementRef, ViewChild, AfterViewInit ,OnInit} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Role } from '../../Models/role.model';\r\nimport { RoleService } from '../../Services/role.service';\r\nimport { Application } from '../../Models/application.model';\r\nimport { ApplicationService } from '../../Services/application.service';\r\nimport { Permission } from '../../Models/permission.model';\r\nimport { PermissionService } from '../../Services/permission.service';\r\nimport { filter, Observable } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { JournalisationService } from '../../Services/journalisation.service';\r\nimport { UtilisateurService } from './../../Services/utilisateur.service';\r\nimport { ActionService } from '../../Services/action.service';\r\nimport { Action } from '../../Models/action.model';\r\nimport { FonctionService } from '../../Services/fonction.service';\r\nimport { Fonction } from '../../Models/fonction.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-Permission',\r\n  templateUrl: './Permission.component.html'\r\n})\r\nexport class PermissionComponent implements AfterViewInit ,OnInit {\r\n  @ViewChild('table2', { static: false }) table2: ElementRef | undefined;\r\n  @ViewChild('table1', { static: false }) table1: ElementRef | undefined;\r\n  permission: Permission = new Permission();\r\n  roles: any[] = [];\r\n  applications: any[] = [];\r\n  multiPermissions: any[] = [];\r\n  uniquePermissions: any[] = [];\r\n  rechApp: string = '';\r\n  rechRole: string = '';\r\n  rechFonctionMulti: string = '';\r\n  rechFonctionUnique: string = '';\r\n  IdApp: number = 0;\r\n  IdRole: number = 0;\r\n  i: number = 0;\r\n  listePermissionsPredefini: any[] = [];\r\n  read: boolean = false;\r\n  modify: boolean = false;\r\n  add: boolean = false;\r\n  delete: boolean = false;\r\n\r\n  constructor(private PermissionService: PermissionService, private RoleService: RoleService, private route: ActivatedRoute, private router: Router,\r\n    private ApplicationService: ApplicationService, private JournalisationService: JournalisationService, private ActionService: ActionService,\r\n    private UtilisateurService: UtilisateurService, private FonctionService: FonctionService, private cdr: ChangeDetectorRef, private ngZone: NgZone){}\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.ajouterListePermissionsPredefini();\r\n    this.ApplicationService.getApplications().subscribe((data) => {\r\n      this.applications = data;\r\n      if (this.applications && this.applications.length > 0) {\r\n        this.IdApp = this.applications[0].id;\r\n        this.rechApp = this.applications[0].nom;\r\n        this.RoleService.getRoles(this.IdApp).subscribe((data) => {\r\n          this.roles = data;\r\n          this.IdRole = this.roles[0].id;\r\n          this.rechRole = this.roles[0].nom;\r\n          this.loadPermissions();\r\n        })\r\n      }\r\n    },\r\n      (error) => { console.error('Erreur lors de la récupération des applications : ', error); });\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n    this.setPermissionsByRole();\r\n    this.cdr.detectChanges(); // Force la détection des changements\r\n    const cells = document.querySelectorAll('td.acces');\r\n    console.log(cells);\r\n  }\r\n\r\n\r\n\r\n\r\n  setPermissionsByRole() {\r\n    this.ApplicationService.Recherche(\"www.wbauth.com\").subscribe((dataApp) => {\r\n      if (dataApp[0].url == \"www.wbauth.com\") {\r\n        let role = localStorage.getItem(\"role\");\r\n        this.RoleService.Recherche(role, dataApp[0].id).subscribe((dataRole) => {\r\n          if (dataRole && dataRole.length == 1) {\r\n            this.PermissionService.getListeMultiFonction(dataApp[0].id, dataRole[0].id).subscribe((dataPermission) => {\r\n              for (const perm of dataPermission) {\r\n                if (perm.nom == \"Gestion des permissions\") {\r\n                  if (perm.status[0] === \"1\") { this.read = true; }\r\n                  if (perm.status[1] === \"1\") { this.add = true; }\r\n                  if (perm.status[2] === \"1\") { this.modify = true; }\r\n                  if (perm.status[3] === \"1\") { this.delete = true; }\r\n                  if (perm.status[2] === \"0\") {\r\n                    const cells = document.querySelectorAll('td.acces');\r\n                    cells.forEach(cell => {\r\n                      if (cell.classList.contains('acces')) {\r\n                        const htmlCell = cell as HTMLTableCellElement;\r\n                        htmlCell.classList.add(\"no-select\");\r\n                        htmlCell.style.cursor = \"not-allowed\";\r\n                      }\r\n                    });             \r\n                  }\r\n                }\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  loadApplications(){\r\n    this.ApplicationService.getApplications().subscribe((data) => { this.applications = data; },\r\n      (error) => { console.error('Erreur lors de la récupération des applications : ', error); });\r\n  }\r\n\r\n\r\n  getSelectedApplicationId(): any {\r\n    const selectedApplication = this.applications.find((app) => app.nom === this.rechApp);\r\n    if (selectedApplication) {\r\n      this.IdApp = selectedApplication.id;\r\n      this.RoleService.getRoles(this.IdApp).subscribe((data) => {\r\n        this.roles = data;\r\n        this.IdRole = this.roles[0].id;\r\n        this.rechRole = this.roles[0].nom;\r\n        this.loadPermissions();\r\n      },\r\n        (error) => { console.error('Erreur lors de la récupération des roles : ', error); });\r\n      return selectedApplication.id;\r\n    } else return 0;\r\n  }\r\n\r\n  getSelectedRoleId(): any {\r\n    const selectedRole = this.roles.find((r) => r.nom === this.rechRole);\r\n    if (selectedRole) {\r\n      this.IdRole = selectedRole.id;\r\n      this.loadPermissions();\r\n      return selectedRole.id;\r\n    } else return 0;\r\n  }\r\n\r\n  loadPermissions() {\r\n    if (this.applications.length > 0 && this.roles.length > 0){\r\n      this.PermissionService.getListeMultiFonction(this.IdApp, this.IdRole).subscribe((data) => { this.multiPermissions = data; },\r\n        (error) => { console.error('Erreur lors de la récupération des Permissions : ', error); });\r\n      this.PermissionService.getListeFonctionUnique(this.IdApp, this.IdRole).subscribe((data) => { this.uniquePermissions = data; },\r\n        (error) => { console.error('Erreur lors de la récupération des Permissions : ', error); });\r\n    }\r\n  }\r\n\r\n\r\n  RechMultiFonction(){\r\n    if (this.rechFonctionMulti == \"\") this.loadPermissions();\r\n    else {\r\n      this.PermissionService.getListeMultiFonction(this.IdApp, this.IdRole).subscribe((data) => {\r\n        this.multiPermissions = data;\r\n        this.multiPermissions = this.multiPermissions.filter(perm => {\r\n          return perm.nom.toLowerCase().includes(this.rechFonctionMulti.toLowerCase());\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  RechFonctionUnique() {\r\n    if (this.rechFonctionUnique == \"\") this.loadPermissions();\r\n    else {\r\n      this.PermissionService.getListeFonctionUnique(this.IdApp, this.IdRole).subscribe((data) => {\r\n        this.uniquePermissions = data;\r\n        this.uniquePermissions = this.uniquePermissions.filter(perm => {\r\n          return perm.nom.toLowerCase().includes(this.rechFonctionUnique.toLowerCase());\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  onModifierAccesFonctionMulti(index: number, perm: Permission, event: Event): void {\r\n    this.i = index;\r\n    const target = event.target as HTMLElement;\r\n    const span = target.querySelector('span');\r\n    if (span?.textContent === '✔') { span.textContent = '✖'; target.style.backgroundColor = 'red'; }\r\n    else if (span?.textContent === '✖') { span.textContent = '✔'; target.style.backgroundColor = '#128d3a'; }\r\n    this.PermissionService.ModifierAcces(this.IdApp, this.i, perm).subscribe(() => {\r\n      this.loadPermissions();\r\n      this.EnregistrerAction(this.IdApp, this.IdRole, \"MultiFonction\" ,perm);\r\n    });\r\n  }\r\n\r\n\r\n  onModifierAccesFonctionUnique(perm: Permission, event: Event): void {\r\n    const target = event.target as HTMLElement;\r\n    const span = target.querySelector('span');\r\n    if (span?.textContent === '✔' && perm.status == \"1\") { span.textContent = '✖'; target.style.backgroundColor = 'red'; }\r\n    else if (span?.textContent === '✖' && perm.status == \"0\") { span.textContent = '✔'; target.style.backgroundColor = '#128d3a';  }\r\n    this.PermissionService.ModifierAcces(this.IdApp, this.i, perm).subscribe(() => {\r\n      this.loadPermissions();\r\n      this.EnregistrerAction(this.IdApp, this.IdRole, \"Fonction Unique\" ,perm);\r\n    });\r\n  }\r\n\r\n\r\n  onModifierClick(id: number) { this.router.navigate(['Permission/ModifierPermission', id]); }\r\n\r\n\r\n  EnregistrerActionSupp(id: number) {\r\n    let username = localStorage.getItem(\"username\");\r\n    this.UtilisateurService.Recherche(username).subscribe((data) => {\r\n      this.JournalisationService.getJournalisations(data[0].id).subscribe((dataJournalisations) => {\r\n        let idJournalisation = dataJournalisations[dataJournalisations.length - 1].id;\r\n        const action: Action = {\r\n          id: 0, application: \"www.wbauth.com\", date: new Date(), description: `l'utilisateur ${username} a supprimer la permission avec l'id '${id}' du role '${this.rechRole}' dans l'application '${this.rechApp}' avec l'id '${this.IdApp}'`,\r\n          idJournalisation: idJournalisation, journalisation: dataJournalisations[dataJournalisations.length - 1]\r\n        }\r\n        this.ActionService.EnregistrementActions(action).subscribe(() => { console.log(action); });\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  deletePermission(id: number) {\r\n    if (confirm('Voulez-vous vraiment supprimer ce Permission ?')) {\r\n      this.PermissionService.deletePermission(id).subscribe(() => {\r\n        this.loadPermissions();\r\n        this.EnregistrerActionSupp(id);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  scrollToTable2() {  if (this.table2) {  this.table2.nativeElement.scrollIntoView({ behavior: 'smooth', block: 'start' }); }}\r\n  scrollToTable1() {  if (this.table1) { this.table1.nativeElement.scrollIntoView({ behavior: 'smooth', block: 'start' }); }}\r\n\r\n\r\n\r\n  EnregistrerAction(IdApp: number ,IdRole: number ,type: string ,perm: Permission){\r\n    let username = localStorage.getItem(\"username\");\r\n    this.UtilisateurService.Recherche(username).subscribe((data) => {\r\n      this.JournalisationService.getJournalisations(data[0].id).subscribe((dataJournalisations) => {\r\n        let idJournalisation = dataJournalisations[dataJournalisations.length - 1].id;\r\n        if (type === \"MultiFonction\"){\r\n          const action: Action = {\r\n            id: 0, application: \"www.wbauth.com\", date: new Date(),\r\n            description: `l'utilisateur ${username} a modifier la permission '${perm.nom}' du role avec l'id '${IdRole}' de l'application avec l'id '${IdApp}'  `,\r\n            idJournalisation: idJournalisation, journalisation: dataJournalisations[dataJournalisations.length - 1]\r\n          }\r\n          this.ActionService.EnregistrementActions(action).subscribe(() => { console.log(action); });\r\n        }\r\n        else if (type === \"Fonction Unique\"){\r\n          const action: Action = {\r\n            id: 0, application: \"www.wbauth.com\", date: new Date(),\r\n            description: `l'utilisateur ${username} a modifier la permission '${perm.nom}' du role avec l'id '${IdRole}' de l'application avec l'id '${IdApp}'  `,\r\n            idJournalisation: idJournalisation, journalisation: dataJournalisations[dataJournalisations.length - 1]\r\n          }\r\n          this.ActionService.EnregistrementActions(action).subscribe(() => { console.log(action); });\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  ajouterListePermissionsPredefini() {\r\n    this.ApplicationService.Recherche(\"www.wbauth.com\").subscribe((dataApp) => {\r\n      if (dataApp[0].url == \"www.wbauth.com\") {\r\n        this.RoleService.getRoles(dataApp[0].id).subscribe((dataRoles) => {\r\n          for (const role of dataRoles) {\r\n            if (role.nom == \"Utilisateur\" || role.nom == \"utilisateur\") {\r\n              this.listePermissionsPredefini = [];\r\n              this.listePermissionsPredefini.push(\r\n                new Permission(0, 'Gestion des applications', '100000', role.id, role, 0, null),\r\n                new Permission(0, 'Gestion des fonctions', '100000', role.id, role, 0, null),\r\n                new Permission(0, 'Gestion des roles', '100000', role.id, role, 0, null),\r\n                new Permission(0, 'Gestion des permissions', '100000', role.id, role, 0, null),\r\n                new Permission(0, 'Gestion des utilisateurs', '100000', role.id, role, 0, null),\r\n                new Permission(0, 'Consulter la liste des accès utilisateurs', '0', role.id, role, 0, null),\r\n                new Permission(0, 'Modifier la liste des accès d\\'un utilisateur', '0', role.id, role, 0, null),\r\n                new Permission(0, 'Consulter la journalisation d\\'un utilisateur', '0', role.id, role, 0, null),\r\n                new Permission(0, 'Modifier son compte utilisateur', '1', role.id, role, 0, null),\r\n              );\r\n              for (const perm of this.listePermissionsPredefini) {\r\n                if (perm.status.length > 2) {\r\n                  this.PermissionService.RechMultiFonction(perm.nom, dataApp[0].id, role.id).subscribe((dataPermission) => {\r\n                    if (dataPermission && dataPermission.length < 1) {\r\n                      this.FonctionService.Recherche(perm.nom, dataApp[0].id).subscribe((dataFonction) => {\r\n                        perm.idFonction = dataFonction[0].id;\r\n                        perm.Fonction = dataFonction[0];\r\n                        this.PermissionService.addPermission(perm).subscribe(() => { });\r\n                      });\r\n                    }\r\n                  });\r\n                }\r\n                else if (perm.status.length < 2) {\r\n                  this.PermissionService.RechFonctionUnique(perm.nom, dataApp[0].id, role.id).subscribe((dataPermission) => {\r\n                    if (dataPermission && dataPermission.length < 1) {\r\n                      this.FonctionService.Recherche(perm.nom, dataApp[0].id).subscribe((dataFonction) => {\r\n                        perm.idFonction = dataFonction[0].id;\r\n                        perm.Fonction = dataFonction[0];\r\n                        this.PermissionService.addPermission(perm).subscribe(() => { });\r\n                      });   \r\n                    }    \r\n                  });  \r\n                }   \r\n              }    \r\n            }\r\n\r\n            else if (role.nom == \"Administrateur\" || role.nom == \"administrateur\") {\r\n              this.listePermissionsPredefini = [];\r\n              this.listePermissionsPredefini.push(\r\n                new Permission(0, 'Gestion des applications', '100000', role.id, role, 0, null),\r\n                new Permission(0, 'Gestion des fonctions', '100011', role.id, role, 0, null),\r\n                new Permission(0, 'Gestion des roles', '100011', role.id, role, 0, null),\r\n                new Permission(0, 'Gestion des permissions', '100011', role.id, role, 0, null),\r\n                new Permission(0, 'Gestion des utilisateurs', '111111', role.id, role, 0, null),\r\n                new Permission(0, 'Consulter la liste des accès utilisateurs', '1', role.id, role, 0, null),\r\n                new Permission(0, 'Modifier la liste des accès d\\'un utilisateur', '1', role.id, role, 0, null),\r\n                new Permission(0, 'Consulter la journalisation d\\'un utilisateur', '1', role.id, role, 0, null),\r\n                new Permission(0, 'Modifier son compte utilisateur', '1', role.id, role, 0, null),\r\n              );\r\n              for (const perm of this.listePermissionsPredefini) {\r\n                if (perm.status.length > 2) {\r\n                  this.PermissionService.RechMultiFonction(perm.nom, dataApp[0].id, role.id).subscribe((dataPermission) => {\r\n                    if (dataPermission && dataPermission.length < 1) {\r\n                      this.FonctionService.Recherche(perm.nom, dataApp[0].id).subscribe((dataFonction) => {\r\n                        perm.idFonction = dataFonction[0].id;\r\n                        perm.Fonction = dataFonction[0];\r\n                        this.PermissionService.addPermission(perm).subscribe(() => { });\r\n                      });\r\n                    }\r\n                  });\r\n                }\r\n                else if (perm.status.length < 2) {\r\n                  this.PermissionService.RechFonctionUnique(perm.nom, dataApp[0].id, role.id).subscribe((dataPermission) => {\r\n                    if (dataPermission && dataPermission.length < 1) {\r\n                      this.FonctionService.Recherche(perm.nom, dataApp[0].id).subscribe((dataFonction) => {\r\n                        perm.idFonction = dataFonction[0].id;\r\n                        perm.Fonction = dataFonction[0];\r\n                        this.PermissionService.addPermission(perm).subscribe(() => { });\r\n                      });\r\n                    }\r\n                  });\r\n                }\r\n              }\r\n            }\r\n\r\n            else if (role.nom == \"Super-Administrateur\" || role.nom == \"Super-administrateur\" || role.nom == \"super-administrateur\"\r\n              || role.nom == \"Super Administrateur\" || role.nom == \"Super administrateur\" || role.nom == \"super administrateur\") {\r\n              this.listePermissionsPredefini = [];\r\n              this.listePermissionsPredefini.push(\r\n                new Permission(0, 'Gestion des applications', '111111', role.id, role, 0, null),\r\n                new Permission(0, 'Gestion des fonctions', '111111', role.id, role, 0, null),\r\n                new Permission(0, 'Gestion des roles', '111111', role.id, role, 0, null),\r\n                new Permission(0, 'Gestion des permissions', '111111', role.id, role, 0, null),\r\n                new Permission(0, 'Gestion des utilisateurs', '111111', role.id, role, 0, null),\r\n                new Permission(0, 'Consulter la liste des accès utilisateurs', '1', role.id, role, 0, null),\r\n                new Permission(0, 'Modifier la liste des accès d\\'un utilisateur', '1', role.id, role, 0, null),\r\n                new Permission(0, 'Consulter la journalisation d\\'un utilisateur', '1', role.id, role, 0, null),\r\n                new Permission(0, 'Modifier son compte utilisateur', '1', role.id, role, 0, null),\r\n              );\r\n              for (const perm of this.listePermissionsPredefini) {\r\n                if (perm.status.length > 2) {\r\n                  this.PermissionService.RechMultiFonction(perm.nom, dataApp[0].id, role.id).subscribe((dataPermission) => {\r\n                    if (dataPermission && dataPermission.length < 1) {\r\n                      this.FonctionService.Recherche(perm.nom, dataApp[0].id).subscribe((dataFonction) => {\r\n                        perm.idFonction = dataFonction[0].id;\r\n                        perm.Fonction = dataFonction[0];\r\n                        this.PermissionService.addPermission(perm).subscribe(() => { });\r\n                      });\r\n                    }\r\n                  });\r\n                }\r\n                else if (perm.status.length < 2) {\r\n                  this.PermissionService.RechFonctionUnique(perm.nom, dataApp[0].id, role.id).subscribe((dataPermission) => {\r\n                    if (dataPermission && dataPermission.length < 1) {\r\n                      this.FonctionService.Recherche(perm.nom, dataApp[0].id).subscribe((dataFonction) => {\r\n                        perm.idFonction = dataFonction[0].id;\r\n                        perm.Fonction = dataFonction[0];\r\n                        this.PermissionService.addPermission(perm).subscribe(() => { });\r\n                      });\r\n                    }\r\n                  });\r\n                }\r\n              }\r\n            }\r\n\r\n          }   \r\n        });  \r\n      }    \r\n    });  \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}