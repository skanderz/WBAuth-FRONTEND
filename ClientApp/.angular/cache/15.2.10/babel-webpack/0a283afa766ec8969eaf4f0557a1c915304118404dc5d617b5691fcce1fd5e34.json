{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet ForgotPassword = class ForgotPassword {\n  constructor(UtilisateurService) {\n    this.UtilisateurService = UtilisateurService;\n    this.validateControl = controlName => {\n      return this.forgotPasswordForm.get(controlName).invalid && this.forgotPasswordForm.get(controlName).touched;\n    };\n    this.hasError = (controlName, errorName) => {\n      return this.forgotPasswordForm.get(controlName).hasError(errorName);\n    };\n    this.forgotPassword = forgotPasswordFormValue => {\n      this.showError = this.showSuccess = false;\n      const forgotPass = {\n        ...forgotPasswordFormValue\n      };\n      const forgotPassDto = {\n        email: forgotPass.email,\n        clientURI: 'http://localhost:4200/resetPassword'\n      };\n      this.UtilisateurService.forgotPassword(forgotPassDto).subscribe({\n        next: _ => {\n          this.showSuccess = true;\n          this.successMessage = 'Le lien a été envoyé, veuillez vérifier votre courrier électronique pour réinitialiser votre mot de passe.';\n        },\n        error: err => {\n          this.showError = true;\n          this.errorMessage = err.message;\n        }\n      });\n    };\n  }\n  ngOnInit() {\n    this.forgotPasswordForm = new FormGroup({\n      email: new FormControl(\"\", [Validators.required])\n    });\n  }\n};\nForgotPassword = __decorate([Component({\n  selector: 'app-ForgotPassword',\n  templateUrl: './ForgotPassword.component.html'\n})], ForgotPassword);\nexport { ForgotPassword };","map":{"version":3,"mappings":";AAGA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAQ5D,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAOzBC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IAO/B,oBAAe,GAAIC,WAAmB,IAAI;MAC/C,OAAO,IAAI,CAACC,kBAAkB,CAACC,GAAG,CAACF,WAAW,CAAE,CAACG,OAAO,IAAI,IAAI,CAACF,kBAAkB,CAACC,GAAG,CAACF,WAAW,CAAE,CAACI,OAAO;IAC/G,CAAC;IAGM,aAAQ,GAAG,CAACJ,WAAmB,EAAEK,SAAiB,KAAI;MAC3D,OAAO,IAAI,CAACJ,kBAAkB,CAACC,GAAG,CAACF,WAAW,CAAE,CAACM,QAAQ,CAACD,SAAS,CAAC;IACtE,CAAC;IAGM,mBAAc,GAAIE,uBAA4B,IAAI;MACvD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,WAAW,GAAG,KAAK;MACzC,MAAMC,UAAU,GAAG;QAAE,GAAGH;MAAuB,CAAE;MACjD,MAAMI,aAAa,GAAoB;QACrCC,KAAK,EAAEF,UAAU,CAACE,KAAK;QACvBC,SAAS,EAAE;OACZ;MACD,IAAI,CAACd,kBAAkB,CAACe,cAAc,CAACH,aAAa,CAAC,CAACI,SAAS,CAAC;QAC5DC,IAAI,EAAGC,CAAC,IAAI;UACV,IAAI,CAACR,WAAW,GAAG,IAAI;UACvB,IAAI,CAACS,cAAc,GAAG,4GAA4G;QACpI,CAAC;QACDC,KAAK,EAAGC,GAAsB,IAAI;UAChC,IAAI,CAACZ,SAAS,GAAG,IAAI;UACrB,IAAI,CAACa,YAAY,GAAGD,GAAG,CAACE,OAAO;QACjC;OACD,CAAC;IACN,CAAC;EAlC2D;EAE5DC,QAAQ;IACN,IAAI,CAACtB,kBAAkB,GAAG,IAAIP,SAAS,CAAC;MAAGkB,KAAK,EAAE,IAAIjB,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAAC4B,QAAQ,CAAC;IAAC,CAAI,CAAC;EACnG;CA+BD;AA1CY3B,cAAc,eAL1BJ,SAAS,CAAC;EACTgC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE;CACd,CAAC,GAEW7B,cAAc,CA0C1B;SA1CYA,cAAc","names":["Component","FormGroup","FormControl","Validators","ForgotPassword","constructor","UtilisateurService","controlName","forgotPasswordForm","get","invalid","touched","errorName","hasError","forgotPasswordFormValue","showError","showSuccess","forgotPass","forgotPassDto","email","clientURI","forgotPassword","subscribe","next","_","successMessage","error","err","errorMessage","message","ngOnInit","required","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\AccueilPrincipale\\Authentification\\forgot-password.component.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { IForgotPassword } from '../../auth/forgotPassword.interface';\r\nimport { UtilisateurService } from './../../Services/utilisateur.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ForgotPassword',\r\n  templateUrl: './ForgotPassword.component.html',\r\n})\r\n\r\nexport class ForgotPassword implements OnInit {\r\n  forgotPasswordForm!: FormGroup;\r\n  successMessage!: string;\r\n  errorMessage!: string;\r\n  showSuccess!: boolean;\r\n  showError!: boolean;\r\n\r\n  constructor(private UtilisateurService: UtilisateurService){}\r\n\r\n  ngOnInit(): void {\r\n    this.forgotPasswordForm = new FormGroup({  email: new FormControl(\"\", [Validators.required])   })\r\n  }\r\n\r\n\r\n  public validateControl = (controlName: string) => {\r\n    return this.forgotPasswordForm.get(controlName)!.invalid && this.forgotPasswordForm.get(controlName)!.touched\r\n  }\r\n\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.forgotPasswordForm.get(controlName)!.hasError(errorName)\r\n  }\r\n\r\n\r\n  public forgotPassword = (forgotPasswordFormValue: any) => {\r\n    this.showError = this.showSuccess = false;\r\n    const forgotPass = { ...forgotPasswordFormValue };\r\n    const forgotPassDto: IForgotPassword = {\r\n      email: forgotPass.email,\r\n      clientURI: 'http://localhost:4200/resetPassword'\r\n    }\r\n    this.UtilisateurService.forgotPassword(forgotPassDto).subscribe({\r\n        next: (_) => {\r\n          this.showSuccess = true;\r\n          this.successMessage = 'Le lien a été envoyé, veuillez vérifier votre courrier électronique pour réinitialiser votre mot de passe.'\r\n        },\r\n        error: (err: HttpErrorResponse) => {\r\n          this.showError = true;\r\n          this.errorMessage = err.message;\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}