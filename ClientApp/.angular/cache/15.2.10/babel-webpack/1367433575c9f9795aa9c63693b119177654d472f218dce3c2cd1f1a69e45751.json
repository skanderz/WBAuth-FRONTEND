{"ast":null,"code":"import { Fonction } from '../../../Models/fonction.model';\nimport { Role } from '../../../Models/role.model';\nimport { Application } from '../../../Models/application.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../Services/permission.service\";\nimport * as i2 from \"../../../Services/fonction.service\";\nimport * as i3 from \"../../../Services/role.service\";\nimport * as i4 from \"../../../Services/application.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nfunction ModifierPermissionComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \"\");\n  }\n}\nconst _c0 = function () {\n  return [\"/Permission\"];\n};\nexport class ModifierPermissionComponent {\n  constructor(PermissionService, FonctionService, RoleService, ApplicationService, router, route) {\n    this.PermissionService = PermissionService;\n    this.FonctionService = FonctionService;\n    this.RoleService = RoleService;\n    this.ApplicationService = ApplicationService;\n    this.router = router;\n    this.route = route;\n    this.role = new Role();\n    this.fonction = new Fonction();\n    this.application = new Application();\n    this.oldPermission = \"\";\n    this.errorMessage = '';\n    this.showError = false;\n  }\n  ngOnInit() {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam) {\n      const id = +idParam;\n      if (!isNaN(id)) {\n        this.PermissionService.getMultiFonction(id).subscribe(data => {\n          if (data) {\n            this.permission = data;\n            this.oldPermission = this.permission.nom;\n            this.FonctionService.getFonction(this.permission.idFonction).subscribe(data => {\n              if (data) {\n                this.fonction = data;\n              }\n              this.ApplicationService.getApplication(this.fonction.idApplication).subscribe(data => {\n                if (data) {\n                  this.application = data;\n                  this.RoleService.getRole(this.permission.idRole).subscribe(data => {\n                    this.role = data;\n                  });\n                }\n              });\n            });\n          } else {\n            this.PermissionService.getFonctionUnique(id).subscribe(data => {\n              if (data) {\n                this.permission = data;\n                this.oldPermission = this.permission.nom;\n                this.FonctionService.getFonction(this.permission.idFonction).subscribe(data => {\n                  if (data) {\n                    this.fonction = data;\n                  }\n                  this.ApplicationService.getApplication(this.fonction.idApplication).subscribe(data => {\n                    if (data) {\n                      this.application = data;\n                      this.RoleService.getRole(this.permission.idRole).subscribe(data => {\n                        this.role = data;\n                      });\n                    }\n                  });\n                });\n              }\n            });\n          }\n        });\n      } else {\n        console.error('La valeur du paramètre \"id\" n\\'est pas un nombre valide.');\n      }\n    } else {\n      console.error('Le paramètre \"id\" est manquant dans l\\'URL.');\n    }\n  }\n  onSubmit() {\n    this.PermissionService.RechFonctionUnique(this.permission.nom, this.application.id, this.permission.idRole).subscribe(PermUniqueList => {\n      this.PermissionService.RechMultiFonction(this.permission.nom, this.application.id, this.permission.idRole).subscribe(PermMultiList => {\n        if (PermUniqueList.length != 0 && this.oldPermission || PermMultiList.length != 0 && this.permission.nom != this.oldPermission) {\n          this.errorMessage = \"Une permission avec ce nom existe déjà avec le role \" + this.role.nom + \" !\";\n          this.showError = true;\n        } else {\n          this.PermissionService.updatePermission(this.permission).subscribe(response => {\n            if (response) {\n              console.log(this.permission);\n              this.router.navigate(['/Permission']);\n            }\n          });\n        }\n      });\n    });\n  }\n  static #_ = this.ɵfac = function ModifierPermissionComponent_Factory(t) {\n    return new (t || ModifierPermissionComponent)(i0.ɵɵdirectiveInject(i1.PermissionService), i0.ɵɵdirectiveInject(i2.FonctionService), i0.ɵɵdirectiveInject(i3.RoleService), i0.ɵɵdirectiveInject(i4.ApplicationService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierPermissionComponent,\n    selectors: [[\"app-ModifierPermission\"]],\n    decls: 34,\n    vars: 7,\n    consts: [[1, \"background-titre\"], [1, \"ajouter-content\"], [1, \"ajouter-entete\"], [1, \"modifier-return\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-angles-left\"], [1, \"modifier-titre\"], [1, \"yellow-border\", 3, \"ngSubmit\"], [1, \"form-content\"], [\"style\", \"transform:translateX(10px); \", \"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"form-content-rows\"], [\"for\", \"nomApp\"], [\"type\", \"text\", \"id\", \"nomApp\", \"name\", \"nomApp\", \"readonly\", \"\", 1, \"yellow-border\", 2, \"cursor\", \"not-allowed\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"type\"], [\"type\", \"text\", \"id\", \"nomFonc\", \"name\", \"nomFonc\", \"readonly\", \"\", 1, \"yellow-border\", 2, \"cursor\", \"not-allowed\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"nom\"], [\"type\", \"text\", \"id\", \"nomRole\", \"name\", \"nomRole\", \"readonly\", \"\", 1, \"yellow-border\", 2, \"cursor\", \"not-allowed\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"nom\", \"name\", \"nom\", \"required\", \"\", 1, \"yellow-border\", 3, \"ngModel\", \"ngModelChange\"], [1, \"no-select\"], [\"type\", \"submit\", 1, \"valider\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", 2, \"transform\", \"translateX(10px)\"]],\n    template: function ModifierPermissionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \" GESTION DES PERMISSIONS \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3);\n        i0.ɵɵelement(6, \"i\", 4);\n        i0.ɵɵtext(7, \" RETURN \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵtext(9, \" MODIFICATION DE LA PERMISSION \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function ModifierPermissionComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵtemplate(12, ModifierPermissionComponent_div_12_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementStart(13, \"div\", 9)(14, \"label\", 10);\n        i0.ɵɵtext(15, \"APPLICATION :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierPermissionComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.application.nom = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 9)(18, \"label\", 12);\n        i0.ɵɵtext(19, \"FONCTION :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierPermissionComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.fonction.type = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 9)(22, \"label\", 14);\n        i0.ɵɵtext(23, \"R\\u00D4LE :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierPermissionComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.role.nom = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"div\", 9)(26, \"label\", 14);\n        i0.ɵɵtext(27, \"NOM :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"input\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierPermissionComponent_Template_input_ngModelChange_28_listener($event) {\n          return ctx.permission.nom = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 9);\n        i0.ɵɵelement(30, \"label\", 17);\n        i0.ɵɵelementStart(31, \"div\")(32, \"button\", 18);\n        i0.ɵɵtext(33, \"VALIDER\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.application.nom);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.fonction.type);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.role.nom);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.permission.nom);\n      }\n    },\n    dependencies: [i6.NgIf, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.NgModel, i7.NgForm, i5.RouterLink],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["Fonction","Role","Application","i0","ModifierPermissionComponent","constructor","PermissionService","FonctionService","RoleService","ApplicationService","router","route","ngOnInit","idParam","snapshot","paramMap","get","id","isNaN","getMultiFonction","subscribe","data","permission","oldPermission","nom","getFonction","idFonction","fonction","getApplication","idApplication","application","getRole","idRole","role","getFonctionUnique","console","error","onSubmit","RechFonctionUnique","PermUniqueList","RechMultiFonction","PermMultiList","length","errorMessage","showError","updatePermission","response","log","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Permission\\Modifier\\ModifierPermission.component.ts","C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Permission\\Modifier\\ModifierPermission.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PermissionService } from '../../../Services/permission.service';\r\nimport { FonctionService } from '../../../Services/fonction.service';\r\nimport { ApplicationService } from '../../../Services/application.service';\r\nimport { RoleService } from '../../../Services/role.service';\r\nimport { Permission } from '../../../Models/permission.model';\r\nimport { Fonction } from '../../../Models/fonction.model';\r\nimport { Role } from '../../../Models/role.model';\r\nimport { Application } from '../../../Models/application.model';\r\n\r\n@Component({\r\n  selector: 'app-ModifierPermission',\r\n  templateUrl: './ModifierPermission.component.html'\r\n})\r\nexport class ModifierPermissionComponent implements OnInit {\r\n  public permission: any;\r\n  public role: Role = new Role();\r\n  public fonction: Fonction = new Fonction();\r\n  public application: Application = new Application();\r\n  oldPermission: string | null = \"\";\r\n  errorMessage: string = '';\r\n  showError: boolean = false;\r\n  constructor(private PermissionService: PermissionService, private FonctionService: FonctionService, private RoleService:RoleService\r\n            , private ApplicationService: ApplicationService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    const idParam = this.route.snapshot.paramMap.get('id');\r\n    if (idParam) {\r\n      const id = +idParam;\r\n      if (!isNaN(id)) {\r\n        this.PermissionService.getMultiFonction(id).subscribe((data) => {\r\n          if (data) {\r\n            this.permission = data;\r\n            this.oldPermission = this.permission.nom;\r\n            this.FonctionService.getFonction(this.permission.idFonction).subscribe((data) => {\r\n              if (data) { this.fonction = data; }\r\n              this.ApplicationService.getApplication(this.fonction.idApplication).subscribe((data) => {\r\n                if (data) {\r\n                  this.application = data;\r\n                  this.RoleService.getRole(this.permission.idRole).subscribe((data) => {\r\n                    this.role = data;\r\n                  });\r\n                }\r\n              });\r\n            });\r\n          }\r\n          else {\r\n            this.PermissionService.getFonctionUnique(id).subscribe((data) => {\r\n              if (data) {\r\n                this.permission = data;\r\n                this.oldPermission = this.permission.nom;\r\n                this.FonctionService.getFonction(this.permission.idFonction).subscribe((data) => {\r\n                  if (data) { this.fonction = data; }\r\n                  this.ApplicationService.getApplication(this.fonction.idApplication).subscribe((data) => {\r\n                    if (data) {\r\n                      this.application = data;\r\n                      this.RoleService.getRole(this.permission.idRole).subscribe((data) => {\r\n                        this.role = data;\r\n                      });\r\n                    }\r\n                  });\r\n                });\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      else { console.error('La valeur du paramètre \"id\" n\\'est pas un nombre valide.'); }\r\n    }\r\n    else { console.error('Le paramètre \"id\" est manquant dans l\\'URL.'); }\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.PermissionService.RechFonctionUnique(this.permission.nom, this.application.id, this.permission.idRole).subscribe((PermUniqueList) => {\r\n      this.PermissionService.RechMultiFonction(this.permission.nom, this.application.id, this.permission.idRole).subscribe((PermMultiList) => {\r\n        if (PermUniqueList.length != 0 && this.oldPermission || PermMultiList.length != 0 && this.permission.nom != this.oldPermission) {\r\n          this.errorMessage = \"Une permission avec ce nom existe déjà avec le role \" + this.role.nom + \" !\";\r\n          this.showError = true;\r\n        }\r\n        else {\r\n          this.PermissionService.updatePermission(this.permission).subscribe((response) => {\r\n            if (response) { console.log(this.permission); this.router.navigate(['/Permission']); }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div class=\"background-titre\"> <h1> GESTION DES PERMISSIONS </h1> </div>\r\n\r\n\r\n<div class=\"ajouter-content\">\r\n\r\n  <div class=\"ajouter-entete\">\r\n    <div class=\"modifier-return\" [routerLink]=\"['/Permission']\"> <i class=\"fa-solid fa-angles-left\"></i> RETURN </div>\r\n    <div class=\"modifier-titre\"> MODIFICATION DE LA PERMISSION </div>\r\n  </div>\r\n\r\n\r\n  <form (ngSubmit)=\"onSubmit()\" class=\"yellow-border\">\r\n    <div class=\"form-content\">\r\n\r\n      <div style=\"transform:translateX(10px); \" *ngIf=\"showError\" class=\"alert alert-danger\" role=\"alert\"> {{errorMessage}}</div>\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"nomApp\">APPLICATION :</label>\r\n        <input class=\"yellow-border\" type=\"text\" id=\"nomApp\" name=\"nomApp\" [(ngModel)]=\"application.nom\" style=\"cursor:not-allowed\" readonly>\r\n      </div>\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"type\">FONCTION :</label>\r\n        <input class=\"yellow-border\" type=\"text\" id=\"nomFonc\" name=\"nomFonc\" [(ngModel)]=\"fonction.type\" style=\"cursor:not-allowed\" readonly>\r\n      </div>\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"nom\">RÔLE :</label>\r\n        <input class=\"yellow-border\" type=\"text\" id=\"nomRole\" name=\"nomRole\" [(ngModel)]=\"role.nom\" style=\"cursor:not-allowed\" readonly>\r\n      </div>\r\n\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"nom\">NOM :</label>\r\n        <input class=\"yellow-border\" type=\"text\" id=\"nom\" name=\"nom\" [(ngModel)]=\"permission.nom\" required>\r\n      </div>\r\n\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label class=\"no-select\"></label> <div> <button type=\"submit\" class=\"valider\">VALIDER</button> </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  </form>\r\n\r\n\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}