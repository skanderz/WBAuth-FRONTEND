{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../../Services/utilisateur.service\";\nexport class LinkedInResponseComponent {\n  constructor(router, ngZone, http, UtilisateurService, route) {\n    this.router = router;\n    this.ngZone = ngZone;\n    this.http = http;\n    this.UtilisateurService = UtilisateurService;\n    this.route = route;\n    this.apiUrl = environment.apiUrl + 'Utilisateur';\n    this.urlCallback = \"https://localhost:44429/LinkedIn\";\n    this.linkedInToken = \"\";\n  }\n  ngOnInit() {\n    this.linkedInToken = this.route.snapshot.queryParams[\"code\"];\n    console.log(this.linkedInToken);\n  }\n  getCode() {\n    let url = \"https://www.linkedin.com/oauth/v2/accessToken\";\n    let queryParams = {\n      grant_type: \"authorization_code\",\n      code: this.linkedInToken,\n      redirect_uri: this.urlCallback,\n      client_id: \"86pe6918u7eg1h\",\n      client_secret: \"Gpg4qLShgX0xVNim\"\n    };\n    this.http.post(url, {\n      params: queryParams\n    }).subscribe(data => {\n      console.log(data);\n    });\n    //this.http.post(url, { params: queryParams }).subscribe((data: any) => { console.log(data); });\n  }\n\n  exchangeCodeForToken(code) {\n    const params = new HttpParams().set('grant_type', 'authorization_code').set('code', this.linkedInToken).set('redirect_uri', this.urlCallback).set('client_id', '86pe6918u7eg1h').set('client_secret', 'Gpg4qLShgX0xVNim');\n    const headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n    return this.http.post(this.accessTokenUrl, params.toString(), {\n      headers\n    });\n  }\n  getUserInfo(accessToken) {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${accessToken}`);\n    return this.http.get(this.userInfoUrl, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function LinkedInResponseComponent_Factory(t) {\n    return new (t || LinkedInResponseComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.UtilisateurService), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LinkedInResponseComponent,\n    selectors: [[\"app-LinkedInResponse\"]],\n    decls: 8,\n    vars: 0,\n    consts: [[1, \"AccueilContent\", 2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\"], [2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\", \"background-color\", \"#0E1F31\", \"width\", \"100%\", \"height\", \"100%\"], [\"src\", \"../../assets/Images/WBConcept-AccueilPrincipale.png\", 2, \"width\", \"100%\"], [1, \"centered-element\", 2, \"cursor\", \"pointer\", \"border\", \"solid 2px white\", \"border-radius\", \"5px\", \"padding\", \"10px\", \"margin\", \"0px 150px 0px 150px\", 3, \"click\"]],\n    template: function LinkedInResponseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\");\n        i0.ɵɵelement(3, \"img\", 2)(4, \"br\")(5, \"br\");\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵlistener(\"click\", function LinkedInResponseComponent_Template_div_click_6_listener() {\n          return ctx.getCode();\n        });\n        i0.ɵɵtext(7, \" CODE \");\n        i0.ɵɵelementEnd()()()();\n      }\n    },\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"AAGA,SAAqBA,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;AAE1E,SAASC,WAAW,QAAQ,mCAAmC;;;;;AAS/D,OAAM,MAAOC,yBAAyB;EAKpCC,YAAoBC,MAAc,EAAUC,MAAc,EAAUC,IAAgB,EAASC,kBAAsC,EAAUC,KAAqB;IAA9I,WAAM,GAANJ,MAAM;IAAkB,WAAM,GAANC,MAAM;IAAkB,SAAI,GAAJC,IAAI;IAAqB,uBAAkB,GAAlBC,kBAAkB;IAA8B,UAAK,GAALC,KAAK;IAJ1I,WAAM,GAAGP,WAAW,CAACQ,MAAM,GAAG,aAAa;IAC3C,gBAAW,GAAG,kCAAkC;IACxD,kBAAa,GAAG,EAAE;EAEmJ;EAGrKC,QAAQ;IACL,IAAI,CAACC,aAAa,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,WAAW,CAAC,MAAM,CAAC;IAC5DC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,aAAa,CAAC;EAClC;EAEAK,OAAO;IACL,IAAIC,GAAG,GAAG,+CAA+C;IACzD,IAAIJ,WAAW,GAAG;MAChBK,UAAU,EAAE,oBAAoB;MAChCC,IAAI,EAAE,IAAI,CAACR,aAAa;MACxBS,YAAY,EAAE,IAAI,CAACC,WAAW;MAC9BC,SAAS,EAAE,gBAAgB;MAC3BC,aAAa,EAAE;KAChB;IACD,IAAI,CAACjB,IAAI,CAACkB,IAAI,CAACP,GAAG,EAAE;MAAEQ,MAAM,EAAEZ;IAAW,CAAE,CAAC,CAACa,SAAS,CAAEC,IAAS,IAAI;MAAGb,OAAO,CAACC,GAAG,CAACY,IAAI,CAAC;IAAE,CAAC,CAAC;IAC7F;EACF;;EAGAC,oBAAoB,CAACT,IAAY;IAC/B,MAAMM,MAAM,GAAG,IAAIzB,UAAU,EAAE,CAC5B6B,GAAG,CAAC,YAAY,EAAE,oBAAoB,CAAC,CACvCA,GAAG,CAAC,MAAM,EAAE,IAAI,CAAClB,aAAa,CAAC,CAC/BkB,GAAG,CAAC,cAAc,EAAE,IAAI,CAACR,WAAW,CAAC,CACrCQ,GAAG,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAClCA,GAAG,CAAC,eAAe,EAAE,kBAAkB,CAAC;IAE3C,MAAMC,OAAO,GAAG,IAAI/B,WAAW,EAAE,CAC9B8B,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC;IAE3D,OAAO,IAAI,CAACvB,IAAI,CAACkB,IAAI,CAAC,IAAI,CAACO,cAAc,EAAEN,MAAM,CAACO,QAAQ,EAAE,EAAE;MAAEF;IAAO,CAAE,CAAC;EAC5E;EAEAG,WAAW,CAACC,WAAmB;IAC7B,MAAMJ,OAAO,GAAG,IAAI/B,WAAW,EAAE,CAC9B8B,GAAG,CAAC,eAAe,EAAE,UAAUK,WAAW,EAAE,CAAC;IAEhD,OAAO,IAAI,CAAC5B,IAAI,CAAC6B,GAAG,CAAC,IAAI,CAACC,WAAW,EAAE;MAAEN;IAAO,CAAE,CAAC;EACrD;EAAC;qBA9CU5B,yBAAyB;EAAA;EAAA;UAAzBA,yBAAyB;IAAAmC;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCdtCC,8BAA8F;QAGxFA,yBAAsF;QAEtFA,8BAA8J;QAApBA;UAAA,OAASC,aAAS;QAAA,EAAC;QACzJD,sBACJ;QAAAA,iBAAM","names":["HttpHeaders","HttpParams","environment","LinkedInResponseComponent","constructor","router","ngZone","http","UtilisateurService","route","apiUrl","ngOnInit","linkedInToken","snapshot","queryParams","console","log","getCode","url","grant_type","code","redirect_uri","urlCallback","client_id","client_secret","post","params","subscribe","data","exchangeCodeForToken","set","headers","accessTokenUrl","toString","getUserInfo","accessToken","get","userInfoUrl","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\AccueilPrincipale\\Authentification\\LinkedInResponse.component.ts","C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\AccueilPrincipale\\Authentification\\LinkedInResponse.component.html"],"sourcesContent":["import { Component, NgModule, OnInit, NgZone } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UtilisateurService } from '../../Services/utilisateur.service';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Response } from './../../auth/response.interface';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-LinkedInResponse',\r\n  templateUrl: './LinkedInResponse.component.html',\r\n})\r\n\r\nexport class LinkedInResponseComponent implements OnInit {\r\n  private apiUrl = environment.apiUrl + 'Utilisateur'; \r\n  private urlCallback = \"https://localhost:44429/LinkedIn\";\r\n  linkedInToken = \"\";\r\n\r\n  constructor(private router: Router, private ngZone: NgZone, private http: HttpClient,private UtilisateurService: UtilisateurService, private route: ActivatedRoute ){}\r\n\r\n\r\n  ngOnInit(): void {\r\n     this.linkedInToken = this.route.snapshot.queryParams[\"code\"];\r\n     console.log(this.linkedInToken);\r\n  }\r\n\r\n  getCode() {\r\n    let url = \"https://www.linkedin.com/oauth/v2/accessToken\";\r\n    let queryParams = {\r\n      grant_type: \"authorization_code\",\r\n      code: this.linkedInToken,\r\n      redirect_uri: this.urlCallback,\r\n      client_id: \"86pe6918u7eg1h\",\r\n      client_secret: \"Gpg4qLShgX0xVNim\"\r\n    }\r\n    this.http.post(url, { params: queryParams }).subscribe((data: any) => { console.log(data); });\r\n    //this.http.post(url, { params: queryParams }).subscribe((data: any) => { console.log(data); });\r\n  }\r\n\r\n\r\n  exchangeCodeForToken(code: string) {\r\n    const params = new HttpParams()\r\n      .set('grant_type', 'authorization_code')\r\n      .set('code', this.linkedInToken)\r\n      .set('redirect_uri', this.urlCallback)\r\n      .set('client_id', '86pe6918u7eg1h')\r\n      .set('client_secret', 'Gpg4qLShgX0xVNim');\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n    return this.http.post(this.accessTokenUrl, params.toString(), { headers });\r\n  }\r\n\r\n  getUserInfo(accessToken: string) {\r\n    const headers = new HttpHeaders()\r\n      .set('Authorization', `Bearer ${accessToken}`);\r\n\r\n    return this.http.get(this.userInfoUrl, { headers });\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div class=\"AccueilContent\" style=\"display:flex; justify-content:center; align-items:center;\">\r\n  <div style=\"display: flex; justify-content: center; align-items: center; background-color: #0E1F31; width:100%; height:100%\">\r\n    <div>\r\n      <img style=\"width: 100%;\" src=\"../../assets/Images/WBConcept-AccueilPrincipale.png\" />\r\n      <br /><br />\r\n      <div class=\"centered-element\" style=\"cursor:pointer; border:solid 2px white; border-radius:5px; padding:10px; margin:0px 150px 0px 150px\" (click)=\"getCode()\">\r\n          CODE\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}