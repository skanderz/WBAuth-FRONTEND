{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../Services/utilisateur.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ForgotPassword_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction ForgotPassword_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.successMessage, \" \");\n  }\n}\nfunction ForgotPassword_em_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"/Authentification\"];\n};\nexport class ForgotPassword {\n  constructor(UtilisateurService, router) {\n    this.UtilisateurService = UtilisateurService;\n    this.router = router;\n    this.validateControl = controlName => {\n      return this.forgotPasswordForm.get(controlName).invalid && this.forgotPasswordForm.get(controlName).touched;\n    };\n    this.hasError = (controlName, errorName) => {\n      return this.forgotPasswordForm.get(controlName).hasError(errorName);\n    };\n    this.forgotPassword = forgotPasswordFormValue => {\n      this.showError = this.showSuccess = false;\n      const forgotPass = {\n        ...forgotPasswordFormValue\n      };\n      const forgotPassDto = {\n        email: forgotPass.email,\n        clientURI: 'https://localhost:44429/ResetPassword'\n      };\n      this.UtilisateurService.forgotPassword(forgotPassDto).subscribe({\n        next: _ => {\n          this.showSuccess = true;\n          this.successMessage = 'Le lien a été envoyé, veuillez vérifier votre courrier électronique pour réinitialiser votre mot de passe.';\n        },\n        error: err => {\n          this.showError = true;\n          this.errorMessage = \"Veuillez saisir un email valide !\";\n        }\n      });\n    };\n  }\n  ngOnInit() {\n    this.forgotPasswordForm = new FormGroup({\n      email: new FormControl(\"\", [Validators.required])\n    });\n  }\n  static #_ = this.ɵfac = function ForgotPassword_Factory(t) {\n    return new (t || ForgotPassword)(i0.ɵɵdirectiveInject(i1.UtilisateurService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPassword,\n    selectors: [[\"app-ForgotPassword\"]],\n    decls: 15,\n    vars: 7,\n    consts: [[1, \"AccueilContent\", 2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\"], [\"src\", \"../../assets/Images/PC-AccueilPrincipale.png\", 2, \"width\", \"350px\", \"height\", \"350px\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\", \"justify-content\", \"center\", \"align-items\", \"center\", \"margin\", \"0px 0px 0px -20px\"], [\"src\", \"../../assets/Images/WBConcept-AccueilPrincipale.png\", 2, \"width\", \"70%\"], [\"style\", \"max-width:600px;\", \"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"style\", \"max-width:600px;\", \"class\", \"alert alert-success centered\", \"role\", \"alert\", 4, \"ngIf\"], [\"autocomplete\", \"off\", \"novalidate\", \"\", 1, \"register\", 3, \"formGroup\", \"ngSubmit\"], [4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"EMAIL\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"auth-field\"], [\"type\", \"submit\", 1, \"auth-btn\", 3, \"disabled\"], [2, \"color\", \"#C4BDF6\", \"padding-top\", \"5px\"], [1, \"mdp-oubli\\u00E9\", 3, \"routerLink\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", 2, \"max-width\", \"600px\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"centered\", 2, \"max-width\", \"600px\"]],\n    template: function ForgotPassword_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵtemplate(4, ForgotPassword_div_4_Template, 2, 1, \"div\", 4);\n        i0.ɵɵtemplate(5, ForgotPassword_div_5_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementStart(6, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function ForgotPassword_Template_form_ngSubmit_6_listener() {\n          return ctx.forgotPassword(ctx.forgotPasswordForm.value);\n        });\n        i0.ɵɵtemplate(7, ForgotPassword_em_7_Template, 2, 0, \"em\", 7);\n        i0.ɵɵelement(8, \"input\", 8);\n        i0.ɵɵelementStart(9, \"button\", 9);\n        i0.ɵɵtext(10, \"VALIDER\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 10);\n        i0.ɵɵtext(12, \" \\u2022\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2022 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 11);\n        i0.ɵɵtext(14, \" Revenir \\u00E0 l'\\u00E9cran de connexion \");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSuccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.forgotPasswordForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"email\") && ctx.hasError(\"email\", \"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.forgotPasswordForm.valid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i2.RouterLink],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"AAIA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;ICG7DC,+BAAwF;IAAEA,YAAiB;IAAAA,iBAAM;;;;IAAvBA,eAAiB;IAAjBA,oDAAiB;;;;;IAC3GA,+BAAoG;IAAEA,YAAmB;IAAAA,iBAAM;;;;IAAzBA,eAAmB;IAAnBA,sDAAmB;;;;;IAGvHA,0BAAsE;IAAAA,iCAAiB;IAAAA,iBAAK;;;;;;ADEpG,OAAM,MAAOC,cAAc;EAOzBC,YAAoBC,kBAAsC,EAAUC,MAAc;IAA9D,uBAAkB,GAAlBD,kBAAkB;IAA8B,WAAM,GAANC,MAAM;IAOnE,oBAAe,GAAIC,WAAmB,IAAI;MAC/C,OAAO,IAAI,CAACC,kBAAkB,CAACC,GAAG,CAACF,WAAW,CAAE,CAACG,OAAO,IAAI,IAAI,CAACF,kBAAkB,CAACC,GAAG,CAACF,WAAW,CAAE,CAACI,OAAO;IAC/G,CAAC;IAGM,aAAQ,GAAG,CAACJ,WAAmB,EAAEK,SAAiB,KAAI;MAC3D,OAAO,IAAI,CAACJ,kBAAkB,CAACC,GAAG,CAACF,WAAW,CAAE,CAACM,QAAQ,CAACD,SAAS,CAAC;IACtE,CAAC;IAGM,mBAAc,GAAIE,uBAA4B,IAAI;MACvD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,WAAW,GAAG,KAAK;MACzC,MAAMC,UAAU,GAAG;QAAE,GAAGH;MAAuB,CAAE;MACjD,MAAMI,aAAa,GAAoB;QACrCC,KAAK,EAAEF,UAAU,CAACE,KAAK;QACvBC,SAAS,EAAE;OACZ;MACD,IAAI,CAACf,kBAAkB,CAACgB,cAAc,CAACH,aAAa,CAAC,CAACI,SAAS,CAAC;QAC5DC,IAAI,EAAGC,CAAC,IAAI;UACV,IAAI,CAACR,WAAW,GAAG,IAAI;UACvB,IAAI,CAACS,cAAc,GAAG,4GAA4G;QACpI,CAAC;QACDC,KAAK,EAAGC,GAAsB,IAAI;UAChC,IAAI,CAACZ,SAAS,GAAG,IAAI;UACrB,IAAI,CAACa,YAAY,GAAG,mCAAmC;QACzD;OACD,CAAC;IACN,CAAC;EAlCmF;EAEpFC,QAAQ;IACN,IAAI,CAACrB,kBAAkB,GAAG,IAAIT,SAAS,CAAC;MAAGoB,KAAK,EAAE,IAAInB,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAAC6B,QAAQ,CAAC;IAAC,CAAI,CAAC;EACnG;EAAC;qBAXU3B,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAA4B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCb3BjC,8BAA8F;QAE5FA,yBAA4F;QAE5FA,8BAAwH;QACtHA,yBAAoF;QAElFA,+DAAiH;QACjHA,+DAA+H;QAE/HA,+BAA4I;QAAtDA;UAAA,OAAYkC,gDAAwC;QAAA,EAAC;QACzIlC,6DAA4F;QAC5FA,2BAAmH;QAEnHA,iCAA8E;QAAAA,wBAAO;QAAAA,iBAAS;QAC9FA,gCAA6C;QAACA,+KAA2B;QAAAA,iBAAM;QAC/EA,gCAA6D;QAAEA,2DAA+B;QAAAA,iBAAM;;;QATvEA,eAAe;QAAfA,oCAAe;QACfA,eAAiB;QAAjBA,sCAAiB;QAEzBA,eAAgC;QAAhCA,kDAAgC;QAChDA,eAA+D;QAA/DA,wFAA+D;QAG7BA,eAAsC;QAAtCA,wDAAsC;QAErDA,eAAoC;QAApCA,uDAAoC","names":["FormGroup","FormControl","Validators","i0","ForgotPassword","constructor","UtilisateurService","router","controlName","forgotPasswordForm","get","invalid","touched","errorName","hasError","forgotPasswordFormValue","showError","showSuccess","forgotPass","forgotPassDto","email","clientURI","forgotPassword","subscribe","next","_","successMessage","error","err","errorMessage","ngOnInit","required","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\AccueilPrincipale\\Authentification\\forgot-password.component.ts","C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\AccueilPrincipale\\Authentification\\forgot-password.component.html"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { IForgotPassword } from '../../auth/forgotPassword.interface';\r\nimport { UtilisateurService } from './../../Services/utilisateur.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ForgotPassword',\r\n  templateUrl: './forgot-password.component.html',\r\n})\r\n\r\nexport class ForgotPassword implements OnInit {\r\n  forgotPasswordForm!: FormGroup;\r\n  successMessage!: string;\r\n  errorMessage!: string;\r\n  showSuccess!: boolean;\r\n  showError!: boolean;\r\n\r\n  constructor(private UtilisateurService: UtilisateurService ,private router: Router){}\r\n\r\n  ngOnInit(): void {\r\n    this.forgotPasswordForm = new FormGroup({  email: new FormControl(\"\", [Validators.required])   })\r\n  }\r\n\r\n\r\n  public validateControl = (controlName: string) => {\r\n    return this.forgotPasswordForm.get(controlName)!.invalid && this.forgotPasswordForm.get(controlName)!.touched\r\n  }\r\n\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.forgotPasswordForm.get(controlName)!.hasError(errorName)\r\n  }\r\n\r\n\r\n  public forgotPassword = (forgotPasswordFormValue: any) => {\r\n    this.showError = this.showSuccess = false;\r\n    const forgotPass = { ...forgotPasswordFormValue };\r\n    const forgotPassDto: IForgotPassword = {\r\n      email: forgotPass.email,\r\n      clientURI: 'https://localhost:44429/ResetPassword'\r\n    }\r\n    this.UtilisateurService.forgotPassword(forgotPassDto).subscribe({\r\n        next: (_) => {\r\n          this.showSuccess = true;\r\n          this.successMessage = 'Le lien a été envoyé, veuillez vérifier votre courrier électronique pour réinitialiser votre mot de passe.'\r\n        },\r\n        error: (err: HttpErrorResponse) => {\r\n          this.showError = true;\r\n          this.errorMessage = \"Veuillez saisir un email valide !\";\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\n","<div class=\"AccueilContent\" style=\"display:flex; justify-content:center; align-items:center;\">\r\n\r\n  <img src=\"../../assets/Images/PC-AccueilPrincipale.png\" style=\"width:350px; height:350px\" />\r\n\r\n  <div style=\"display:flex; flex-direction:column; justify-content:center; align-items:center; margin:0px 0px 0px -20px;\">\r\n    <img src=\"../../assets/Images/WBConcept-AccueilPrincipale.png\" style=\"width:70%;\" />\r\n\r\n      <div style=\"max-width:600px;\" *ngIf=\"showError\" class=\"alert alert-danger\" role=\"alert\">  {{errorMessage}} </div>\r\n      <div style=\"max-width:600px;\" *ngIf=\"showSuccess\" class=\"alert alert-success centered\" role=\"alert\">  {{successMessage}} </div>\r\n\r\n      <form class=\"register\" [formGroup]=\"forgotPasswordForm\" autocomplete=\"off\" novalidate (ngSubmit)=\"forgotPassword(forgotPasswordForm.value)\">\r\n        <em *ngIf=\"validateControl('email') && hasError('email', 'required')\">Email is required</em>\r\n        <input class=\"auth-field\" type=\"text\" placeholder=\"EMAIL\" id=\"email\" name=\"email\" formControlName=\"email\" required>\r\n\r\n        <button type=\"submit\" class=\"auth-btn\" [disabled]=\"!forgotPasswordForm.valid\">VALIDER</button>\r\n        <div style=\"color:#C4BDF6; padding-top: 5px\"> •────────────────────────• </div>\r\n        <div class=\"mdp-oublié\" [routerLink]=\"['/Authentification']\">  Revenir à l'écran de connexion </div>\r\n\r\n      </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}