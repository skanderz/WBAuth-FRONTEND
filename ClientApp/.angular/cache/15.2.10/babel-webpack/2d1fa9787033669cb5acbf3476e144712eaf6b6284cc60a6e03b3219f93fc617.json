{"ast":null,"code":"import { Fonction } from '../../../Models/fonction.model';\nimport { Application } from '../../../Models/application.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../Services/fonction.service\";\nimport * as i2 from \"../../../Services/application.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../Services/journalisation.service\";\nimport * as i5 from \"../../../Services/action.service\";\nimport * as i6 from \"./../../../Services/utilisateur.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/forms\";\nfunction ModifierFonctionComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \"\");\n  }\n}\nconst _c0 = function () {\n  return [\"/Fonction\"];\n};\nexport class ModifierFonctionComponent {\n  constructor(FonctionService, ApplicationService, router, route, JournalisationService, ActionService, UtilisateurService) {\n    this.FonctionService = FonctionService;\n    this.ApplicationService = ApplicationService;\n    this.router = router;\n    this.route = route;\n    this.JournalisationService = JournalisationService;\n    this.ActionService = ActionService;\n    this.UtilisateurService = UtilisateurService;\n    this.fonction = new Fonction();\n    this.application = new Application();\n    this.oldName = \"\";\n    this.errorMessage = '';\n    this.showError = false;\n  }\n  ngOnInit() {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam) {\n      const id = +idParam;\n      if (!isNaN(id)) {\n        this.FonctionService.getFonction(id).subscribe(data => {\n          if (data) {\n            this.fonction = data;\n            console.log(data);\n            this.oldName = this.fonction.nom;\n            if (this.fonction.type === 'Multifonctions') {\n              this.fonction.type = 'Multifonctions';\n            } else {\n              this.fonction.type = 'Fonction Unique';\n            }\n            this.ApplicationService.getApplication(this.fonction.idApplication).subscribe(data => {\n              if (data) {\n                this.application = data;\n                console.log(data);\n              }\n            });\n          }\n        });\n      } else {\n        console.error('La valeur du paramètre \"id\" n\\'est pas un nombre valide.');\n      }\n    } else {\n      console.error('Le paramètre \"id\" est manquant dans l\\'URL.');\n    }\n  }\n  EnregistrerAction(IdApp, IdFonction, nomApp) {\n    let username = localStorage.getItem(\"username\");\n    this.UtilisateurService.Recherche(username).subscribe(data => {\n      this.JournalisationService.getJournalisations(data[0].id).subscribe(dataJournalisations => {\n        let idJournalisation = dataJournalisations[dataJournalisations.length - 1].id;\n        const action = {\n          id: 0,\n          application: \"www.wbauth.com\",\n          date: new Date(),\n          description: `l'utilisateur ${username} a modifié une fonction avec l'id '${IdApp}' de l'application '${nomApp}' avec l'id '${IdApp}'`,\n          idJournalisation: idJournalisation,\n          journalisation: dataJournalisations[dataJournalisations.length - 1]\n        };\n        this.ActionService.EnregistrementActions(action).subscribe(() => {\n          console.log(action);\n        });\n      });\n    });\n  }\n  onSubmit() {\n    this.showError = false;\n    this.FonctionService.Recherche(this.fonction.nom, this.application.id).subscribe(data => {\n      if (data.length != 0 && this.fonction.nom != this.oldName) {\n        this.errorMessage = \"Une fonction avec ce nom existe déjà dans l'application \" + this.application.nom + \" !\";\n        this.showError = true;\n      } else {\n        this.FonctionService.updateFonction(this.fonction.idApplication, this.fonction).subscribe(response => {\n          if (response) {\n            this.router.navigate(['/Fonction']);\n            this.EnregistrerAction(this.application.id, this.fonction.id);\n          }\n        });\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ModifierFonctionComponent_Factory(t) {\n    return new (t || ModifierFonctionComponent)(i0.ɵɵdirectiveInject(i1.FonctionService), i0.ɵɵdirectiveInject(i2.ApplicationService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.JournalisationService), i0.ɵɵdirectiveInject(i5.ActionService), i0.ɵɵdirectiveInject(i6.UtilisateurService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierFonctionComponent,\n    selectors: [[\"app-ModifierFonction\"]],\n    decls: 40,\n    vars: 7,\n    consts: [[1, \"background-titre\"], [1, \"ajouter-content\"], [1, \"ajouter-entete\"], [1, \"modifier-return\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-angles-left\"], [1, \"modifier-titre\"], [1, \"yellow-border\", 3, \"ngSubmit\"], [1, \"form-content\"], [\"style\", \"transform: translateX(42px); max-width: 600px;\", \"class\", \"alert alert-danger centered-element\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"form-content-rows\"], [\"for\", \"nomApp\"], [\"type\", \"text\", \"id\", \"nomApp\", \"name\", \"nomApp\", \"readonly\", \"\", 1, \"yellow-border\", 2, \"cursor\", \"not-allowed\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"type\"], [\"id\", \"type\", \"name\", \"type\", 1, \"yellow-border\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Multifonctions\"], [\"value\", \"Fonction Unique\"], [\"for\", \"nom\"], [\"type\", \"text\", \"id\", \"nom\", \"name\", \"nom\", \"required\", \"\", 1, \"yellow-border\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [\"id\", \"description\", \"name\", \"description\", \"rows\", \"4\", \"required\", \"\", 1, \"yellow-border\", 3, \"ngModel\", \"ngModelChange\"], [1, \"no-select\"], [\"type\", \"submit\", 1, \"valider\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"centered-element\", 2, \"transform\", \"translateX(42px)\", \"max-width\", \"600px\"]],\n    template: function ModifierFonctionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \" GESTION DES FONCTIONS \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3);\n        i0.ɵɵelement(6, \"i\", 4);\n        i0.ɵɵtext(7, \" RETURN \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵtext(9, \" MODIFICATION DE LA FONCTION \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function ModifierFonctionComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵtemplate(12, ModifierFonctionComponent_div_12_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵelementStart(14, \"div\", 9)(15, \"label\", 10);\n        i0.ɵɵtext(16, \"APPLICATION :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierFonctionComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.application.nom = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 9)(19, \"label\", 12);\n        i0.ɵɵtext(20, \"TYPE :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"select\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierFonctionComponent_Template_select_ngModelChange_21_listener($event) {\n          return ctx.fonction.type = $event;\n        });\n        i0.ɵɵelementStart(22, \"option\", 14);\n        i0.ɵɵtext(23, \"Multifonctions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"option\", 15);\n        i0.ɵɵtext(25, \"Fonction Unique\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 9)(27, \"label\", 16);\n        i0.ɵɵtext(28, \"NOM :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"input\", 17);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierFonctionComponent_Template_input_ngModelChange_29_listener($event) {\n          return ctx.fonction.nom = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 9)(31, \"label\", 18);\n        i0.ɵɵtext(32, \"DESCRIPTION :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 19)(34, \"textarea\", 20);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierFonctionComponent_Template_textarea_ngModelChange_34_listener($event) {\n          return ctx.fonction.description = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"div\", 9);\n        i0.ɵɵelement(36, \"label\", 21);\n        i0.ɵɵelementStart(37, \"div\")(38, \"button\", 22);\n        i0.ɵɵtext(39, \"VALIDER\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.application.nom);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.fonction.type);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.fonction.nom);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.fonction.description);\n      }\n    },\n    dependencies: [i7.NgIf, i8.ɵNgNoValidate, i8.NgSelectOption, i8.ɵNgSelectMultipleOption, i8.DefaultValueAccessor, i8.SelectControlValueAccessor, i8.NgControlStatus, i8.NgControlStatusGroup, i8.RequiredValidator, i8.NgModel, i8.NgForm, i3.RouterLink],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["Fonction","Application","i0","ModifierFonctionComponent","constructor","FonctionService","ApplicationService","router","route","JournalisationService","ActionService","UtilisateurService","ngOnInit","idParam","snapshot","paramMap","get","id","isNaN","getFonction","subscribe","data","fonction","console","log","oldName","nom","type","getApplication","idApplication","application","error","EnregistrerAction","IdApp","IdFonction","nomApp","username","localStorage","getItem","Recherche","getJournalisations","dataJournalisations","idJournalisation","length","action","date","Date","description","journalisation","EnregistrementActions","onSubmit","showError","errorMessage","updateFonction","response","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Fonction\\Modifier\\ModifierFonction.component.ts","C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Fonction\\Modifier\\ModifierFonction.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FonctionService } from '../../../Services/fonction.service';\r\nimport { ApplicationService } from '../../../Services/application.service';\r\nimport { Fonction } from '../../../Models/fonction.model';\r\nimport { Application } from '../../../Models/application.model';\r\nimport { JournalisationService } from '../../../Services/journalisation.service';\r\nimport { UtilisateurService } from './../../../Services/utilisateur.service';\r\nimport { ActionService } from '../../../Services/action.service';\r\nimport { Action } from '../../../Models/action.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ModifierFonction',\r\n  templateUrl: './ModifierFonction.component.html'\r\n})\r\nexport class ModifierFonctionComponent implements OnInit {\r\n  public fonction: Fonction = new Fonction();\r\n  public application: Application = new Application();\r\n  oldName: string | null = \"\";\r\n  errorMessage: string = '';\r\n  showError: boolean = false;\r\n\r\n  constructor(private FonctionService: FonctionService ,private ApplicationService: ApplicationService ,private router: Router, private route: ActivatedRoute\r\n    , private JournalisationService: JournalisationService, private ActionService: ActionService, private UtilisateurService: UtilisateurService){}\r\n\r\n\r\n  ngOnInit(): void {\r\n    const idParam = this.route.snapshot.paramMap.get('id');\r\n    if (idParam) {\r\n      const id = +idParam;\r\n      if (!isNaN(id)) {\r\n        this.FonctionService.getFonction(id).subscribe((data) => {\r\n          if (data) {\r\n            this.fonction = data; console.log(data);\r\n            this.oldName = this.fonction.nom;\r\n            if (this.fonction.type === 'Multifonctions') { this.fonction.type = 'Multifonctions'; } else { this.fonction.type = 'Fonction Unique'; }\r\n            this.ApplicationService.getApplication(this.fonction.idApplication).subscribe((data) => { if (data) { this.application = data; console.log(data); } });\r\n          }\r\n        });\r\n      }\r\n      else { console.error('La valeur du paramètre \"id\" n\\'est pas un nombre valide.'); }\r\n    }\r\n    else { console.error('Le paramètre \"id\" est manquant dans l\\'URL.'); }\r\n  }\r\n\r\n\r\n  EnregistrerAction(IdApp: number ,IdFonction: number ,nomApp :string ) {\r\n    let username = localStorage.getItem(\"username\");\r\n    this.UtilisateurService.Recherche(username).subscribe((data) => {\r\n      this.JournalisationService.getJournalisations(data[0].id).subscribe((dataJournalisations) => {\r\n        let idJournalisation = dataJournalisations[dataJournalisations.length - 1].id;\r\n        const action: Action = {\r\n          id: 0, application: \"www.wbauth.com\", date: new Date(), description: `l'utilisateur ${username} a modifié une fonction avec l'id '${IdApp}' de l'application '${nomApp}' avec l'id '${IdApp}'`,\r\n          idJournalisation: idJournalisation, journalisation: dataJournalisations[dataJournalisations.length - 1]\r\n        }\r\n        this.ActionService.EnregistrementActions(action).subscribe(() => { console.log(action); });\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  onSubmit(){\r\n    this.showError = false;\r\n    this.FonctionService.Recherche(this.fonction.nom, this.application.id).subscribe((data) => {\r\n      if (data.length != 0 && this.fonction.nom != this.oldName) {\r\n        this.errorMessage = \"Une fonction avec ce nom existe déjà dans l'application \" + this.application.nom + \" !\";\r\n        this.showError = true;\r\n      }\r\n      else {\r\n        this.FonctionService.updateFonction(this.fonction.idApplication, this.fonction).subscribe((response) => {\r\n          if (response) {\r\n            this.router.navigate(['/Fonction']);\r\n            this.EnregistrerAction(this.application.id, this.fonction.id);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div class=\"background-titre\"> <h1> GESTION DES FONCTIONS </h1> </div>\r\n\r\n\r\n<div class=\"ajouter-content\">\r\n\r\n  <div class=\"ajouter-entete\">\r\n    <div class=\"modifier-return\" [routerLink]=\"['/Fonction']\"> <i class=\"fa-solid fa-angles-left\"></i> RETURN </div>\r\n    <div class=\"modifier-titre\"> MODIFICATION DE LA FONCTION </div>\r\n  </div>\r\n\r\n\r\n  <form (ngSubmit)=\"onSubmit()\" class=\"yellow-border\">\r\n    <div class=\"form-content\">\r\n\r\n      <div style=\"transform: translateX(42px); max-width: 600px;\" *ngIf=\"showError\" class=\"alert alert-danger centered-element\" role=\"alert\"> {{errorMessage}}</div>\r\n      <br />\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"nomApp\">APPLICATION :</label>\r\n        <input class=\"yellow-border\" type=\"text\" id=\"nomApp\" name=\"nomApp\" [(ngModel)]=\"application.nom\" style=\"cursor:not-allowed\" readonly>\r\n      </div>\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"type\">TYPE :</label>\r\n        <select class=\"yellow-border\" id=\"type\" name=\"type\" [(ngModel)]=\"fonction.type\">\r\n          <option value=\"Multifonctions\">Multifonctions</option>\r\n          <option value=\"Fonction Unique\">Fonction Unique</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"nom\">NOM :</label>\r\n        <input class=\"yellow-border\" type=\"text\" id=\"nom\" name=\"nom\" [(ngModel)]=\"fonction.nom\" required>\r\n      </div>\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"description\">DESCRIPTION :</label>\r\n        <div style=\"display: flex; flex-direction: column;\">\r\n          <textarea class=\"yellow-border\" id=\"description\" name=\"description\" rows=\"4\" [(ngModel)]=\"fonction.description\" required></textarea>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label class=\"no-select\"></label> <div> <button type=\"submit\" class=\"valider\">VALIDER</button> </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  </form>\r\n\r\n\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}