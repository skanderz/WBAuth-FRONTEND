{"ast":null,"code":"import { Utilisateur } from '../../../Models/utilisateur.model';\nimport { Role } from '../../../Models/role.model';\nimport { UtilisateurApplication } from '../../../Models/utilisateurapplication.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../Services/utilisateurapplication.service\";\nimport * as i2 from \"../../../Services/application.service\";\nimport * as i3 from \"../../../Services/role.service\";\nimport * as i4 from \"../../../Services/utilisateur.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"./cell-style.directive\";\nfunction ModifierAccesComponent_table_16_tr_12_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function ModifierAccesComponent_table_16_tr_12_option_14_Template_option_ngModelChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const role_r5 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(role_r5.nom = $event);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r5.id)(\"ngModel\", role_r5.nom);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r5.nom, \" \");\n  }\n}\nfunction ModifierAccesComponent_table_16_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 16);\n    i0.ɵɵlistener(\"click\", function ModifierAccesComponent_table_16_tr_12_Template_td_click_5_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const t_r2 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.onAccesSelect($event, t_r2));\n    });\n    i0.ɵɵelementStart(6, \"span\", 17);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\")(9, \"select\", 18);\n    i0.ɵɵlistener(\"change\", function ModifierAccesComponent_table_16_tr_12_Template_select_change_9_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const t_r2 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onRoleSelect($event, t_r2));\n    });\n    i0.ɵɵelementStart(10, \"option\", 19);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"option\", 20);\n    i0.ɵɵtext(13, \" Choisissez un role \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, ModifierAccesComponent_table_16_tr_12_option_14_Template, 2, 3, \"option\", 21);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const t_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r2.nomApplication);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", t_r2.url, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"appCellStyle\", t_r2.acces === false ? \"\\u2716\" : \"\\u2714\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(t_r2.acces === false ? \"\\u2716\" : \"\\u2714\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", t_r2.nomRole, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", t_r2.roles);\n  }\n}\nfunction ModifierAccesComponent_table_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 12)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"APPLICATION\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 13);\n    i0.ɵɵtext(8, \"ACC\\u00C8S\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"ROLE\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\", 14);\n    i0.ɵɵtemplate(12, ModifierAccesComponent_table_16_tr_12_Template, 15, 6, \"tr\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.accesTable);\n  }\n}\nconst _c0 = function () {\n  return [\"/Utilisateur/Acces\"];\n};\nexport class ModifierAccesComponent {\n  constructor(UAService, ApplicationService, RoleService, UtilisateurService, router, route) {\n    this.UAService = UAService;\n    this.ApplicationService = ApplicationService;\n    this.RoleService = RoleService;\n    this.UtilisateurService = UtilisateurService;\n    this.router = router;\n    this.route = route;\n    this.Role = new Role();\n    this.User = new Utilisateur();\n    this.UserApp = new UtilisateurApplication();\n    this.UserApps = [];\n    this.utilisateurs = [];\n    this.tabRoles = [];\n    this.applications = [];\n    this.rechRole = \"\";\n    this.accesTable = [];\n  }\n  ngOnInit() {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam != null) {\n      const guid = idParam;\n      if (guid != null) {\n        this.UtilisateurService.getUtilisateur(guid).subscribe(UserData => {\n          this.User = UserData;\n          this.loadUtilisateursByIdUser(guid);\n        });\n      } else {\n        console.error('La valeur du paramètre \"id\" n\\'est pas une valeur valide.');\n      }\n    } else {\n      console.error('Le paramètre \"id\" est manquant dans l\\'URL.');\n    }\n  }\n  loadUtilisateursByIdUser(idUser) {\n    this.accesTable = [];\n    this.UAService.getListByUtilisateur(idUser).subscribe(UAdata => {\n      this.UserApps = UAdata;\n      for (const ua of this.UserApps) {\n        if (ua.idRole == null) {\n          this.ApplicationService.getApplication(ua.idApplication).subscribe(AppData => {\n            this.RoleService.getRoles(ua.idApplication).subscribe(RoleData => {\n              const nvElement = {\n                idUA: ua.id,\n                idApp: AppData.id,\n                nomApplication: AppData.nom,\n                url: AppData.url,\n                acces: ua.acces,\n                roles: [],\n                nomRole: \"Rôle non effectué\"\n              };\n              for (const r of RoleData) {\n                nvElement.roles.push({\n                  id: r.id,\n                  nom: r.nom,\n                  niveau: r.niveau\n                });\n              }\n              this.accesTable.push(nvElement);\n            });\n          });\n        } else {\n          this.ApplicationService.getApplication(ua.idApplication).subscribe(AppData => {\n            this.RoleService.getRole(ua.idRole).subscribe(RoleData => {\n              this.RoleService.getRoles(ua.idApplication).subscribe(TRoleData => {\n                const nvElement = {\n                  idUA: ua.id,\n                  idApp: AppData.id,\n                  nomApplication: AppData.nom,\n                  url: AppData.url,\n                  acces: ua.acces,\n                  roles: [],\n                  nomRole: RoleData.nom\n                };\n                for (const r of TRoleData) {\n                  if (r.nom == nvElement.nomRole) {\n                    ;\n                  }\n                  nvElement.roles.push({\n                    id: r.id,\n                    nom: r.nom,\n                    niveau: r.niveau\n                  });\n                }\n                this.accesTable.push(nvElement);\n              });\n            });\n          });\n        }\n      }\n    });\n  }\n  onRoleSelect(event, selectedRow) {\n    const selectedRoleId = parseInt(event.target.value, 10);\n    if (selectedRoleId) {\n      this.UserApp.id = selectedRow.idUA;\n      this.UserApp.idApplication = selectedRow.idApp;\n      this.UserApp.guidUtilisateur = this.User.id;\n      this.UserApp.idRole = selectedRoleId;\n      this.UserApp.acces = selectedRow.acces;\n      this.UAService.updateUtilisateurApplication(this.UserApp).subscribe(() => {});\n    }\n  }\n  onAccesSelect(event, selectedRow) {\n    console.log(selectedRow);\n    const target = event.target;\n    const span = target.querySelector('span');\n    if (span?.textContent === '✔' && selectedRow.acces == true) {\n      selectedRow.acces = '✖';\n      target.style.backgroundColor = 'red';\n    } else if (span?.textContent === '✖' && selectedRow.acces == false) {\n      selectedRow.acces = '✔';\n      target.style.backgroundColor = '#128d3a';\n    }\n    this.UAService.getUtilisateurApplication(selectedRow.idUA).subscribe(data => {\n      this.UserApp = data;\n      if (selectedRow) {\n        let uaData = new UtilisateurApplication();\n        uaData.id = selectedRow.idUA;\n        uaData.idApplication = selectedRow.idApp;\n        uaData.guidUtilisateur = this.User.id;\n        uaData.idRole = this.UserApp.idRole;\n        if (selectedRow.acces == '✖') uaData.acces = false;else if (selectedRow.acces == '✔') uaData.acces = true;\n        for (let t of this.accesTable) if (t.idApp == uaData.idApplication) {\n          if (uaData.acces == false) t.acces = false;else if (uaData.acces == true) t.acces = true;\n        }\n        this.UAService.updateUtilisateurApplication(uaData).subscribe(() => {});\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ModifierAccesComponent_Factory(t) {\n    return new (t || ModifierAccesComponent)(i0.ɵɵdirectiveInject(i1.UtilisateurApplicationService), i0.ɵɵdirectiveInject(i2.ApplicationService), i0.ɵɵdirectiveInject(i3.RoleService), i0.ɵɵdirectiveInject(i4.UtilisateurService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierAccesComponent,\n    selectors: [[\"app-ModifierAcces\"]],\n    decls: 19,\n    vars: 4,\n    consts: [[1, \"background-titre\"], [1, \"ajouter-content\"], [1, \"ajouter-entete\"], [1, \"modifier-return\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-angles-left\"], [1, \"modifier-titre\"], [1, \"yellow-border\"], [1, \"form-content\"], [2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\", \"margin-bottom\", \"23px\"], [\"for\", \"nom\", 2, \"padding-bottom\", \"7px\", \"font-size\", \"20px\"], [\"type\", \"text\", \"readonly\", \"\", 1, \"yellow-border\", 2, \"cursor\", \"not-allowed\", \"font-size\", \"20px\", 3, \"value\"], [\"id\", \"myTable\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"id\", \"myTable\", \"aria-labelledby\", \"tableLabel\"], [2, \"padding-right\", \"50px\"], [\"id\", \"table-body\"], [4, \"ngFor\", \"ngForOf\"], [2, \"display\", \"flex\", \"justify-content\", \"center\", \"cursor\", \"pointer\", \"height\", \"100%\", 3, \"click\"], [1, \"no-select\", 2, \"transform\", \"translateY(4px)\", 3, \"appCellStyle\"], [3, \"change\"], [\"selected\", \"\"], [\"disabled\", \"\", 2, \"color\", \"aliceblue\", \"background-color\", \"#1DDD92\"], [\"id\", \"role\", \"name\", \"role\", 3, \"value\", \"ngModel\", \"ngModelChange\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"role\", \"name\", \"role\", 3, \"value\", \"ngModel\", \"ngModelChange\"]],\n    template: function ModifierAccesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \" GESTION DES UTILISATEURS \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3);\n        i0.ɵɵelement(6, \"i\", 4);\n        i0.ɵɵtext(7, \" RETURN \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵtext(9, \" MODIFICATION DE L'ACC\\u00C8S \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"form\", 6)(11, \"div\", 7)(12, \"div\", 8)(13, \"label\", 9);\n        i0.ɵɵtext(14, \"UTILISATEUR :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, ModifierAccesComponent_table_16_Template, 13, 1, \"table\", 11);\n        i0.ɵɵelement(17, \"br\")(18, \"br\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n        i0.ɵɵadvance(10);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.User.userName);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.accesTable);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf, i7.ɵNgNoValidate, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.NgControlStatus, i7.NgControlStatusGroup, i7.NgModel, i7.NgForm, i5.RouterLink, i8.CellStyleDirective],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["Utilisateur","Role","UtilisateurApplication","i0","ModifierAccesComponent","constructor","UAService","ApplicationService","RoleService","UtilisateurService","router","route","ngOnInit","idParam","snapshot","paramMap","get","guid","getUtilisateur","subscribe","UserData","User","loadUtilisateursByIdUser","console","error","idUser","accesTable","getListByUtilisateur","UAdata","UserApps","ua","idRole","getApplication","idApplication","AppData","getRoles","RoleData","nvElement","idUA","id","idApp","nomApplication","nom","url","acces","roles","nomRole","r","push","niveau","getRole","TRoleData","onRoleSelect","event","selectedRow","selectedRoleId","parseInt","target","value","UserApp","guidUtilisateur","updateUtilisateurApplication","onAccesSelect","log","span","querySelector","textContent","style","backgroundColor","getUtilisateurApplication","data","uaData","t","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Utilisateur\\Acces\\ModifierAcces.component.ts","C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Utilisateur\\Acces\\ModifierAcces.component.html"],"sourcesContent":["import { Component, Inject, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Utilisateur } from '../../../Models/utilisateur.model';\r\nimport { Role } from '../../../Models/role.model';\r\nimport { Application } from '../../../Models/application.model';\r\nimport { filter, Observable } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UtilisateurService } from '../../../Services/utilisateur.service';\r\nimport { RoleService } from '../../../Services/role.service';\r\nimport { ApplicationService } from '../../../Services/application.service';\r\nimport { UtilisateurApplicationService } from '../../../Services/utilisateurapplication.service';\r\nimport { UtilisateurApplication } from '../../../Models/utilisateurapplication.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ModifierAcces',\r\n  templateUrl: './ModifierAcces.component.html'\r\n})\r\n\r\nexport class ModifierAccesComponent implements OnInit {\r\n  Role: Role = new Role();\r\n  User: Utilisateur = new Utilisateur();\r\n  UserApp: UtilisateurApplication = new UtilisateurApplication();\r\n  UserApps: any[] = [];\r\n  utilisateurs: any[] = [];\r\n  tabRoles: any[] = [];\r\n  applications: any[] = [];\r\n  rechRole: string = \"\";\r\n  SelectedRoleChange?: any;\r\n  accesTable: {\r\n    idUA:any ,idApp: number, nomApplication: string, url: string, acces: any, nomRole: string;\r\n    roles: { id: number, nom: string, niveau?: number | null }[];\r\n  }[] = [];\r\n\r\n  constructor(private UAService: UtilisateurApplicationService, private ApplicationService: ApplicationService,\r\n    private RoleService: RoleService, private UtilisateurService: UtilisateurService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    const idParam = this.route.snapshot.paramMap.get('id');\r\n    if (idParam != null) {\r\n      const guid = idParam;\r\n      if (guid != null) {\r\n        this.UtilisateurService.getUtilisateur(guid).subscribe((UserData) => {\r\n          this.User = UserData\r\n          this.loadUtilisateursByIdUser(guid);\r\n        });\r\n      }  else { console.error('La valeur du paramètre \"id\" n\\'est pas une valeur valide.'); }\r\n    }  else { console.error('Le paramètre \"id\" est manquant dans l\\'URL.'); }\r\n  }\r\n\r\n\r\n\r\n\r\n  loadUtilisateursByIdUser(idUser: string) {\r\n    this.accesTable = [];\r\n    this.UAService.getListByUtilisateur(idUser).subscribe((UAdata) => {\r\n      this.UserApps = UAdata;\r\n      for (const ua of this.UserApps) {\r\n        if (ua.idRole == null) {\r\n          this.ApplicationService.getApplication(ua.idApplication).subscribe((AppData) => {\r\n            this.RoleService.getRoles(ua.idApplication).subscribe((RoleData) => {\r\n                const nvElement = {\r\n                  idUA: ua.id ,idApp: AppData.id, nomApplication: AppData.nom, url: AppData.url, acces: ua.acces,\r\n                  roles: [] as any ,nomRole: \"Rôle non effectué\"\r\n                }\r\n              for (const r of RoleData) {\r\n                nvElement.roles.push({ id: r.id,  nom: r.nom, niveau: r.niveau });\r\n              }\r\n              this.accesTable.push(nvElement);\r\n            });\r\n          });\r\n        }\r\n\r\n        else {\r\n          this.ApplicationService.getApplication(ua.idApplication).subscribe((AppData) => {\r\n            this.RoleService.getRole(ua.idRole).subscribe((RoleData) => {\r\n              this.RoleService.getRoles(ua.idApplication).subscribe((TRoleData) => {\r\n                const nvElement = {\r\n                  idUA: ua.id, idApp: AppData.id, nomApplication: AppData.nom, url: AppData.url, acces: ua.acces,\r\n                  roles: [] as any[] ,nomRole:RoleData.nom\r\n                }\r\n                for (const r of TRoleData) {\r\n                  if (r.nom == nvElement.nomRole) { ;}\r\n                  nvElement.roles.push({ id: r.id, nom: r.nom, niveau: r.niveau });\r\n                }\r\n                this.accesTable.push(nvElement);\r\n              });\r\n            });\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  onRoleSelect(event: Event, selectedRow: any) {\r\n    const selectedRoleId = parseInt((event.target as HTMLSelectElement).value, 10);\r\n    if (selectedRoleId) {\r\n      this.UserApp.id = selectedRow.idUA;\r\n      this.UserApp.idApplication = selectedRow.idApp;\r\n      this.UserApp.guidUtilisateur = this.User.id;\r\n      this.UserApp.idRole = selectedRoleId;\r\n      this.UserApp.acces = selectedRow.acces;\r\n      this.UAService.updateUtilisateurApplication(this.UserApp).subscribe(() => {});\r\n    }\r\n  }\r\n\r\n\r\n\r\n  onAccesSelect(event: Event, selectedRow: any) {\r\n    console.log(selectedRow);\r\n    const target = event.target as HTMLElement;\r\n    const span = target.querySelector('span');\r\n    if (span?.textContent === '✔' && selectedRow.acces == true) { selectedRow.acces = '✖'; target.style.backgroundColor = 'red'; }\r\n    else if (span?.textContent === '✖' && selectedRow.acces == false) { selectedRow.acces = '✔'; target.style.backgroundColor = '#128d3a'; }\r\n    this.UAService.getUtilisateurApplication(selectedRow.idUA).subscribe((data) => {\r\n      this.UserApp = data;\r\n      if (selectedRow) {\r\n        let uaData: UtilisateurApplication = new UtilisateurApplication();\r\n        uaData.id = selectedRow.idUA;\r\n        uaData.idApplication = selectedRow.idApp;\r\n        uaData.guidUtilisateur = this.User.id;\r\n        uaData.idRole = this.UserApp.idRole;\r\n        if (selectedRow.acces == '✖') uaData.acces = false; else if (selectedRow.acces == '✔') uaData.acces = true;\r\n        for (let t of this.accesTable)\r\n          if (t.idApp == uaData.idApplication) {\r\n            if (uaData.acces == false) t.acces = false; else if (uaData.acces == true) t.acces = true;\r\n          }\r\n        this.UAService.updateUtilisateurApplication(uaData).subscribe(() => {});\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div class=\"background-titre\"> <h1> GESTION DES UTILISATEURS </h1> </div>\r\n\r\n\r\n<div class=\"ajouter-content\">\r\n\r\n  <div class=\"ajouter-entete\">\r\n    <div class=\"modifier-return\" [routerLink]=\"['/Utilisateur/Acces']\"> <i class=\"fa-solid fa-angles-left\"></i> RETURN </div>\r\n    <div class=\"modifier-titre\"> MODIFICATION DE L'ACCÈS </div>\r\n  </div>\r\n\r\n\r\n  <form class=\"yellow-border\">\r\n    <div class=\"form-content\">\r\n      <div style=\"display:flex; justify-content:center; align-items:center; margin-bottom:23px\">\r\n        <label for=\"nom\" style=\"padding-bottom:7px; font-size: 20px;\">UTILISATEUR :</label>\r\n        <input class=\"yellow-border\" type=\"text\" value=\"{{ User.userName }}\" style=\"cursor:not-allowed; font-size:20px;\" readonly>\r\n      </div>\r\n\r\n      <table id=\"myTable\" aria-labelledby=\"tableLabel\" *ngIf=\"accesTable\">\r\n        <thead>\r\n          <tr>\r\n            <th>APPLICATION</th>\r\n            <th>URL</th>\r\n            <th style=\"padding-right:50px\" >ACCÈS</th>\r\n            <th>ROLE</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody id=\"table-body\">\r\n          <tr *ngFor=\"let t of accesTable; let i = index\">\r\n            <td>{{ t.nomApplication }}</td>\r\n            <td>{{ t.url }} </td>\r\n            <td (click)=\"onAccesSelect($event ,t)\" style=\"display:flex; justify-content:center; cursor:pointer; height:100%\">\r\n              <span style=\"transform:translateY(4px)\" class=\"no-select\" appCellStyle=\"{{ t.acces === false ? '✖' : '✔' }}\">{{ t.acces === false ? '✖' : '✔' }}</span>\r\n            </td>\r\n            <td>\r\n              <select (change)=\"onRoleSelect($event ,t)\">\r\n                <option selected> {{ t.nomRole }} </option>\r\n                <option disabled style=\"color:aliceblue; background-color: #1DDD92;\"> Choisissez un role </option>\r\n                <option id=\"role\" name=\"role\" *ngFor=\"let role of t.roles; let i = index\"\r\n                        [value]=\"role.id\" [(ngModel)]=\"role.nom\">  {{ role.nom }} </option>\r\n              </select>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table><br /><br />\r\n\r\n\r\n\r\n      \r\n    </div>\r\n  </form>\r\n\r\n\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}