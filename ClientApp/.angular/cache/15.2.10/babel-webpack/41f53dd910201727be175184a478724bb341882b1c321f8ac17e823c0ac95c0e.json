{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FonctionService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl + 'Fonction';\n  }\n  getFonctions(IdApplication) {\n    return this.http.get(`${this.apiUrl}/List/${IdApplication}`);\n  }\n  Recherche(rech, IdApplication) {\n    return this.http.get(`${this.apiUrl}/${rech}/${IdApplication}`);\n  }\n  getFonction(id) {\n    return this.http.get(`${this.apiUrl}/Get/${id}`);\n  }\n  addFonction(Fonction, IdApplication) {\n    return this.http.post(`${this.apiUrl}/ajouter/${IdApplication}`, Fonction);\n  }\n  updateFonction(IdApplication, Fonction) {\n    return this.http.put(`${this.apiUrl}/modifier/${IdApplication}`, Fonction);\n  }\n  deleteFonction(id, IdApplication) {\n    return this.http.delete(`${this.apiUrl}/supprimer?id=${id}&IdApplication=${IdApplication}`);\n  }\n  static #_ = this.ɵfac = function FonctionService_Factory(t) {\n    return new (t || FonctionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FonctionService,\n    factory: FonctionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAGH,WAAW,CAACI,MAAM,GAAG,UAAU;EAER;EAExCC,YAAY,CAACC,aAAqB;IAChC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAQ,GAAG,IAAI,CAACH,MAAM,SAASE,aAAa,EAAE,CAAC;EACrE;EAEAE,SAAS,CAACC,IAAmB,EAAEH,aAAqB;IAClD,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACH,MAAM,IAAIK,IAAI,IAAIH,aAAa,EAAE,CAAC;EACtE;EAEAI,WAAW,CAACC,EAAS;IACnB,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACH,MAAM,QAAQO,EAAE,EAAE,CAAC;EACvD;EAEAC,WAAW,CAACC,QAAa,EAAEP,aAAqB;IAC9C,OAAO,IAAI,CAACH,IAAI,CAACW,IAAI,CAAM,GAAG,IAAI,CAACV,MAAM,YAAYE,aAAa,EAAE,EAAEO,QAAQ,CAAC;EACjF;EAEAE,cAAc,CAACT,aAAqB,EAAEO,QAAa;IACjD,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAM,GAAG,IAAI,CAACZ,MAAM,aAAaE,aAAa,EAAE,EAAEO,QAAQ,CAAC;EACjF;EAEAI,cAAc,CAACN,EAAU,EAAEL,aAAqB;IAC9C,OAAO,IAAI,CAACH,IAAI,CAACe,MAAM,CAAM,GAAG,IAAI,CAACd,MAAM,iBAAiBO,EAAE,kBAAkBL,aAAa,EAAE,CAAC;EAClG;EAAC;qBA3BUL,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAkB,SAAflB,eAAe;IAAAmB,YAFd;EAAM","names":["environment","FonctionService","constructor","http","apiUrl","getFonctions","IdApplication","get","Recherche","rech","getFonction","id","addFonction","Fonction","post","updateFonction","put","deleteFonction","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Services\\fonction.service.ts"],"sourcesContent":["import { environment } from 'src/environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FonctionService {\r\n  private apiUrl = environment.apiUrl + 'Fonction'; \r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getFonctions(IdApplication :number): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiUrl}/List/${IdApplication}`);\r\n  }\r\n\r\n  Recherche(rech: string | null, IdApplication: number): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${rech}/${IdApplication}`);\r\n  }\r\n\r\n  getFonction(id:number): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/Get/${id}`);\r\n  }\r\n\r\n  addFonction(Fonction: any ,IdApplication: number): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/ajouter/${IdApplication}`, Fonction);\r\n  }\r\n\r\n  updateFonction(IdApplication: number, Fonction: any): Observable<any> {\r\n    return this.http.put<any>(`${this.apiUrl}/modifier/${IdApplication}`, Fonction);\r\n  }\r\n\r\n  deleteFonction(id: number ,IdApplication: number): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiUrl}/supprimer?id=${id}&IdApplication=${IdApplication}`);\r\n  }\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}