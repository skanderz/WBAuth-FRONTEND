{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Application } from '../../Models/application.model';\nlet ApplicationComponent = class ApplicationComponent {\n  constructor(roleService, applicationService, JournalisationService, router, route, ActionService, UtilisateurService) {\n    this.roleService = roleService;\n    this.applicationService = applicationService;\n    this.JournalisationService = JournalisationService;\n    this.router = router;\n    this.route = route;\n    this.ActionService = ActionService;\n    this.UtilisateurService = UtilisateurService;\n    this.applications = [];\n    this.application = new Application();\n    this.rech = '';\n    this.AppParDefaut = {\n      nom: \"WBAuth\",\n      url: \"www.wbauth.com\",\n      auth2FA: true,\n      authGoogle: true,\n      authFacebook: true,\n      authLinkedIn: true\n    };\n    this.RoleParDefaut = {\n      nom: \"Utilisateur\",\n      niveau: 1,\n      idApplication: 0\n    };\n  }\n  ngOnInit() {\n    this.loadApplications();\n  }\n  loadApplications() {\n    this.applicationService.getApplications().subscribe(data => {\n      this.applications = data;\n      const app = this.applications.filter(app => app.url.toLowerCase() === 'www.wbauth.com');\n      if (app.length == 0) {\n        this.applicationService.addApplication(this.AppParDefaut).subscribe(() => {\n          this.applicationService.Recherche(\"www.wbauth.com\").subscribe(data => {\n            this.RoleParDefaut.idApplication = data[0].id;\n            this.roleService.addRole(this.RoleParDefaut).subscribe(() => {});\n          });\n        });\n      }\n    }, error => {\n      console.error('Erreur lors de la récupération des applications : ', error);\n    });\n  }\n  Recherche() {\n    if (this.rech === \"\") {\n      this.loadApplications();\n    } else {\n      this.applicationService.getApplications().subscribe(data => {\n        this.applications = data;\n        this.applications = this.applications.filter(app => {\n          return app.nom.toLowerCase().includes(this.rech.toLowerCase()) || app.url.toLowerCase().includes(this.rech.toLowerCase());\n        });\n      });\n    }\n  }\n  onModifierClick(id) {\n    this.router.navigate(['Application/ModifierApplication', id]);\n  }\n  deleteApplication(id) {\n    this.applicationService.getApplication(id).subscribe(data => {\n      if (data.url.toLowerCase() == \"www.wbauth.com\") {\n        alert(\"l'application WBAuth est insupprimable ,car c'est l'application elle-même en cours d'utilisation\");\n      } else {\n        if (confirm('Voulez-vous vraiment supprimer cette application ?')) {\n          this.applicationService.deleteApplication(id).subscribe(() => {\n            this.loadApplications();\n          });\n        }\n      }\n    });\n  }\n  EnregistrerAction() {\n    let username = localStorage.getItem(\"username\");\n    this.UtilisateurService.Recherche(username).subscribe(data => {\n      this.JournalisationService.getJournalisations(data.id).subscribe(dataJournalisations => {\n        let idJournalisation = dataJournalisations[dataJournalisations.length - 1].id;\n        const action = {\n          id: 0,\n          application: \"www.wbauth.com\",\n          date: new Date(),\n          description: `l'utilisateur ${username} a changé le mot de passe `,\n          idJournalisation: idJournalisation,\n          journalisation: dataJournalisations[dataJournalisations.length - 1]\n        };\n        this.ActionService.EnregistrementActions(action).subscribe(() => {});\n      });\n    });\n  }\n};\nApplicationComponent = __decorate([Component({\n  selector: 'app-Application',\n  templateUrl: './Application.component.html'\n})], ApplicationComponent);\nexport { ApplicationComponent };","map":{"version":3,"mappings":"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","names":["Component","Application","ApplicationComponent","constructor","roleService","applicationService","JournalisationService","router","route","ActionService","UtilisateurService","nom","url","auth2FA","authGoogle","authFacebook","authLinkedIn","niveau","idApplication","ngOnInit","loadApplications","getApplications","subscribe","data","applications","app","filter","toLowerCase","length","addApplication","AppParDefaut","Recherche","RoleParDefaut","id","addRole","error","console","rech","includes","onModifierClick","navigate","deleteApplication","getApplication","alert","confirm","EnregistrerAction","username","localStorage","getItem","getJournalisations","dataJournalisations","idJournalisation","action","application","date","Date","description","journalisation","EnregistrementActions","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Application\\Application.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApplicationService } from '../../Services/application.service';\r\nimport { Application } from '../../Models/application.model';\r\nimport { RoleService } from '../../Services/role.service';\r\nimport { Role } from '../../Models/role.model';\r\nimport { filter, Observable } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { JournalisationService } from '../../Services/journalisation.service';\r\nimport { ActionService } from '../../Services/action.service';\r\nimport { Action } from '../../Models/action.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-Application',\r\n  templateUrl: './Application.component.html'\r\n})\r\n\r\nexport class ApplicationComponent implements OnInit {\r\n  applications: any[] = [];\r\n  application: Application = new Application();\r\n  rech: string = '';\r\n  AppParDefaut: any = {\r\n    nom: \"WBAuth\", url: \"www.wbauth.com\", auth2FA: true, authGoogle: true, authFacebook: true, authLinkedIn: true,\r\n  }\r\n  RoleParDefaut: any = {\r\n    nom: \"Utilisateur\", niveau: 1, idApplication: 0\r\n  }\r\n\r\n\r\n  constructor(private roleService: RoleService, private applicationService: ApplicationService, private JournalisationService: JournalisationService\r\n    , private router: Router, private route: ActivatedRoute, private ActionService: ActionService, private UtilisateurService: UtilisateurService){}\r\n\r\n\r\n  ngOnInit(): void {  this.loadApplications(); }\r\n\r\n\r\n  loadApplications() {\r\n    this.applicationService.getApplications().subscribe((data) => {\r\n      this.applications = data;\r\n      const app = this.applications.filter(app => app.url.toLowerCase() === 'www.wbauth.com');\r\n      if (app.length == 0) {\r\n        this.applicationService.addApplication(this.AppParDefaut).subscribe(() => { \r\n          this.applicationService.Recherche(\"www.wbauth.com\").subscribe((data) => {\r\n            this.RoleParDefaut.idApplication = data[0].id;\r\n            this.roleService.addRole(this.RoleParDefaut).subscribe(() => {});\r\n          });\r\n        });\r\n      }\r\n    },\r\n    (error) => { console.error('Erreur lors de la récupération des applications : ', error);});\r\n  }\r\n\r\n\r\n  Recherche(){\r\n    if (this.rech === \"\") { this.loadApplications(); }\r\n    else {\r\n      this.applicationService.getApplications().subscribe((data) => {\r\n        this.applications = data;\r\n        this.applications = this.applications.filter(app => {\r\n          return app.nom.toLowerCase().includes(this.rech.toLowerCase()) || app.url.toLowerCase().includes(this.rech.toLowerCase());\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  onModifierClick(id: number) { this.router.navigate(['Application/ModifierApplication', id]); }\r\n\r\n\r\n  deleteApplication(id: number) {\r\n    this.applicationService.getApplication(id).subscribe((data) => {\r\n      if (data.url.toLowerCase() == \"www.wbauth.com\") {\r\n        alert(\"l'application WBAuth est insupprimable ,car c'est l'application elle-même en cours d'utilisation\");\r\n      }\r\n      else {\r\n        if (confirm('Voulez-vous vraiment supprimer cette application ?')) {\r\n          this.applicationService.deleteApplication(id).subscribe(() => { this.loadApplications(); });\r\n        }\r\n      }\r\n   });\r\n  }\r\n\r\n\r\n  EnregistrerAction() {\r\n    let username = localStorage.getItem(\"username\");\r\n    this.UtilisateurService.Recherche(username).subscribe((data) => {\r\n      this.JournalisationService.getJournalisations(data.id).subscribe((dataJournalisations) => {\r\n        let idJournalisation = dataJournalisations[dataJournalisations.length - 1].id;\r\n        const action: Action = {\r\n          id: 0, application: \"www.wbauth.com\", date: new Date(), description: `l'utilisateur ${username} a changé le mot de passe `,\r\n          idJournalisation: idJournalisation, journalisation: dataJournalisations[dataJournalisations.length - 1]\r\n        }\r\n        this.ActionService.EnregistrementActions(action).subscribe(() => { });\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}