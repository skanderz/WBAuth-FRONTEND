{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthInterceptor {\n  constructor(router) {\n    this.router = router;\n    this.handleError = error => {\n      if (error.status === 404) {\n        return this.handleNotFound(error);\n      } else if (error.status === 401) {\n        return this.handleUnauthorized(error);\n      } else if (error.status === 400) {\n        return this.handleBadRequest(error);\n      } else if (error.status != 404 && error.status != 401 && error.status != 400) {\n        console.log(error);\n      }\n      return 'Une erreur inattendue s\\'est produite.';\n    };\n    this.handleUnauthorized = error => {\n      if (this.router.url === '/Authentification') {\n        return error.error.errorMessage;\n      } else {\n        this.router.navigate(['/Authentification']);\n        return error.message;\n      }\n    };\n    this.handleNotFound = error => {\n      if (this.router.url === '/Activite') {\n        this.router.navigate(['/Activite']);\n      }\n      return error.message;\n    };\n    this.handleBadRequest = error => {\n      if (this.router.url === '/ForgotPassword') {\n        let values = Object.values(error.error.errors);\n        return values[0];\n      } else if (this.router.url === '/Inscription' || this.router.url === '/Utilisateur/AjouterUtilisateur') {\n        let message = '';\n        let values = Object.values(error.error.errors);\n        console.log(values[0].description);\n        for (let i = 0; i < values.length; i++) {\n          message = message + values[i].description + \" \";\n        }\n        return message;\n      }\n      return \"Requete échouée! Erreur 400\";\n    };\n  }\n  intercept(req, next) {\n    return next.handle(req).pipe(catchError(error => {\n      let errorMessage = this.handleError(error);\n      return throwError(() => new Error(errorMessage));\n    }));\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"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","names":["throwError","catchError","AuthInterceptor","constructor","router","error","status","handleNotFound","handleUnauthorized","handleBadRequest","console","log","url","errorMessage","navigate","message","values","Object","errors","description","i","length","intercept","req","next","handle","pipe","handleError","Error","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\auth\\auth.interceptor.ts"],"sourcesContent":["import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Observable, throwError } from 'rxjs';\nimport { catchError ,tap } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\n\nexport class AuthInterceptor implements HttpInterceptor{\n  constructor(private router: Router){}\n\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe( catchError((error: HttpErrorResponse) => {\n          let errorMessage = this.handleError(error);\n          return throwError(() => new Error(errorMessage));\n        })\n      )\n  }\n\n  private handleError = (error: HttpErrorResponse): string => {\n    if (error.status === 404) { return this.handleNotFound(error); }\n    else if (error.status === 401) { return this.handleUnauthorized(error); }\n    else if (error.status === 400) { return this.handleBadRequest(error); }\n    else if (error.status != 404 && error.status != 401 && error.status != 400 ) { console.log(error); }\n    return 'Une erreur inattendue s\\'est produite.';\n  }\n\n\n  private handleUnauthorized = (error: HttpErrorResponse) : string => {\n    if (this.router.url === '/Authentification') {\n      return error.error.errorMessage;\n    }\n    else {\n      this.router.navigate(['/Authentification']);\n      return error.message;\n    }\n  }\n\n\n  private handleNotFound = (error: HttpErrorResponse): string => {\n    if (this.router.url === '/Activite') { this.router.navigate(['/Activite']); }\n    return error.message;\n  }\n\n\n  private handleBadRequest = (error: HttpErrorResponse): string => {\n    if (this.router.url === '/ForgotPassword'){\n      let values: any = Object.values(error.error.errors);\n      return values[0];\n    }\n    else if (this.router.url === '/Inscription' || this.router.url === '/Utilisateur/AjouterUtilisateur')\n      {\n      let message = '';\n      let values: any = Object.values(error.error.errors);\n      console.log(values[0].description);\n      for (let i = 0; i < values.length; i++) {\n        message = message + values[i].description + \" \";\n      }\n      return message;\n    }\n    return \"Requete échouée! Erreur 400\";\n  };\n\n\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}