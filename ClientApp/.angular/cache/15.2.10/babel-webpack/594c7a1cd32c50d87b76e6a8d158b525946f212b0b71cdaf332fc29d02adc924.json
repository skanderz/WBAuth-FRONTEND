{"ast":null,"code":"import { Fonction } from '../../../Models/fonction.model';\nimport { Application } from '../../../Models/application.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../Services/fonction.service\";\nimport * as i2 from \"../../../Services/application.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = function () {\n  return [\"/Fonction\"];\n};\nexport class ModifierFonctionComponent {\n  constructor(FonctionService, ApplicationService, router, route) {\n    this.FonctionService = FonctionService;\n    this.ApplicationService = ApplicationService;\n    this.router = router;\n    this.route = route;\n    this.fonction = new Fonction();\n    this.application = new Application();\n  }\n  ngOnInit() {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam) {\n      const id = +idParam;\n      if (!isNaN(id)) {\n        this.FonctionService.getFonction(id).subscribe(data => {\n          if (data) {\n            this.fonction = data;\n            console.log(data);\n            if (this.fonction.type === 'Multifonctions') {\n              this.fonction.type = 'Multifonctions';\n            } else {\n              this.fonction.type = 'Fonction Unique';\n            }\n            this.ApplicationService.getApplication(this.fonction.idApplication).subscribe(data => {\n              if (data) {\n                this.application = data;\n                console.log(data);\n              }\n            });\n          }\n        });\n      } else {\n        console.error('La valeur du paramètre \"id\" n\\'est pas un nombre valide.');\n      }\n    } else {\n      console.error('Le paramètre \"id\" est manquant dans l\\'URL.');\n    }\n  }\n  onSubmit() {\n    console.log(this.fonction);\n    this.FonctionService.updateFonction(this.fonction.idApplication, this.fonction).subscribe(response => {\n      if (response) {\n        this.router.navigate(['/Fonction']);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ModifierFonctionComponent_Factory(t) {\n    return new (t || ModifierFonctionComponent)(i0.ɵɵdirectiveInject(i1.FonctionService), i0.ɵɵdirectiveInject(i2.ApplicationService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierFonctionComponent,\n    selectors: [[\"app-ModifierFonction\"]],\n    decls: 38,\n    vars: 6,\n    consts: [[1, \"background-titre\"], [1, \"ajouter-content\"], [1, \"ajouter-entete\"], [1, \"modifier-return\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-angles-left\"], [1, \"modifier-titre\"], [1, \"yellow-border\", 3, \"ngSubmit\"], [1, \"form-content\"], [1, \"form-content-rows\"], [\"for\", \"nomApp\"], [\"type\", \"text\", \"id\", \"nomApp\", \"name\", \"nomApp\", \"readonly\", \"\", 1, \"yellow-border\", 2, \"cursor\", \"not-allowed\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"type\"], [\"id\", \"type\", \"name\", \"type\", 1, \"yellow-border\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Multifonctions\"], [\"value\", \"Fonction Unique\"], [\"for\", \"nom\"], [\"type\", \"text\", \"id\", \"nom\", \"name\", \"nom\", \"required\", \"\", 1, \"yellow-border\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [\"id\", \"description\", \"name\", \"description\", \"rows\", \"4\", \"required\", \"\", 1, \"yellow-border\", 3, \"ngModel\", \"ngModelChange\"], [1, \"no-select\"], [\"type\", \"submit\", 1, \"valider\"]],\n    template: function ModifierFonctionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \" GESTION DES FONCTIONS \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3);\n        i0.ɵɵelement(6, \"i\", 4);\n        i0.ɵɵtext(7, \" RETURN \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵtext(9, \" MODIFICATION DE LA FONCTION \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function ModifierFonctionComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"div\", 8)(13, \"label\", 9);\n        i0.ɵɵtext(14, \"APPLICATION :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierFonctionComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.application.nom = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 8)(17, \"label\", 11);\n        i0.ɵɵtext(18, \"TYPE:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"select\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierFonctionComponent_Template_select_ngModelChange_19_listener($event) {\n          return ctx.fonction.type = $event;\n        });\n        i0.ɵɵelementStart(20, \"option\", 13);\n        i0.ɵɵtext(21, \"Multifonctions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"option\", 14);\n        i0.ɵɵtext(23, \"Fonction Unique\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"div\", 8)(25, \"label\", 15);\n        i0.ɵɵtext(26, \"NOM :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"input\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierFonctionComponent_Template_input_ngModelChange_27_listener($event) {\n          return ctx.fonction.nom = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 8)(29, \"label\", 17);\n        i0.ɵɵtext(30, \"DESCRIPTION :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 18)(32, \"textarea\", 19);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierFonctionComponent_Template_textarea_ngModelChange_32_listener($event) {\n          return ctx.fonction.description = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"div\", 8);\n        i0.ɵɵelement(34, \"label\", 20);\n        i0.ɵɵelementStart(35, \"div\")(36, \"button\", 21);\n        i0.ɵɵtext(37, \"VALIDER\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c0));\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.application.nom);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.fonction.type);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.fonction.nom);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.fonction.description);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i3.RouterLink],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"AAKA,SAASA,QAAQ,QAAQ,gCAAgC;AACzD,SAASC,WAAW,QAAQ,mCAAmC;;;;;;;;;AAM/D,OAAM,MAAOC,yBAAyB;EAIpCC,YAAoBC,eAAgC,EAAUC,kBAAsC,EAAUC,MAAc,EAAUC,KAAqB;IAAvI,oBAAe,GAAfH,eAAe;IAA2B,uBAAkB,GAAlBC,kBAAkB;IAA8B,WAAM,GAANC,MAAM;IAAkB,UAAK,GAALC,KAAK;IAHpI,aAAQ,GAAa,IAAIP,QAAQ,EAAE;IACnC,gBAAW,GAAgB,IAAIC,WAAW,EAAE;EAE0G;EAE7JO,QAAQ;IACN,MAAMC,OAAO,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACtD,IAAIH,OAAO,EAAE;MACX,MAAMI,EAAE,GAAG,CAACJ,OAAO;MACnB,IAAI,CAACK,KAAK,CAACD,EAAE,CAAC,EAAE;QACd,IAAI,CAACT,eAAe,CAACW,WAAW,CAACF,EAAE,CAAC,CAACG,SAAS,CAAEC,IAAI,IAAI;UACtD,IAAIA,IAAI,EAAE;YACR,IAAI,CAACC,QAAQ,GAAGD,IAAI;YAAEE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;YACvC,IAAI,IAAI,CAACC,QAAQ,CAACG,IAAI,KAAK,gBAAgB,EAAE;cAAE,IAAI,CAACH,QAAQ,CAACG,IAAI,GAAG,gBAAgB;aAAG,MAAM;cAAE,IAAI,CAACH,QAAQ,CAACG,IAAI,GAAG,iBAAiB;;YACrI,IAAI,CAAChB,kBAAkB,CAACiB,cAAc,CAAC,IAAI,CAACJ,QAAQ,CAACK,aAAa,CAAC,CAACP,SAAS,CAAEC,IAAI,IAAI;cAAG,IAAIA,IAAI,EAAE;gBAAE,IAAI,CAACO,WAAW,GAAGP,IAAI;gBAAEE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;;YAAI,CAAC,CAAC;;QAE1J,CAAC,CAAC;OACH,MACI;QAAEE,OAAO,CAACM,KAAK,CAAC,0DAA0D,CAAC;;KACjF,MACI;MAAEN,OAAO,CAACM,KAAK,CAAC,6CAA6C,CAAC;;EACrE;EAGAC,QAAQ;IACNP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;IAC1B,IAAI,CAACd,eAAe,CAACuB,cAAc,CAAC,IAAI,CAACT,QAAQ,CAACK,aAAa,EAAE,IAAI,CAACL,QAAQ,CAAC,CAACF,SAAS,CAAEY,QAAQ,IAAI;MACrG,IAAIA,QAAQ,EAAE;QAAE,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;;IACrD,CAAC,CAAC;EACJ;EAAC;qBA9BU3B,yBAAyB;EAAA;EAAA;UAAzBA,yBAAyB;IAAA4B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCZtCC,8BAA8B;QAAMA,uCAAsB;QAAAA,iBAAK;QAG/DA,8BAA6B;QAGkCA,uBAAuC;QAACA,wBAAO;QAAAA,iBAAM;QAChHA,8BAA4B;QAACA,6CAA4B;QAAAA,iBAAM;QAKjEA,gCAAoD;QAA9CA;UAAA,OAAYC,cAAU;QAAA,EAAC;QAC3BD,+BAA0B;QAEFA,8BAAa;QAAAA,iBAAQ;QACzCA,kCAAqI;QAAlEA;UAAA;QAAA,EAA6B;QAAhGA,iBAAqI;QAGvIA,+BAA+B;QACXA,sBAAK;QAAAA,iBAAQ;QAC/BA,mCAAgF;QAA5BA;UAAA;QAAA,EAA2B;QAC7EA,mCAA+B;QAAAA,+BAAc;QAAAA,iBAAS;QACtDA,mCAAgC;QAAAA,gCAAe;QAAAA,iBAAS;QAI5DA,+BAA+B;QACZA,sBAAK;QAAAA,iBAAQ;QAC9BA,kCAAiG;QAApCA;UAAA;QAAA,EAA0B;QAAvFA,iBAAiG;QAGnGA,+BAA+B;QACJA,8BAAa;QAAAA,iBAAQ;QAC9CA,gCAAoD;QAC2BA;UAAA;QAAA,EAAkC;QAAUA,iBAAW;QAIxIA,+BAA+B;QAC7BA,6BAAiC;QAACA,4BAAK;QAAuCA,wBAAO;QAAAA,iBAAS;;;QAlCrEA,eAA4B;QAA5BA,uDAA4B;QAUcA,gBAA6B;QAA7BA,6CAA6B;QAK5CA,eAA2B;QAA3BA,2CAA2B;QAQlBA,eAA0B;QAA1BA,0CAA0B;QAMRA,eAAkC;QAAlCA,kDAAkC","names":["Fonction","Application","ModifierFonctionComponent","constructor","FonctionService","ApplicationService","router","route","ngOnInit","idParam","snapshot","paramMap","get","id","isNaN","getFonction","subscribe","data","fonction","console","log","type","getApplication","idApplication","application","error","onSubmit","updateFonction","response","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Fonction\\Modifier\\ModifierFonction.component.ts","C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Fonction\\Modifier\\ModifierFonction.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FonctionService } from '../../../Services/fonction.service';\r\nimport { ApplicationService } from '../../../Services/application.service';\r\nimport { Fonction } from '../../../Models/fonction.model';\r\nimport { Application } from '../../../Models/application.model';\r\n\r\n@Component({\r\n  selector: 'app-ModifierFonction',\r\n  templateUrl: './ModifierFonction.component.html'\r\n})\r\nexport class ModifierFonctionComponent implements OnInit {\r\n  public fonction: Fonction = new Fonction();\r\n  public application: Application = new Application();\r\n\r\n  constructor(private FonctionService: FonctionService ,private ApplicationService: ApplicationService ,private router: Router, private route: ActivatedRoute){}\r\n\r\n  ngOnInit(): void {\r\n    const idParam = this.route.snapshot.paramMap.get('id');\r\n    if (idParam) {\r\n      const id = +idParam;\r\n      if (!isNaN(id)) {\r\n        this.FonctionService.getFonction(id).subscribe((data) => {\r\n          if (data) {\r\n            this.fonction = data; console.log(data);\r\n            if (this.fonction.type === 'Multifonctions') { this.fonction.type = 'Multifonctions'; } else { this.fonction.type = 'Fonction Unique'; }\r\n            this.ApplicationService.getApplication(this.fonction.idApplication).subscribe((data) => { if (data) { this.application = data; console.log(data); } });\r\n          }\r\n        });\r\n      }\r\n      else { console.error('La valeur du paramètre \"id\" n\\'est pas un nombre valide.'); }\r\n    }\r\n    else { console.error('Le paramètre \"id\" est manquant dans l\\'URL.'); }\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    console.log(this.fonction);\r\n    this.FonctionService.updateFonction(this.fonction.idApplication, this.fonction).subscribe((response) => {\r\n      if (response) { this.router.navigate(['/Fonction']); }\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div class=\"background-titre\"> <h1> GESTION DES FONCTIONS </h1> </div>\r\n\r\n\r\n<div class=\"ajouter-content\">\r\n\r\n  <div class=\"ajouter-entete\">\r\n    <div class=\"modifier-return\" [routerLink]=\"['/Fonction']\"> <i class=\"fa-solid fa-angles-left\"></i> RETURN </div>\r\n    <div class=\"modifier-titre\"> MODIFICATION DE LA FONCTION </div>\r\n  </div>\r\n\r\n\r\n\r\n  <form (ngSubmit)=\"onSubmit()\" class=\"yellow-border\">\r\n    <div class=\"form-content\">\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"nomApp\">APPLICATION :</label>\r\n        <input class=\"yellow-border\" type=\"text\" id=\"nomApp\" name=\"nomApp\" [(ngModel)]=\"application.nom\" style=\"cursor:not-allowed\" readonly>\r\n      </div>\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"type\">TYPE:</label>\r\n        <select class=\"yellow-border\" id=\"type\" name=\"type\" [(ngModel)]=\"fonction.type\">\r\n          <option value=\"Multifonctions\">Multifonctions</option>\r\n          <option value=\"Fonction Unique\">Fonction Unique</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"nom\">NOM :</label>\r\n        <input class=\"yellow-border\" type=\"text\" id=\"nom\" name=\"nom\" [(ngModel)]=\"fonction.nom\" required>\r\n      </div>\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"description\">DESCRIPTION :</label>\r\n        <div style=\"display: flex; flex-direction: column;\">\r\n          <textarea class=\"yellow-border\" id=\"description\" name=\"description\" rows=\"4\" [(ngModel)]=\"fonction.description\" required></textarea>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label class=\"no-select\"></label> <div> <button type=\"submit\" class=\"valider\">VALIDER</button> </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  </form>\r\n\r\n\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}