{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet ForgotPasswordAppExterne = class ForgotPasswordAppExterne {\n  constructor(UtilisateurService, router) {\n    this.UtilisateurService = UtilisateurService;\n    this.router = router;\n    this.validateControl = controlName => {\n      return this.forgotPasswordForm.get(controlName).invalid && this.forgotPasswordForm.get(controlName).touched;\n    };\n    this.hasError = (controlName, errorName) => {\n      return this.forgotPasswordForm.get(controlName).hasError(errorName);\n    };\n    this.forgotPassword = forgotPasswordFormValue => {\n      this.showError = this.showSuccess = false;\n      const forgotPass = {\n        ...forgotPasswordFormValue\n      };\n      const forgotPassDto = {\n        email: forgotPass.email,\n        clientURI: 'https://localhost:44429/ResetPassword'\n      };\n      this.UtilisateurService.forgotPassword(forgotPassDto).subscribe({\n        next: _ => {\n          this.showSuccess = true;\n          this.successMessage = 'Le lien a été envoyé, veuillez vérifier votre courrier électronique pour réinitialiser votre mot de passe.';\n          const forgotPasswordBtn = document.getElementById('forgotPasswordBtn');\n          forgotPasswordBtn.disabled = true;\n          forgotPasswordBtn.style.backgroundColor = 'lightgray';\n          forgotPasswordBtn.style.borderColor = '#111';\n          forgotPasswordBtn.style.color = '#100564';\n          forgotPasswordBtn.style.cursor = 'not-allowed';\n        },\n        error: err => {\n          this.showError = true;\n          this.errorMessage = \"Veuillez saisir un email valide !\";\n        }\n      });\n    };\n  }\n  ngOnInit() {\n    this.forgotPasswordForm = new FormGroup({\n      email: new FormControl(\"\", [Validators.required])\n    });\n  }\n};\nForgotPasswordAppExterne = __decorate([Component({\n  selector: 'app-ForgotPasswordAppExterne',\n  templateUrl: './forgot-passwordAppExterne.component.html'\n})], ForgotPasswordAppExterne);\nexport { ForgotPasswordAppExterne };","map":{"version":3,"mappings":";AAGA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAS5D,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAOnCC,YAAoBC,kBAAsC,EAAUC,MAAc;IAA9D,uBAAkB,GAAlBD,kBAAkB;IAA8B,WAAM,GAANC,MAAM;IAOnE,oBAAe,GAAIC,WAAmB,IAAI;MAC/C,OAAO,IAAI,CAACC,kBAAkB,CAACC,GAAG,CAACF,WAAW,CAAE,CAACG,OAAO,IAAI,IAAI,CAACF,kBAAkB,CAACC,GAAG,CAACF,WAAW,CAAE,CAACI,OAAO;IAC/G,CAAC;IAGM,aAAQ,GAAG,CAACJ,WAAmB,EAAEK,SAAiB,KAAI;MAC3D,OAAO,IAAI,CAACJ,kBAAkB,CAACC,GAAG,CAACF,WAAW,CAAE,CAACM,QAAQ,CAACD,SAAS,CAAC;IACtE,CAAC;IAGM,mBAAc,GAAIE,uBAA4B,IAAI;MACvD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,WAAW,GAAG,KAAK;MACzC,MAAMC,UAAU,GAAG;QAAE,GAAGH;MAAuB,CAAE;MACjD,MAAMI,aAAa,GAAoB;QACrCC,KAAK,EAAEF,UAAU,CAACE,KAAK;QACvBC,SAAS,EAAE;OACZ;MACD,IAAI,CAACf,kBAAkB,CAACgB,cAAc,CAACH,aAAa,CAAC,CAACI,SAAS,CAAC;QAC5DC,IAAI,EAAGC,CAAC,IAAI;UACV,IAAI,CAACR,WAAW,GAAG,IAAI;UACvB,IAAI,CAACS,cAAc,GAAG,4GAA4G;UAChI,MAAMC,iBAAiB,GAAGC,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAsB;UACzFF,iBAAiB,CAACG,QAAQ,GAAG,IAAI;UACjCH,iBAAiB,CAACI,KAAK,CAACC,eAAe,GAAG,WAAW;UACrDL,iBAAiB,CAACI,KAAK,CAACE,WAAW,GAAG,MAAM;UAC5CN,iBAAiB,CAACI,KAAK,CAACG,KAAK,GAAG,SAAS;UACzCP,iBAAiB,CAACI,KAAK,CAACI,MAAM,GAAG,aAAa;QACpD,CAAC;QACDC,KAAK,EAAGC,GAAsB,IAAI;UAChC,IAAI,CAACrB,SAAS,GAAG,IAAI;UACrB,IAAI,CAACsB,YAAY,GAAG,mCAAmC;QACzD;OACH,CAAC;IACJ,CAAC;EAxCmF;EAEpFC,QAAQ;IACN,IAAI,CAAC9B,kBAAkB,GAAG,IAAIR,SAAS,CAAC;MAAGmB,KAAK,EAAE,IAAIlB,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACqC,QAAQ,CAAC;IAAC,CAAI,CAAC;EACnG;CAyCD;AApDYpC,wBAAwB,eALpCJ,SAAS,CAAC;EACTyC,QAAQ,EAAE,8BAA8B;EACxCC,WAAW,EAAE;CACd,CAAC,GAEWtC,wBAAwB,CAoDpC;SApDYA,wBAAwB","names":["Component","FormGroup","FormControl","Validators","ForgotPasswordAppExterne","constructor","UtilisateurService","router","controlName","forgotPasswordForm","get","invalid","touched","errorName","hasError","forgotPasswordFormValue","showError","showSuccess","forgotPass","forgotPassDto","email","clientURI","forgotPassword","subscribe","next","_","successMessage","forgotPasswordBtn","document","getElementById","disabled","style","backgroundColor","borderColor","color","cursor","error","err","errorMessage","ngOnInit","required","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\AccueilApplicationExterne\\Authentification\\forgot-passwordAppExterne.component.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { IForgotPassword } from '../../auth/forgotPassword.interface';\r\nimport { UtilisateurService } from '../../Services/utilisateur.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ForgotPasswordAppExterne',\r\n  templateUrl: './forgot-passwordAppExterne.component.html',\r\n})\r\n\r\nexport class ForgotPasswordAppExterne implements OnInit {\r\n  forgotPasswordForm!: FormGroup;\r\n  successMessage!: string;\r\n  errorMessage!: string;\r\n  showSuccess!: boolean;\r\n  showError!: boolean;\r\n\r\n  constructor(private UtilisateurService: UtilisateurService ,private router: Router){}\r\n\r\n  ngOnInit(): void {\r\n    this.forgotPasswordForm = new FormGroup({  email: new FormControl(\"\", [Validators.required])   })\r\n  }\r\n\r\n\r\n  public validateControl = (controlName: string) => {\r\n    return this.forgotPasswordForm.get(controlName)!.invalid && this.forgotPasswordForm.get(controlName)!.touched\r\n  }\r\n\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.forgotPasswordForm.get(controlName)!.hasError(errorName)\r\n  }\r\n\r\n\r\n  public forgotPassword = (forgotPasswordFormValue: any) => {\r\n    this.showError = this.showSuccess = false;\r\n    const forgotPass = { ...forgotPasswordFormValue };\r\n    const forgotPassDto: IForgotPassword = {\r\n      email: forgotPass.email,\r\n      clientURI: 'https://localhost:44429/ResetPassword'\r\n    }\r\n    this.UtilisateurService.forgotPassword(forgotPassDto).subscribe({\r\n        next: (_) => {\r\n          this.showSuccess = true;\r\n          this.successMessage = 'Le lien a été envoyé, veuillez vérifier votre courrier électronique pour réinitialiser votre mot de passe.';\r\n            const forgotPasswordBtn = document.getElementById('forgotPasswordBtn') as HTMLButtonElement;\r\n              forgotPasswordBtn.disabled = true;\r\n              forgotPasswordBtn.style.backgroundColor = 'lightgray';\r\n              forgotPasswordBtn.style.borderColor = '#111';\r\n              forgotPasswordBtn.style.color = '#100564';\r\n              forgotPasswordBtn.style.cursor = 'not-allowed';\r\n        },\r\n        error: (err: HttpErrorResponse) => {\r\n          this.showError = true;\r\n          this.errorMessage = \"Veuillez saisir un email valide !\";\r\n        }\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}