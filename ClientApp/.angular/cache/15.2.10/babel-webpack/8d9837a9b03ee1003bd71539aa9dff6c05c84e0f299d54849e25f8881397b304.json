{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UtilisateurApplicationService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl + 'UtilisateurApplication';\n  }\n  AddUtilisateurApplication(UtilisateurApplication) {\n    return this.http.post(this.apiUrl + \"/ajouter\", UtilisateurApplication);\n  }\n  getListByApplication(IdApplication) {\n    return this.http.get(`${this.apiUrl}/ListByApplication/${IdApplication}`);\n  }\n  getListByUtilisateur(idUtilisateur) {\n    return this.http.get(`${this.apiUrl}/ListByUtilisateur/${idUtilisateur}`);\n  }\n  getUtilisateurApplication(Id) {\n    return this.http.get(`${this.apiUrl}/Get/${Id}`);\n  }\n  updateUtilisateurApplication(UtilisateurApplication) {\n    return this.http.put(this.apiUrl + \"/modifierAccesRole\", UtilisateurApplication);\n  }\n  static #_ = this.ɵfac = function UtilisateurApplicationService_Factory(t) {\n    return new (t || UtilisateurApplicationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UtilisateurApplicationService,\n    factory: UtilisateurApplicationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,QAAQ,8BAA8B;;;AAS1D,OAAM,MAAOC,6BAA6B;EAGxCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAGH,WAAW,CAACI,MAAM,GAAG,wBAAwB;EAEtB;EAExCC,yBAAyB,CAACC,sBAA2B;IACnD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,IAAI,CAACH,MAAM,GAAG,UAAU,EAAEE,sBAAsB,CAAC;EAC9E;EAEAE,oBAAoB,CAACC,aAAoB;IACvC,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAQ,GAAG,IAAI,CAACN,MAAM,sBAAsBK,aAAa,EAAE,CAAC;EAClF;EAEAE,oBAAoB,CAACC,aAAqB;IACxC,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAQ,GAAG,IAAI,CAACN,MAAM,sBAAsBQ,aAAa,EAAE,CAAC;EAClF;EAEAC,yBAAyB,CAACC,EAAS;IACjC,OAAO,IAAI,CAACX,IAAI,CAACO,GAAG,CAAQ,GAAG,IAAI,CAACN,MAAM,QAAQU,EAAE,EAAE,CAAC;EACzD;EAEAC,4BAA4B,CAACT,sBAA0B;IACrD,OAAO,IAAI,CAACH,IAAI,CAACa,GAAG,CAAM,IAAI,CAACZ,MAAM,GAAG,oBAAoB,EAAEE,sBAAsB,CAAC;EACvF;EAAC;qBAvBUL,6BAA6B;EAAA;EAAA;WAA7BA,6BAA6B;IAAAgB,SAA7BhB,6BAA6B;IAAAiB,YAF5B;EAAM","names":["environment","UtilisateurApplicationService","constructor","http","apiUrl","AddUtilisateurApplication","UtilisateurApplication","post","getListByApplication","IdApplication","get","getListByUtilisateur","idUtilisateur","getUtilisateurApplication","Id","updateUtilisateurApplication","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Services\\utilisateurapplication.service.ts"],"sourcesContent":["import { environment } from 'src/environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UtilisateurApplication } from '../Models/utilisateurapplication.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UtilisateurApplicationService {\r\n  private apiUrl = environment.apiUrl + 'UtilisateurApplication'; \r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  AddUtilisateurApplication(UtilisateurApplication: any) : Observable<any> {\r\n    return this.http.post<any>(this.apiUrl + \"/ajouter\", UtilisateurApplication);\r\n  }\r\n\r\n  getListByApplication(IdApplication:number): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiUrl}/ListByApplication/${IdApplication}`);\r\n  }\r\n\r\n  getListByUtilisateur(idUtilisateur: string): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiUrl}/ListByUtilisateur/${idUtilisateur}`);\r\n  }\r\n\r\n  getUtilisateurApplication(Id:number): Observable<any> {\r\n    return this.http.get<any[]>(`${this.apiUrl}/Get/${Id}`);\r\n  }\r\n\r\n  updateUtilisateurApplication(UtilisateurApplication:any): Observable<any> {\r\n    return this.http.put<any>(this.apiUrl + \"/modifierAccesRole\", UtilisateurApplication);\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}