{"ast":null,"code":"import { UtilisateurApplication } from '../../Models/utilisateurapplication.model';\nimport { Application } from '../../Models/application.model';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/role.service\";\nimport * as i2 from \"../../Services/application.service\";\nimport * as i3 from \"../../Services/utilisateur.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../../Services/utilisateurapplication.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nfunction AuthentificationComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction AuthentificationComponent_em_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthentificationComponent_em_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"/Inscription\"];\n};\nexport class AuthentificationComponent {\n  constructor(roleService, applicationService, UtilisateurService, router, route, UAService) {\n    this.roleService = roleService;\n    this.applicationService = applicationService;\n    this.UtilisateurService = UtilisateurService;\n    this.router = router;\n    this.route = route;\n    this.UAService = UAService;\n    this.Utilisateurs = [];\n    this.IdApp = 0;\n    this.applications = [];\n    this.UtilisateurApp = new UtilisateurApplication();\n    this.UtilisateurApps = [];\n    this.application = new Application();\n    this.rech = '';\n    this.AppParDefaut = {\n      nom: \"WBAuth\",\n      url: \"www.wbauth.com\",\n      auth2FA: true,\n      authGoogle: true,\n      authFacebook: true,\n      authLinkedIn: true\n    };\n    this.RoleParDefaut = {\n      nom: \"Utilisateur\",\n      niveau: 1,\n      idApplication: 0\n    };\n    this.errorMessage = '';\n    this.validateControl = controlName => {\n      return this.loginForm.get(controlName).invalid && this.loginForm.get(controlName).touched;\n    };\n    this.hasError = (controlName, errorName) => {\n      return this.loginForm.get(controlName).hasError(errorName);\n    };\n    this.loginUser = loginFormValue => {\n      this.showError = false;\n      const login = {\n        ...loginFormValue\n      };\n      const userForAuth = {\n        userName: login.userName,\n        password: login.password\n      };\n      this.UtilisateurService.login(userForAuth).subscribe({\n        next: res => {\n          localStorage.setItem(\"token\", res.token);\n          this.UtilisateurService.sendAuthStateChangeNotification(res.isAuthSuccessful);\n          this.ChargerApp();\n          this.loadUtilisateur();\n          this.router.navigate(['/Accueil']);\n        },\n        error: err => {\n          this.errorMessage = err.message;\n          this.showError = true;\n        }\n      });\n    };\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      userName: new FormControl(\"\", [Validators.required]),\n      password: new FormControl(\"\", [Validators.required])\n    });\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  ChargerApp() {\n    this.applicationService.getApplications().subscribe(data => {\n      this.applications = data;\n      const app = this.applications.filter(app => app.url.toLowerCase() === 'www.wbauth.com');\n      if (app.length == 0) {\n        this.applicationService.addApplication(this.AppParDefaut).subscribe(() => {\n          this.applicationService.Recherche(\"www.wbauth.com\").subscribe(data => {\n            this.RoleParDefaut.idApplication = data[0].id;\n            this.roleService.addRole(this.RoleParDefaut).subscribe(() => {});\n          });\n        });\n      }\n    }, error => {\n      console.error('Erreur lors de la récupération des applications : ', error);\n    });\n  }\n  loadUtilisateur() {\n    this.UtilisateurService.getUtilisateurs().subscribe(data => {\n      this.Utilisateurs = data; // userlist\n      console.log(this.Utilisateurs);\n      for (const user of this.Utilisateurs) {\n        // chaque user\n        this.UAService.getListByUtilisateur(user.id).subscribe(UAdata => {\n          this.applicationService.getApplications().subscribe(AppData => {\n            this.applications = AppData; // App list \n            for (const app of this.applications) {\n              this.UtilisateurApps = UAdata; // userApp list\n              const result = this.UtilisateurApps.filter(ua => ua.guidUtilisateur == user.id && ua.idApplication == app.id);\n              if (result.length == 0) {\n                this.UtilisateurApp.idRole = null;\n                this.UtilisateurApp.idApplication = app.id;\n                this.UtilisateurApp.guidUtilisateur = user.id;\n                console.log(this.UtilisateurApp);\n                this.UAService.AddUtilisateurApplication(this.UtilisateurApp).subscribe(response => {\n                  if (response) {\n                    console.log(this.UtilisateurApp);\n                  }\n                });\n              }\n            }\n          });\n        });\n      }\n    }, error => {\n      console.error('Erreur lors de la récupération des Utilisateur : ', error);\n    });\n  }\n  static #_ = this.ɵfac = function AuthentificationComponent_Factory(t) {\n    return new (t || AuthentificationComponent)(i0.ɵɵdirectiveInject(i1.RoleService), i0.ɵɵdirectiveInject(i2.ApplicationService), i0.ɵɵdirectiveInject(i3.UtilisateurService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i5.UtilisateurApplicationService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthentificationComponent,\n    selectors: [[\"app-Auhtentification\"]],\n    decls: 19,\n    vars: 7,\n    consts: [[1, \"AccueilContent\", 2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\"], [\"src\", \"../../assets/Images/PC-AccueilPrincipale.png\", 2, \"width\", \"350px\", \"height\", \"350px\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\", \"justify-content\", \"center\", \"align-items\", \"center\", \"margin\", \"0px 0px 0px -20px\"], [\"src\", \"../../assets/Images/WBConcept-AccueilPrincipale.png\", 2, \"width\", \"70%\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"autocomplete\", \"off\", \"novalidate\", \"\", 1, \"register\", 3, \"formGroup\", \"ngSubmit\"], [4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"NOM D'UTILISATEUR\", \"id\", \"userName\", \"name\", \"userName\", \"formControlName\", \"userName\", \"required\", \"\", 1, \"auth-field\"], [\"type\", \"password\", \"placeholder\", \"MOT DE PASSE\", \"id\", \"mdp\", \"name\", \"mdp\", \"formControlName\", \"password\", \"required\", \"\", 1, \"auth-field\"], [\"type\", \"submit\", 1, \"auth-btn\", 3, \"disabled\"], [2, \"width\", \"6%\"], [1, \"mdp-oubli\\u00E9\"], [2, \"color\", \"#C4BDF6\", \"margin-bottom\", \"10px\"], [1, \"auth-inscri-btn\", 3, \"routerLink\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"]],\n    template: function AuthentificationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵtemplate(4, AuthentificationComponent_div_4_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementStart(5, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function AuthentificationComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.loginUser(ctx.loginForm.value);\n        });\n        i0.ɵɵtemplate(6, AuthentificationComponent_em_6_Template, 2, 0, \"em\", 6);\n        i0.ɵɵelement(7, \"input\", 7);\n        i0.ɵɵtemplate(8, AuthentificationComponent_em_8_Template, 2, 0, \"em\", 6);\n        i0.ɵɵelement(9, \"input\", 8);\n        i0.ɵɵelementStart(10, \"button\", 9);\n        i0.ɵɵtext(11, \"SE CONNECTER\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"div\", 10);\n        i0.ɵɵelementStart(13, \"div\", 11);\n        i0.ɵɵtext(14, \" Mot de passe oubli\\u00E9 ? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 12);\n        i0.ɵɵtext(16, \" \\u2022\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2022 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 13);\n        i0.ɵɵtext(18, \" CR\\u00C9ER NOUVEAU COMPTE \");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"userName\") && ctx.hasError(\"userName\", \"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"password\") && ctx.hasError(\"password\", \"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n      }\n    },\n    dependencies: [i6.NgIf, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.FormGroupDirective, i7.FormControlName, i4.RouterLink],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["UtilisateurApplication","Application","FormGroup","FormControl","Validators","i0","AuthentificationComponent","constructor","roleService","applicationService","UtilisateurService","router","route","UAService","nom","url","auth2FA","authGoogle","authFacebook","authLinkedIn","niveau","idApplication","controlName","loginForm","get","invalid","touched","errorName","hasError","loginFormValue","showError","login","userForAuth","userName","password","subscribe","next","res","localStorage","setItem","token","sendAuthStateChangeNotification","isAuthSuccessful","ChargerApp","loadUtilisateur","navigate","error","err","errorMessage","message","ngOnInit","required","returnUrl","snapshot","queryParams","getApplications","data","applications","app","filter","toLowerCase","length","addApplication","AppParDefaut","Recherche","RoleParDefaut","id","addRole","console","getUtilisateurs","Utilisateurs","log","user","getListByUtilisateur","UAdata","AppData","UtilisateurApps","result","ua","guidUtilisateur","UtilisateurApp","idRole","AddUtilisateurApplication","response","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\AccueilPrincipale\\Authentification\\Authentification.component.ts","C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\AccueilPrincipale\\Authentification\\Authentification.component.html"],"sourcesContent":["import { Component, NgModule, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UtilisateurService } from '../../Services/utilisateur.service';\r\nimport { Utilisateur } from '../../Models/utilisateur.model';\r\nimport { UtilisateurApplicationService } from '../../Services/utilisateurapplication.service';\r\nimport { UtilisateurApplication } from '../../Models/utilisateurapplication.model';\r\nimport { ApplicationService } from '../../Services/application.service';\r\nimport { Application } from '../../Models/application.model';\r\nimport { RoleService } from '../../Services/role.service';\r\nimport { Role } from '../../Models/role.model';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Login } from './../../auth/login.interface';\r\nimport { Response } from './../../auth/response.interface';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-Auhtentification',\r\n  templateUrl: './Authentification.component.html',\r\n})\r\n\r\nexport class AuthentificationComponent implements OnInit {\r\n  Utilisateurs: any[] = [];\r\n  IdApp: number = 0;\r\n  applications: any[] = [];\r\n  UtilisateurApp: UtilisateurApplication = new UtilisateurApplication();\r\n  UtilisateurApps: UtilisateurApplication[] = [];\r\n  application: Application = new Application();\r\n  rech: string = '';\r\n  AppParDefaut: any = {\r\n    nom: \"WBAuth\", url: \"www.wbauth.com\", auth2FA: true, authGoogle: true, authFacebook: true, authLinkedIn: true,\r\n  }\r\n  RoleParDefaut: any = {  nom: \"Utilisateur\", niveau: 1, idApplication: 0  }\r\n  private returnUrl!: string;\r\n  loginForm!: FormGroup;\r\n  errorMessage: string = '';\r\n  showError!: boolean;\r\n\r\n  constructor(private roleService: RoleService, private applicationService: ApplicationService, private UtilisateurService: UtilisateurService,\r\n      private router: Router, private route: ActivatedRoute, private UAService: UtilisateurApplicationService){}\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = new FormGroup({\r\n      userName: new FormControl(\"\", [Validators.required]),\r\n      password: new FormControl(\"\", [Validators.required])\r\n    })\r\n   this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n\r\n  validateControl = (controlName: string) => {\r\n    return this.loginForm.get(controlName)!.invalid && this.loginForm.get(controlName)!.touched\r\n  }\r\n\r\n\r\n  hasError = (controlName: string, errorName: string) => {\r\n    return this.loginForm.get(controlName)!.hasError(errorName)\r\n  }\r\n\r\n\r\n  loginUser = (loginFormValue : any) => {\r\n    this.showError = false;\r\n    const login = { ...loginFormValue };\r\n    const userForAuth: Login = {\r\n      userName: login.userName,\r\n      password: login.password\r\n    }\r\n    this.UtilisateurService.login(userForAuth).subscribe({\r\n        next: (res: Response) => {\r\n          localStorage.setItem(\"token\", res.token);\r\n          this.UtilisateurService.sendAuthStateChangeNotification(res.isAuthSuccessful);\r\n          this.ChargerApp();\r\n          this.loadUtilisateur();\r\n        this.router.navigate(['/Accueil']);\r\n        },\r\n        error: (err: HttpErrorResponse) => {\r\n          this.errorMessage = err.message;\r\n          this.showError = true;\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  ChargerApp(){\r\n    this.applicationService.getApplications().subscribe((data) => {\r\n      this.applications = data;\r\n      const app = this.applications.filter(app => app.url.toLowerCase() === 'www.wbauth.com');\r\n      if (app.length == 0) {\r\n        this.applicationService.addApplication(this.AppParDefaut).subscribe(() => {\r\n          this.applicationService.Recherche(\"www.wbauth.com\").subscribe((data) => {\r\n            this.RoleParDefaut.idApplication = data[0].id;\r\n            this.roleService.addRole(this.RoleParDefaut).subscribe(() => {\r\n            });\r\n          });\r\n        });\r\n      }\r\n    },\r\n      (error) => { console.error('Erreur lors de la récupération des applications : ', error); });\r\n  }\r\n\r\n\r\n  loadUtilisateur(){\r\n    this.UtilisateurService.getUtilisateurs().subscribe((data) => {\r\n      this.Utilisateurs = data; // userlist\r\n      console.log(this.Utilisateurs);\r\n      for (const user of this.Utilisateurs) { // chaque user\r\n        this.UAService.getListByUtilisateur(user.id).subscribe((UAdata) => {\r\n          this.applicationService.getApplications().subscribe((AppData) => {\r\n            this.applications = AppData; // App list \r\n            for (const app of this.applications) {\r\n              this.UtilisateurApps = UAdata;  // userApp list\r\n              const result = this.UtilisateurApps.filter((ua) => (ua.guidUtilisateur == user.id) && (ua.idApplication == app.id));\r\n              if (result.length == 0) {\r\n                this.UtilisateurApp.idRole = null;\r\n                this.UtilisateurApp.idApplication = app.id;\r\n                this.UtilisateurApp.guidUtilisateur = user.id;\r\n                console.log(this.UtilisateurApp);\r\n                this.UAService.AddUtilisateurApplication(this.UtilisateurApp).subscribe((response) => {\r\n                  if (response) { console.log(this.UtilisateurApp); }\r\n                });\r\n              }\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }, (error) => { console.error('Erreur lors de la récupération des Utilisateur : ', error); });\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","<div class=\"AccueilContent\" style=\"display:flex; justify-content:center; align-items:center;\">\r\n\r\n  <img src=\"../../assets/Images/PC-AccueilPrincipale.png\" style=\"width:350px; height:350px\" />\r\n\r\n  <div style=\"display:flex; flex-direction:column; justify-content:center; align-items:center; margin:0px 0px 0px -20px;\">\r\n    <img src=\"../../assets/Images/WBConcept-AccueilPrincipale.png\" style=\"width:70%;\" />\r\n\r\n    <div *ngIf=\"showError\" class=\"alert alert-danger\" role=\"alert\"> {{errorMessage}}  </div>\r\n\r\n    <form class=\"register\" [formGroup]=\"loginForm\" autocomplete=\"off\" novalidate (ngSubmit)=\"loginUser(loginForm.value)\">\r\n\r\n        <em *ngIf=\"validateControl('userName') && hasError('userName', 'required')\">username is required</em>\r\n      <input class=\"auth-field\" type=\"text\" placeholder=\"NOM D'UTILISATEUR\" id=\"userName\" name=\"userName\" formControlName=\"userName\" required>\r\n        <em *ngIf=\"validateControl('password') && hasError('password', 'required')\">Password is required</em>\r\n      <input class=\"auth-field\" type=\"password\" placeholder=\"MOT DE PASSE\" id=\"mdp\" name=\"mdp\" formControlName=\"password\" required>\r\n\r\n      <button type=\"submit\" class=\"auth-btn\" [disabled]=\"!loginForm.valid\">SE CONNECTER</button>\r\n      <div style=\"width:6%;\"></div>\r\n      <div class=\"mdp-oublié\">  Mot de passe oublié ? </div>\r\n      <div style=\"color:#C4BDF6; margin-bottom: 10px;\"> •────────────────────────• </div>\r\n      <div class=\"auth-inscri-btn\" [routerLink]=\"['/Inscription']\"> CRÉER NOUVEAU COMPTE </div>\r\n    </form>\r\n\r\n\r\n  </div>\r\n\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}