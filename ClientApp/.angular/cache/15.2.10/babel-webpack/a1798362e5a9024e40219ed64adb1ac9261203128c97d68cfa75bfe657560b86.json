{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Utilisateur } from '../../../Models/utilisateur.model';\nlet ModifierProfilComponent = class ModifierProfilComponent {\n  constructor(UtilisateurService, router, route) {\n    this.UtilisateurService = UtilisateurService;\n    this.router = router;\n    this.route = route;\n    this.Utilisateur = new Utilisateur();\n    this.Utilisateurs = [];\n    this.choix = 1;\n    this.errorMessage = '';\n    this.showError = false;\n    this.oldEmail = \"\";\n    this.oldUserName = \"\";\n  }\n  ngOnInit() {\n    const username = localStorage.getItem(\"username\");\n    this.UtilisateurService.getUtilisateurs().subscribe(data => {\n      this.Utilisateurs = data;\n      this.Utilisateurs = this.Utilisateurs.filter(user => {\n        return user.userName.toLowerCase().includes(username.toLowerCase());\n      });\n      this.Utilisateur = this.Utilisateurs[0];\n      this.oldEmail = this.Utilisateur.email;\n      this.oldUserName = this.Utilisateur.userName;\n      this.UserUpdate = {\n        userName: \"\",\n        nom: \"\",\n        prenom: \"\",\n        email: \"\",\n        status: true\n      };\n    });\n  }\n  onSubmit() {\n    this.showError = false;\n    this.UserUpdate.userName = this.Utilisateur.userName;\n    this.UserUpdate.email = this.Utilisateur.email;\n    this.UserUpdate.nom = this.Utilisateur.nom;\n    this.UserUpdate.prenom = this.Utilisateur.prenom;\n    this.UserUpdate.status = this.Utilisateur.status;\n    this.UtilisateurService.getUtilisateurs().subscribe(data => {\n      const checkEmail = data.filter(user => {\n        return user.email.toLowerCase().includes(this.UserUpdate.email.toLowerCase());\n      });\n      const checkUserName = data.filter(user => {\n        return user.email.toLowerCase().includes(this.UserUpdate.email.toLowerCase());\n      });\n      if (checkEmail.length != 0 && this.UserUpdate.email != this.oldEmail) {\n        this.errorMessage = \"Un utilisateur avec l'email '\" + this.UserUpdate.email + \"' existe déjà dans l'application !\";\n        this.showError = true;\n      } else if (checkUserName.length != 0 && this.UserUpdate.userName != this.oldUserName) {\n        this.errorMessage = \"Un utilisateur avec le nom d'utilisateur '\" + this.UserUpdate.userName + \"' existe déjà dans l'application !\";\n        this.showError = true;\n      } else {\n        this.UtilisateurService.updateUtilisateur(this.Utilisateur.id, this.UserUpdate).subscribe(response => {\n          if (response) {\n            this.router.navigate(['/Accueil']);\n          }\n        });\n      }\n    });\n  }\n};\nModifierProfilComponent = __decorate([Component({\n  selector: 'app-ModifierProfil',\n  templateUrl: './ModifierProfil.component.html'\n})], ModifierProfilComponent);\nexport { ModifierProfilComponent };","map":{"version":3,"mappings":"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","names":["Component","Utilisateur","ModifierProfilComponent","constructor","UtilisateurService","router","route","ngOnInit","username","localStorage","getItem","getUtilisateurs","subscribe","data","Utilisateurs","filter","user","userName","toLowerCase","includes","oldEmail","email","oldUserName","UserUpdate","nom","prenom","status","onSubmit","showError","checkEmail","checkUserName","length","errorMessage","updateUtilisateur","id","response","navigate","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Utilisateur\\Profil\\ModifierProfil.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UtilisateurService } from '../../../Services/utilisateur.service';\r\nimport { Utilisateur } from '../../../Models/utilisateur.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ModifierProfil',\r\n  templateUrl: './ModifierProfil.component.html'\r\n})\r\n\r\nexport class ModifierProfilComponent implements OnInit {\r\n  Utilisateur: Utilisateur = new Utilisateur();\r\n  Utilisateurs: any[] = [];\r\n  UserUpdate!: {\r\n    userName: string | null;\r\n    nom: string | null;\r\n    prenom: string | null;\r\n    email: string | null;\r\n    status: boolean | null;\r\n  }; \r\n  choix: number = 1;\r\n  errorMessage: string = '';\r\n  showError: boolean = false;\r\n  oldEmail: string | null = \"\";\r\n  oldUserName: string | null = \"\";\r\n\r\n  constructor(private UtilisateurService: UtilisateurService, private router: Router, private route: ActivatedRoute){}\r\n\r\n  ngOnInit(): void {\r\n    const username = localStorage.getItem(\"username\");\r\n    this.UtilisateurService.getUtilisateurs().subscribe((data) => {\r\n      this.Utilisateurs = data;\r\n      this.Utilisateurs = this.Utilisateurs.filter(user => { return user.userName.toLowerCase().includes(username!.toLowerCase()); });\r\n      this.Utilisateur = this.Utilisateurs[0];\r\n      this.oldEmail = this.Utilisateur.email;\r\n      this.oldUserName = this.Utilisateur.userName;\r\n      this.UserUpdate = { userName: \"\", nom: \"\", prenom: \"\", email: \"\", status: true };\r\n    });\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.showError = false;\r\n    this.UserUpdate.userName = this.Utilisateur.userName;\r\n    this.UserUpdate.email = this.Utilisateur.email;\r\n    this.UserUpdate.nom = this.Utilisateur.nom;\r\n    this.UserUpdate.prenom = this.Utilisateur.prenom;\r\n    this.UserUpdate.status = this.Utilisateur.status;\r\n    this.UtilisateurService.getUtilisateurs().subscribe((data) => {\r\n      const checkEmail = data.filter((user) => { return user.email.toLowerCase().includes(this.UserUpdate.email!.toLowerCase()); });\r\n      const checkUserName = data.filter((user) => { return user.email.toLowerCase().includes(this.UserUpdate.email!.toLowerCase()); });\r\n      if (checkEmail.length != 0 && this.UserUpdate.email != this.oldEmail) {\r\n        this.errorMessage = \"Un utilisateur avec l'email '\" + this.UserUpdate.email + \"' existe déjà dans l'application !\";\r\n        this.showError = true;\r\n      }\r\n      else if (checkUserName.length != 0 && this.UserUpdate.userName != this.oldUserName) {\r\n        this.errorMessage = \"Un utilisateur avec le nom d'utilisateur '\" + this.UserUpdate.userName + \"' existe déjà dans l'application !\";\r\n        this.showError = true;\r\n      }\r\n      else {\r\n        this.UtilisateurService.updateUtilisateur(this.Utilisateur.id, this.UserUpdate).subscribe((response) => {\r\n          if (response) { this.router.navigate(['/Accueil']); }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}