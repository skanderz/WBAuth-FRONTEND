{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApplicationService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl + 'Application';\n  }\n  getApplications() {\n    return this.http.get(`${this.apiUrl}/List`);\n  }\n  getApplication(id) {\n    return this.http.get(`${this.apiUrl}/Get/${id}`);\n  }\n  Recherche(rech) {\n    return this.http.get(`${this.apiUrl}/${rech}`);\n  }\n  addApplication(Application) {\n    return this.http.post(this.apiUrl + \"/ajouter\", Application);\n  }\n  updateApplication(Application) {\n    return this.http.put(this.apiUrl + \"/modifier\", Application);\n  }\n  deleteApplication(id) {\n    return this.http.delete(`${this.apiUrl}/supprimer?id=${id}`);\n  }\n  static #_ = this.ɵfac = function ApplicationService_Factory(t) {\n    return new (t || ApplicationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApplicationService,\n    factory: ApplicationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAGH,WAAW,CAACI,MAAM,GAAG,aAAa;EAEX;EAExCC,eAAe;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,OAAO,CAAC;EACpD;EAEAG,cAAc,CAACC,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,QAAQI,EAAE,EAAE,CAAC;EACvD;EAEAC,SAAS,CAACC,IAAmB;IAC3B,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,IAAIM,IAAI,EAAE,CAAC;EACrD;EAEAC,cAAc,CAACC,WAAgB;IAC7B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAM,IAAI,CAACT,MAAM,GAAG,UAAU,EAAEQ,WAAW,CAAC;EACnE;EAEAE,iBAAiB,CAACF,WAAgB;IAChC,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAM,IAAI,CAACX,MAAM,GAAG,WAAW,EAAEQ,WAAW,CAAC;EACnE;EAEAI,iBAAiB,CAACR,EAAU;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACc,MAAM,CAAM,GAAG,IAAI,CAACb,MAAM,iBAAiBI,EAAE,EAAE,CAAC;EACnE;EAAC;qBA3BUP,kBAAkB;EAAA;EAAA;WAAlBA,kBAAkB;IAAAiB,SAAlBjB,kBAAkB;IAAAkB,YAFjB;EAAM","names":["environment","ApplicationService","constructor","http","apiUrl","getApplications","get","getApplication","id","Recherche","rech","addApplication","Application","post","updateApplication","put","deleteApplication","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Services\\application.service.ts"],"sourcesContent":["import { environment } from 'src/environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationService {\r\n  private apiUrl = environment.apiUrl + 'Application'; \r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getApplications(): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiUrl}/List`);\r\n  }\r\n\r\n  getApplication(id: number): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/Get/${id}`);\r\n  }\r\n\r\n  Recherche(rech: string | null): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${rech}`);\r\n  }\r\n\r\n  addApplication(Application: any): Observable<any> {\r\n    return this.http.post<any>(this.apiUrl + \"/ajouter\", Application);\r\n  }\r\n\r\n  updateApplication(Application: any): Observable<any>{\r\n    return this.http.put<any>(this.apiUrl + \"/modifier\", Application);\r\n  }\r\n\r\n  deleteApplication(id: number): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiUrl}/supprimer?id=${id}`);\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}