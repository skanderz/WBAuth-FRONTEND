{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet FonctionComponent = class FonctionComponent {\n  constructor(FonctionService, ApplicationService, router, route, JournalisationService, ActionService) {\n    this.FonctionService = FonctionService;\n    this.ApplicationService = ApplicationService;\n    this.router = router;\n    this.route = route;\n    this.JournalisationService = JournalisationService;\n    this.ActionService = ActionService;\n    this.fonctions = [];\n    this.applications = [];\n    this.rech = '';\n    this.IdApp = 0;\n  }\n  ngOnInit() {\n    this.ApplicationService.getApplications().subscribe(data => {\n      this.applications = data;\n      if (this.applications && this.applications.length > 0) {\n        this.IdApp = this.applications[0].id;\n        this.loadFonctions();\n      }\n    }, error => {\n      console.error('Erreur lors de la récupération des applications : ', error);\n    });\n  }\n  loadFonctions() {\n    if (this.applications.length > 0) {\n      this.FonctionService.getFonctions(this.IdApp).subscribe(data => {\n        this.fonctions = data;\n      }, error => {\n        console.error('Erreur lors de la récupération des Fonctions : ', error);\n      });\n    }\n  }\n  Recherche() {\n    if (this.rech == \"\") {\n      this.loadFonctions();\n    } else {\n      this.FonctionService.getFonctions(this.IdApp).subscribe(data => {\n        this.fonctions = data;\n        this.fonctions = this.fonctions.filter(fonc => {\n          return fonc.nom.toLowerCase().includes(this.rech.toLowerCase());\n        });\n      });\n    }\n  }\n  onModifierClick(id) {\n    this.router.navigate(['Fonction/ModifierFonction', id]);\n  }\n  deleteFonction(id) {\n    if (confirm('Voulez-vous vraiment supprimer cette Fonction ?')) {\n      this.FonctionService.deleteFonction(id, this.IdApp).subscribe(() => {\n        this.loadFonctions();\n      });\n    }\n  }\n};\nFonctionComponent = __decorate([Component({\n  selector: 'app-Fonction',\n  templateUrl: './Fonction.component.html'\n})], FonctionComponent);\nexport { FonctionComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAkB1C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAM5BC,YAAoBC,eAAgC,EAAUC,kBAAsC,EAAUC,MAAc,EAAUC,KAAqB,EAClJC,qBAA4C,EAAUC,aAA4B;IADvE,oBAAe,GAAfL,eAAe;IAA2B,uBAAkB,GAAlBC,kBAAkB;IAA8B,WAAM,GAANC,MAAM;IAAkB,UAAK,GAALC,KAAK;IAClI,0BAAqB,GAArBC,qBAAqB;IAAiC,kBAAa,GAAbC,aAAa;IAN5E,cAAS,GAAU,EAAE;IACrB,iBAAY,GAAU,EAAE;IACxB,SAAI,GAAW,EAAE;IACjB,UAAK,GAAW,CAAC;EAG8E;EAG/FC,QAAQ;IACN,IAAI,CAACL,kBAAkB,CAACM,eAAe,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MAC3D,IAAI,CAACC,YAAY,GAAGD,IAAI;MACxB,IAAI,IAAI,CAACC,YAAY,IAAI,IAAI,CAACA,YAAY,CAACC,MAAM,GAAG,CAAC,EAAE;QACrD,IAAI,CAACC,KAAK,GAAG,IAAI,CAACF,YAAY,CAAC,CAAC,CAAC,CAACG,EAAE;QACpC,IAAI,CAACC,aAAa,EAAE;;IAExB,CAAC,EACEC,KAAK,IAAI;MAAIC,OAAO,CAACD,KAAK,CAAC,oDAAoD,EAAEA,KAAK,CAAC;IAAC,CAAC,CAAC;EAC/F;EAIAD,aAAa;IACX,IAAI,IAAI,CAACJ,YAAY,CAACC,MAAM,GAAG,CAAC,EAAE;MAChC,IAAI,CAACX,eAAe,CAACiB,YAAY,CAAC,IAAI,CAACL,KAAK,CAAC,CAACJ,SAAS,CAAEC,IAAI,IAAI;QAC/D,IAAI,CAACS,SAAS,GAAGT,IAAI;MACvB,CAAC,EACAM,KAAK,IAAI;QAAGC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MAAE,CAAC,CAAC;;EAC5F;EAGAI,SAAS;IACP,IAAI,IAAI,CAACC,IAAI,IAAI,EAAE,EAAE;MAAE,IAAI,CAACN,aAAa,EAAE;KAAG,MACzC;MACH,IAAI,CAACd,eAAe,CAACiB,YAAY,CAAC,IAAI,CAACL,KAAK,CAAC,CAACJ,SAAS,CAAEC,IAAI,IAAI;QAC/D,IAAI,CAACS,SAAS,GAAGT,IAAI;QACrB,IAAI,CAACS,SAAS,GAAG,IAAI,CAACA,SAAS,CAACG,MAAM,CAACC,IAAI,IAAG;UAAG,OAAOA,IAAI,CAACC,GAAG,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACL,IAAI,CAACI,WAAW,EAAE,CAAC;QAAE,CAAC,CAAC;MACtH,CAAC,CAAC;;EAEN;EAGAE,eAAe,CAACb,EAAU;IAAI,IAAI,CAACX,MAAM,CAACyB,QAAQ,CAAC,CAAC,2BAA2B,EAAEd,EAAE,CAAC,CAAC;EAAE;EAGvFe,cAAc,CAACf,EAAU;IACvB,IAAIgB,OAAO,CAAC,iDAAiD,CAAC,EAAE;MAAE,IAAI,CAAC7B,eAAe,CAAC4B,cAAc,CAACf,EAAE,EAAC,IAAI,CAACD,KAAK,CAAC,CAACJ,SAAS,CAAC,MAAK;QAAG,IAAI,CAACM,aAAa,EAAE;MAAE,CAAC,CAAC;;EACjK;CAOD;AAvDYhB,iBAAiB,eAJ7BD,SAAS,CAAC;EACTiC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE;CACd,CAAC,GACWjC,iBAAiB,CAuD7B;SAvDYA,iBAAiB","names":["Component","FonctionComponent","constructor","FonctionService","ApplicationService","router","route","JournalisationService","ActionService","ngOnInit","getApplications","subscribe","data","applications","length","IdApp","id","loadFonctions","error","console","getFonctions","fonctions","Recherche","rech","filter","fonc","nom","toLowerCase","includes","onModifierClick","navigate","deleteFonction","confirm","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Fonction\\Fonction.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Fonction } from '../../Models/fonction.model';\r\nimport { filter, Observable } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FonctionService } from '../../Services/fonction.service';\r\nimport { Application } from '../../Models/application.model';\r\nimport { ApplicationService } from '../../Services/application.service';\r\nimport { JournalisationService } from '../../../Services/journalisation.service';\r\nimport { UtilisateurService } from './../../../Services/utilisateur.service';\r\nimport { ActionService } from '../../../Services/action.service';\r\nimport { Action } from '../../../Models/action.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-Fonction',\r\n  templateUrl: './Fonction.component.html'\r\n})\r\nexport class FonctionComponent {\r\n  fonctions: any[] = [];\r\n  applications: any[] = []; \r\n  rech: string = '';\r\n  IdApp: number = 0;\r\n\r\n  constructor(private FonctionService: FonctionService, private ApplicationService: ApplicationService, private router: Router, private route: ActivatedRoute\r\n  ,private JournalisationService: JournalisationService, private ActionService: ActionService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.ApplicationService.getApplications().subscribe((data) => {\r\n      this.applications = data\r\n      if (this.applications && this.applications.length > 0) {\r\n        this.IdApp = this.applications[0].id;\r\n        this.loadFonctions();\r\n      }\r\n    },\r\n      (error) => {  console.error('Erreur lors de la récupération des applications : ', error);});\r\n  }\r\n\r\n\r\n\r\n  loadFonctions() {\r\n    if (this.applications.length > 0) {\r\n      this.FonctionService.getFonctions(this.IdApp).subscribe((data) => {\r\n        this.fonctions = data;\r\n      },\r\n      (error) => { console.error('Erreur lors de la récupération des Fonctions : ', error); }); }\r\n  }\r\n\r\n\r\n  Recherche(){\r\n    if (this.rech == \"\") { this.loadFonctions(); }\r\n    else {\r\n      this.FonctionService.getFonctions(this.IdApp).subscribe((data) => {\r\n        this.fonctions = data;\r\n        this.fonctions = this.fonctions.filter(fonc => { return fonc.nom.toLowerCase().includes(this.rech.toLowerCase()); });\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  onModifierClick(id: number) { this.router.navigate(['Fonction/ModifierFonction', id]); }\r\n\r\n\r\n  deleteFonction(id: number){\r\n    if (confirm('Voulez-vous vraiment supprimer cette Fonction ?')) { this.FonctionService.deleteFonction(id,this.IdApp).subscribe(() => { this.loadFonctions(); }); }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}