{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/utilisateur.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction InscriptionAppExterneComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction InscriptionAppExterneComponent_em_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Saisir le nom !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InscriptionAppExterneComponent_em_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Saisir le prenom !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InscriptionAppExterneComponent_em_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Saisir le nom d'utilisateur !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InscriptionAppExterneComponent_em_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Saisir une adresse email valide !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InscriptionAppExterneComponent_em_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Saisir une adresse email !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InscriptionAppExterneComponent_em_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Saisir un mot de passe !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InscriptionAppExterneComponent_em_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Le mot de passe doit contenir au moins 6 caract\\u00E8res !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InscriptionAppExterneComponent_em_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Saisir un mot de passe !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InscriptionAppExterneComponent_em_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \" Confirmation de mot de passe incorrect ! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class InscriptionAppExterneComponent {\n  constructor(authService, router, location) {\n    this.authService = authService;\n    this.router = router;\n    this.location = location;\n    this.errorMessage = '';\n    this.urlAppExterne = \"\";\n    this.validateControl = controlName => {\n      return this.registerForm.get(controlName).invalid && this.registerForm.get(controlName).touched;\n    };\n    this.comparePassword = (mdp, confirm) => {\n      return this.registerForm.get(mdp).value != this.registerForm.get(confirm).value && this.registerForm.get(confirm).touched;\n    };\n    this.hasError = (controlName, errorName) => {\n      return this.registerForm.get(controlName).hasError(errorName);\n    };\n    this.registerUser = registerFormValue => {\n      const formValues = {\n        ...registerFormValue\n      };\n      if (formValues.Nom && formValues.Prenom && formValues.Email) {\n        if (formValues.Confirm == formValues.Password) {\n          const user = {\n            nom: formValues.Nom,\n            prenom: formValues.Prenom,\n            email: formValues.Email,\n            Password: formValues.Password,\n            userName: formValues.userName,\n            dateInscription: new Date(),\n            status: true\n          };\n          this.authService.Inscription(user).subscribe({\n            next: res => {\n              this.router.navigate(['/Chargement']);\n            },\n            error: err => {\n              this.errorMessage = err.message;\n              this.showError = true;\n            }\n          });\n        } else alert('Confirmation de mot de passe incorrecte');\n      } else alert('Registration failed');\n    };\n  }\n  ngOnInit() {\n    this.authService.clearCookies();\n    this.registerForm = new FormGroup({\n      Nom: new FormControl('', [Validators.required]),\n      Prenom: new FormControl('', [Validators.required]),\n      userName: new FormControl('', [Validators.required]),\n      Email: new FormControl('', [Validators.required, Validators.email]),\n      Password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      Confirm: new FormControl('', [Validators.required])\n    });\n    const fullPath = this.location.path();\n    const parts = fullPath.split('/');\n    if (parts.length > 0) {\n      this.urlAppExterne = parts[parts.length - 1];\n    }\n  }\n  redirectAuthentification() {\n    this.router.navigate(['/AuthentificationAppExterne/' + this.urlAppExterne]);\n  }\n  static #_ = this.ɵfac = function InscriptionAppExterneComponent_Factory(t) {\n    return new (t || InscriptionAppExterneComponent)(i0.ɵɵdirectiveInject(i1.UtilisateurService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.Location));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InscriptionAppExterneComponent,\n    selectors: [[\"app-InscriptionAppExterne\"]],\n    decls: 29,\n    vars: 12,\n    consts: [[1, \"AccueilContent\", 2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\"], [\"src\", \"../../assets/Images/PC-AccueilPrincipale.png\", 2, \"width\", \"350px\", \"height\", \"350px\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\", \"justify-content\", \"center\", \"align-items\", \"center\", \"margin\", \"0px 0px 0px -20px\"], [\"src\", \"../../assets/Images/WBConcept-AccueilPrincipale.png\", 2, \"width\", \"70%\"], [\"style\", \"max-width:600px;\", \"class\", \"alert alert-danger centered-element\", \"role\", \"alert\", 4, \"ngIf\"], [\"autocomplete\", \"off\", \"novalidate\", \"\", 1, \"register\", 3, \"formGroup\", \"ngSubmit\"], [4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"NOM\", \"id\", \"Nom\", \"name\", \"Nom\", \"formControlName\", \"Nom\", \"required\", \"\", 1, \"auth-field\"], [\"type\", \"text\", \"placeholder\", \"PRENOM\", \"id\", \"Prenom\", \"name\", \"Prenom\", \"formControlName\", \"Prenom\", \"required\", \"\", 1, \"auth-field\"], [\"type\", \"text\", \"placeholder\", \"NOM D'UTILISATEUR\", \"id\", \"userName\", \"name\", \"userName\", \"formControlName\", \"userName\", \"required\", \"\", 1, \"auth-field\"], [\"type\", \"email\", \"placeholder\", \"E-MAIL\", \"id\", \"Email\", \"name\", \"Email\", \"formControlName\", \"Email\", \"required\", \"\", 1, \"auth-field\"], [\"type\", \"password\", \"placeholder\", \"MOT DE PASSE\", \"id\", \"Password\", \"name\", \"Password\", \"formControlName\", \"Password\", \"required\", \"\", 1, \"auth-field\"], [\"type\", \"password\", \"placeholder\", \"CONFIRMATION MOT DE PASSE\", \"id\", \"Confirm\", \"name\", \"Confirm\", \"formControlName\", \"Confirm\", \"required\", \"\", 1, \"auth-field\"], [2, \"color\", \"#C4BDF6\", \"margin\", \"-10px 0px 5px 0px\"], [1, \"auth-btn\", 2, \"margin\", \"5px 0px 14px 0px\", 3, \"disabled\"], [1, \"mdp-oubli\\u00E9\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"centered-element\", 2, \"max-width\", \"600px\"]],\n    template: function InscriptionAppExterneComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵtemplate(4, InscriptionAppExterneComponent_div_4_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementStart(5, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function InscriptionAppExterneComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.registerUser(ctx.registerForm.value);\n        });\n        i0.ɵɵtemplate(6, InscriptionAppExterneComponent_em_6_Template, 2, 0, \"em\", 6);\n        i0.ɵɵelement(7, \"input\", 7);\n        i0.ɵɵtemplate(8, InscriptionAppExterneComponent_em_8_Template, 2, 0, \"em\", 6);\n        i0.ɵɵelement(9, \"input\", 8);\n        i0.ɵɵtemplate(10, InscriptionAppExterneComponent_em_10_Template, 2, 0, \"em\", 6);\n        i0.ɵɵelement(11, \"input\", 9);\n        i0.ɵɵtemplate(12, InscriptionAppExterneComponent_em_12_Template, 2, 0, \"em\", 6);\n        i0.ɵɵtemplate(13, InscriptionAppExterneComponent_em_13_Template, 2, 0, \"em\", 6);\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵtemplate(15, InscriptionAppExterneComponent_em_15_Template, 2, 0, \"em\", 6);\n        i0.ɵɵtemplate(16, InscriptionAppExterneComponent_em_16_Template, 2, 0, \"em\", 6);\n        i0.ɵɵelement(17, \"input\", 11);\n        i0.ɵɵtemplate(18, InscriptionAppExterneComponent_em_18_Template, 2, 0, \"em\", 6);\n        i0.ɵɵtemplate(19, InscriptionAppExterneComponent_em_19_Template, 2, 0, \"em\", 6);\n        i0.ɵɵelement(20, \"input\", 12);\n        i0.ɵɵelementStart(21, \"div\", 13);\n        i0.ɵɵtext(22, \" \\u2022\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2022 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 14);\n        i0.ɵɵtext(24, \" S'INSCRIRE \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 15);\n        i0.ɵɵlistener(\"click\", function InscriptionAppExterneComponent_Template_div_click_25_listener() {\n          return ctx.redirectAuthentification();\n        });\n        i0.ɵɵtext(26, \" D\\u00E9j\\u00E0 inscrit(e) ? \\u00A0 \");\n        i0.ɵɵelementStart(27, \"u\");\n        i0.ɵɵtext(28, \"S\\u2019identifier\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"Nom\") && ctx.hasError(\"Nom\", \"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"Prenom\") && ctx.hasError(\"Prenom\", \"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"userName\") && ctx.hasError(\"userName\", \"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"Email\") && ctx.hasError(\"Email\", \"email\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"Email\") && ctx.hasError(\"Email\", \"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"Password\") && ctx.hasError(\"Password\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"Password\") && ctx.hasError(\"Password\", \"minlength\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"Confirm\") && ctx.hasError(\"Password\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.comparePassword(\"Password\", \"Confirm\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","InscriptionAppExterneComponent","constructor","authService","router","location","controlName","registerForm","get","invalid","touched","mdp","confirm","value","errorName","hasError","registerFormValue","formValues","Nom","Prenom","Email","Confirm","Password","user","nom","prenom","email","userName","dateInscription","Date","status","Inscription","subscribe","next","res","navigate","error","err","errorMessage","message","showError","alert","ngOnInit","clearCookies","required","minLength","fullPath","path","parts","split","length","urlAppExterne","redirectAuthentification","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\AccueilApplicationExterne\\Inscription\\InscriptionAppExterne.component.ts","C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\AccueilApplicationExterne\\Inscription\\InscriptionAppExterne.component.html"],"sourcesContent":["import { Component, NgModule, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonModule ,Location } from '@angular/common';\r\nimport { UtilisateurService } from '../../Services/utilisateur.service';\r\nimport { Utilisateur } from '../../Models/utilisateur.model';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-InscriptionAppExterne',\r\n  templateUrl: './InscriptionAppExterne.component.html',\r\n})\r\n\r\nexport class InscriptionAppExterneComponent implements OnInit {\r\n  registerForm!: FormGroup;\r\n  errorMessage: string = '';\r\n  showError!: boolean;\r\n  urlAppExterne = \"\";\r\n\r\n\r\n  constructor(private authService: UtilisateurService, private router: Router, private location: Location){}\r\n\r\n  ngOnInit(): void {\r\n    this.authService.clearCookies();\r\n\r\n    this.registerForm = new FormGroup({\r\n      Nom: new FormControl('', [Validators.required]),\r\n      Prenom: new FormControl('', [Validators.required]),\r\n      userName: new FormControl('', [Validators.required]),\r\n      Email: new FormControl('', [Validators.required, Validators.email]),\r\n      Password: new FormControl('', [Validators.required, Validators.minLength(6)]),\r\n      Confirm: new FormControl('' , [Validators.required]),\r\n    });\r\n\r\n    const fullPath = this.location.path();\r\n    const parts = fullPath.split('/');\r\n    if (parts.length > 0) {  this.urlAppExterne = parts[parts.length - 1]; }\r\n\r\n  }\r\n\r\n  redirectAuthentification() {\r\n    this.router.navigate(['/AuthentificationAppExterne/' + this.urlAppExterne]);\r\n  }\r\n\r\n  public validateControl = (controlName: string) => {\r\n     return this.registerForm.get(controlName)!.invalid && this.registerForm.get(controlName)!.touched\r\n  }\r\n\r\n  public comparePassword = (mdp: string, confirm: string) => {\r\n    return (this.registerForm.get(mdp)!.value != this.registerForm.get(confirm)!.value) && this.registerForm.get(confirm)!.touched\r\n  }\r\n  \r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n     return this.registerForm.get(controlName)!.hasError(errorName)\r\n  }\r\n\r\n\r\n  public registerUser = (registerFormValue: any) => {\r\n    const formValues = { ...registerFormValue };\r\n    if (formValues.Nom && formValues.Prenom && formValues.Email) {\r\n      if (formValues.Confirm == formValues.Password) {\r\n        const user: any = {\r\n          nom: formValues.Nom,\r\n          prenom: formValues.Prenom,\r\n          email: formValues.Email,\r\n          Password: formValues.Password,\r\n          userName: formValues.userName,\r\n          dateInscription: new Date(),\r\n          status: true,\r\n        };\r\n        this.authService.Inscription(user).subscribe({\r\n          next: (res: Response) => {\r\n              this.router.navigate(['/Chargement']);  \r\n          },\r\n          error: (err: HttpErrorResponse) => {\r\n              this.errorMessage = err.message;\r\n              this.showError = true;\r\n          }\r\n        });\r\n      }\r\n      else alert('Confirmation de mot de passe incorrecte');\r\n    }\r\n    else alert('Registration failed');\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div class=\"AccueilContent\" style=\"display:flex; justify-content:center; align-items:center;\">\r\n\r\n  <img src=\"../../assets/Images/PC-AccueilPrincipale.png\" style=\"width:350px; height:350px\" />\r\n\r\n  <div style=\"display:flex; flex-direction:column; justify-content:center; align-items:center; margin:0px 0px 0px -20px;\">\r\n    <img src=\"../../assets/Images/WBConcept-AccueilPrincipale.png\" style=\"width:70%;\" />\r\n\r\n    <div style=\"max-width:600px;\" *ngIf=\"showError\" class=\"alert alert-danger centered-element\" role=\"alert\"> {{errorMessage}}  </div>\r\n\r\n    <form class=\"register\" [formGroup]=\"registerForm\" autocomplete=\"off\" novalidate (ngSubmit)=\"registerUser(registerForm.value)\">\r\n      <em *ngIf=\"validateControl('Nom') && hasError('Nom', 'required')\">Saisir le nom !</em>\r\n      <input class=\"auth-field\" type=\"text\" placeholder=\"NOM\" id=\"Nom\" name=\"Nom\" formControlName=\"Nom\" required>\r\n\r\n      <em *ngIf=\"validateControl('Prenom') && hasError('Prenom', 'required')\">Saisir le prenom !</em>\r\n      <input class=\"auth-field\" type=\"text\" placeholder=\"PRENOM\" id=\"Prenom\" name=\"Prenom\" formControlName=\"Prenom\" required>\r\n\r\n      <em *ngIf=\"validateControl('userName') && hasError('userName', 'required')\">Saisir le nom d'utilisateur !</em>\r\n      <input class=\"auth-field\" type=\"text\" placeholder=\"NOM D'UTILISATEUR\" id=\"userName\" name=\"userName\" formControlName=\"userName\" required>\r\n\r\n      <em *ngIf=\"validateControl('Email') && hasError('Email', 'email')\">Saisir une adresse email valide !</em>\r\n      <em *ngIf=\"validateControl('Email') && hasError('Email', 'required')\">Saisir une adresse email !</em>\r\n      <input class=\"auth-field\" type=\"email\" placeholder=\"E-MAIL\" id=\"Email\" name=\"Email\" formControlName=\"Email\" required>\r\n\r\n      <em *ngIf=\"validateControl('Password') && hasError('Password', 'required')\">Saisir un mot de passe !</em>\r\n      <em *ngIf=\"validateControl('Password') && hasError('Password', 'minlength')\">Le mot de passe doit contenir au moins 6 caractères !</em>\r\n      <input class=\"auth-field\" type=\"password\" placeholder=\"MOT DE PASSE\" id=\"Password\" name=\"Password\" formControlName=\"Password\" required>\r\n\r\n      <em *ngIf=\"validateControl('Confirm') && hasError('Password', 'required')\">Saisir un mot de passe !</em>\r\n      <em *ngIf=\"comparePassword('Password', 'Confirm')\"> Confirmation de mot de passe incorrect ! </em>\r\n      <input class=\"auth-field\" type=\"password\" placeholder=\"CONFIRMATION MOT DE PASSE\" id=\"Confirm\" name=\"Confirm\" formControlName=\"Confirm\" required>\r\n\r\n      <div style=\"color:#C4BDF6; margin:-10px 0px 5px 0px;\"> •────────────────────────• </div>\r\n      <button class=\"auth-btn\" style=\"margin:5px 0px 14px 0px;\" [disabled]=\"!registerForm.valid\"> S'INSCRIRE </button>\r\n      <div class=\"mdp-oublié\" (click)=\"redirectAuthentification()\"> Déjà inscrit(e) ? &nbsp; <u>S’identifier</u> </div>\r\n    </form>\r\n  </div>\r\n\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}