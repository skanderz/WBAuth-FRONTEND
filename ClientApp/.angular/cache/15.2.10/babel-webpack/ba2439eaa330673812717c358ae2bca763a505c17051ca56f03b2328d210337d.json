{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../Services/utilisateur.service\";\nimport * as i2 from \"../../../Services/utilisateurapplication.service\";\nimport * as i3 from \"../../../Services/application.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction AjouterUtilisateurComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction AjouterUtilisateurComponent_em_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\", 22);\n    i0.ɵɵtext(1, \"Saisir le prenom !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjouterUtilisateurComponent_em_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\", 22);\n    i0.ɵɵtext(1, \"Saisir le nom !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjouterUtilisateurComponent_em_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\", 22);\n    i0.ɵɵtext(1, \"Saisir le nom d'utilisateur !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjouterUtilisateurComponent_em_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\", 22);\n    i0.ɵɵtext(1, \"Saisir une adresse email valide !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjouterUtilisateurComponent_em_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\", 22);\n    i0.ɵɵtext(1, \"Saisir une adresse email !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjouterUtilisateurComponent_em_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\", 22);\n    i0.ɵɵtext(1, \"Saisir un mot de passe !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjouterUtilisateurComponent_em_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\", 22);\n    i0.ɵɵtext(1, \"Le mot de passe doit contenir au moins 6 caract\\u00E8res !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjouterUtilisateurComponent_em_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\", 22);\n    i0.ɵɵtext(1, \"Saisir un mot de passe !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjouterUtilisateurComponent_em_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\", 22);\n    i0.ɵɵtext(1, \" Confirmation de mot de passe incorrect ! \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"/Utilisateur\"];\n};\nexport class AjouterUtilisateurComponent {\n  constructor(UtilisateurService, UAService, ApplicationService, router, authService) {\n    this.UtilisateurService = UtilisateurService;\n    this.UAService = UAService;\n    this.ApplicationService = ApplicationService;\n    this.router = router;\n    this.authService = authService;\n    this.errorMessage = '';\n    this.validateControl = controlName => {\n      return this.registerForm.get(controlName).invalid && this.registerForm.get(controlName).touched;\n    };\n    this.comparePassword = (mdp, confirm) => {\n      return this.registerForm.get(mdp).value != this.registerForm.get(confirm).value && this.registerForm.get(confirm).touched;\n    };\n    this.hasError = (controlName, errorName) => {\n      return this.registerForm.get(controlName).hasError(errorName);\n    };\n    this.registerUser = registerFormValue => {\n      const formValues = {\n        ...registerFormValue\n      };\n      if (formValues.Nom && formValues.Prenom && formValues.Email) {\n        if (formValues.Confirm == formValues.Password) {\n          const user = {\n            nom: formValues.Nom,\n            prenom: formValues.Prenom,\n            email: formValues.Email,\n            Password: formValues.Password,\n            userName: formValues.userName,\n            dateInscription: new Date(),\n            status: true\n          };\n          console.log(user);\n          this.authService.Inscription(user).subscribe({\n            next: res => {\n              this.router.navigate(['/Utilisateur']);\n              alert('Ajout de l\\'utilisateur effectuée avec succès!');\n            },\n            error: err => {\n              this.errorMessage = err.message;\n              this.showError = true;\n            }\n          });\n        } else alert('Confirmation de mot de passe incorrecte');\n      } else alert('Registration failed');\n    };\n  }\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      Nom: new FormControl('', [Validators.required]),\n      Prenom: new FormControl('', [Validators.required]),\n      userName: new FormControl('', [Validators.required]),\n      Email: new FormControl('', [Validators.required, Validators.email]),\n      Password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      Confirm: new FormControl('', [Validators.required])\n    });\n  }\n  static #_ = this.ɵfac = function AjouterUtilisateurComponent_Factory(t) {\n    return new (t || AjouterUtilisateurComponent)(i0.ɵɵdirectiveInject(i1.UtilisateurService), i0.ɵɵdirectiveInject(i2.UtilisateurApplicationService), i0.ɵɵdirectiveInject(i3.ApplicationService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i1.UtilisateurService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AjouterUtilisateurComponent,\n    selectors: [[\"app-AjouterUtilisateur\"]],\n    decls: 51,\n    vars: 14,\n    consts: [[1, \"background-titre\"], [1, \"ajouter-content\"], [1, \"ajouter-entete\"], [1, \"ajouter-return\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-angles-left\"], [1, \"ajouter-titre\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-content\"], [\"style\", \"transform:translateX(35px)\", \"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"centered-adduser\", 4, \"ngIf\"], [1, \"form-content-rows\"], [\"for\", \"nom\", 2, \"transform\", \"translateY(-4px)\"], [\"type\", \"text\", \"id\", \"prenom\", \"name\", \"prenom\", \"formControlName\", \"Prenom\", \"required\", \"\"], [\"type\", \"text\", \"id\", \"nom\", \"name\", \"nom\", \"formControlName\", \"Nom\", \"required\", \"\"], [\"type\", \"text\", \"id\", \"userName\", \"name\", \"userName\", \"formControlName\", \"userName\", \"required\", \"\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"Email\", \"required\", \"\"], [\"for\", \"password\", 2, \"transform\", \"translateY(-4px)\"], [\"type\", \"password\", \"id\", \"Password\", \"name\", \"Password\", \"formControlName\", \"Password\", \"required\", \"\"], [\"type\", \"password\", \"id\", \"Confirm\", \"name\", \"Confirm\", \"formControlName\", \"Confirm\", \"required\", \"\"], [1, \"no-select\"], [\"type\", \"submit\", 1, \"valider\", 3, \"disabled\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", 2, \"transform\", \"translateX(35px)\"], [1, \"centered-adduser\"]],\n    template: function AjouterUtilisateurComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \" GESTION DES UTILISATEURS \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3);\n        i0.ɵɵelement(6, \"i\", 4);\n        i0.ɵɵtext(7, \" RETURN \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵtext(9, \" AJOUT D'UN UTILISATEUR \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function AjouterUtilisateurComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.registerUser(ctx.registerForm.value);\n        });\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵtemplate(12, AjouterUtilisateurComponent_div_12_Template, 2, 1, \"div\", 8);\n        i0.ɵɵtemplate(13, AjouterUtilisateurComponent_em_13_Template, 2, 0, \"em\", 9);\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"label\", 11);\n        i0.ɵɵtext(16, \"PRENOM :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, AjouterUtilisateurComponent_em_18_Template, 2, 0, \"em\", 9);\n        i0.ɵɵelementStart(19, \"div\", 10)(20, \"label\", 11);\n        i0.ɵɵtext(21, \"NOM :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, AjouterUtilisateurComponent_em_23_Template, 2, 0, \"em\", 9);\n        i0.ɵɵelementStart(24, \"div\", 10)(25, \"label\", 11);\n        i0.ɵɵtext(26, \"UTILISATEUR :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, AjouterUtilisateurComponent_em_28_Template, 2, 0, \"em\", 9);\n        i0.ɵɵtemplate(29, AjouterUtilisateurComponent_em_29_Template, 2, 0, \"em\", 9);\n        i0.ɵɵelementStart(30, \"div\", 10)(31, \"label\", 11);\n        i0.ɵɵtext(32, \"EMAIL :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(34, AjouterUtilisateurComponent_em_34_Template, 2, 0, \"em\", 9);\n        i0.ɵɵtemplate(35, AjouterUtilisateurComponent_em_35_Template, 2, 0, \"em\", 9);\n        i0.ɵɵelementStart(36, \"div\", 10)(37, \"label\", 16);\n        i0.ɵɵtext(38, \"MOT DE PASSE :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(40, AjouterUtilisateurComponent_em_40_Template, 2, 0, \"em\", 9);\n        i0.ɵɵtemplate(41, AjouterUtilisateurComponent_em_41_Template, 2, 0, \"em\", 9);\n        i0.ɵɵelementStart(42, \"div\", 10)(43, \"label\", 16);\n        i0.ɵɵtext(44, \"CONFIRMATION MOT DE PASSE :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 10);\n        i0.ɵɵelement(47, \"label\", 19);\n        i0.ɵɵelementStart(48, \"div\")(49, \"button\", 20);\n        i0.ɵɵtext(50, \"VALIDER\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(13, _c0));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"Prenom\") && ctx.hasError(\"Prenom\", \"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"Nom\") && ctx.hasError(\"Nom\", \"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"userName\") && ctx.hasError(\"userName\", \"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"Email\") && ctx.hasError(\"Email\", \"email\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"Email\") && ctx.hasError(\"Email\", \"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"Password\") && ctx.hasError(\"Password\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"Password\") && ctx.hasError(\"Password\", \"minlength\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"Confirm\") && ctx.hasError(\"Password\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.comparePassword(\"Password\", \"Confirm\"));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n      }\n    },\n    dependencies: [i5.NgIf, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.FormGroupDirective, i6.FormControlName, i4.RouterLink],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","AjouterUtilisateurComponent","constructor","UtilisateurService","UAService","ApplicationService","router","authService","controlName","registerForm","get","invalid","touched","mdp","confirm","value","errorName","hasError","registerFormValue","formValues","Nom","Prenom","Email","Confirm","Password","user","nom","prenom","email","userName","dateInscription","Date","status","console","log","Inscription","subscribe","next","res","navigate","alert","error","err","errorMessage","message","showError","ngOnInit","required","minLength","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Utilisateur\\Ajouter\\AjouterUtilisateur.component.ts","C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Utilisateur\\Ajouter\\AjouterUtilisateur.component.html"],"sourcesContent":["import { Component, Inject, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UtilisateurService } from '../../../Services/utilisateur.service';\r\nimport { Utilisateur } from '../../../Models/utilisateur.model';\r\nimport { UtilisateurApplicationService } from '../../../Services/utilisateurapplication.service';\r\nimport { UtilisateurApplication } from '../../../Models/utilisateurapplication.model';\r\nimport { Application } from '../../../Models/application.model';\r\nimport { ApplicationService } from '../../../Services/application.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-AjouterUtilisateur',\r\n  templateUrl: './AjouterUtilisateur.component.html'\r\n})\r\nexport class AjouterUtilisateurComponent implements OnInit {\r\n  registerForm!: FormGroup;\r\n  errorMessage: string = '';\r\n  showError!: boolean;\r\n\r\n  constructor(private UtilisateurService: UtilisateurService, private UAService: UtilisateurApplicationService,\r\n              private ApplicationService: ApplicationService, private router: Router, private authService: UtilisateurService){}\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = new FormGroup({\r\n      Nom: new FormControl('', [Validators.required]),\r\n      Prenom: new FormControl('', [Validators.required]),\r\n      userName: new FormControl('', [Validators.required]),\r\n      Email: new FormControl('', [Validators.required, Validators.email]),\r\n      Password: new FormControl('', [Validators.required, Validators.minLength(6)]),\r\n      Confirm: new FormControl('', [Validators.required]),\r\n    });\r\n  }\r\n\r\n  public validateControl = (controlName: string) => {\r\n    return this.registerForm.get(controlName)!.invalid && this.registerForm.get(controlName)!.touched\r\n  }\r\n\r\n  public comparePassword = (mdp: string, confirm: string) => {\r\n    return (this.registerForm.get(mdp)!.value != this.registerForm.get(confirm)!.value) && this.registerForm.get(confirm)!.touched\r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.registerForm.get(controlName)!.hasError(errorName)\r\n  }\r\n\r\n  public registerUser = (registerFormValue: any) => {\r\n    const formValues = { ...registerFormValue };\r\n    if (formValues.Nom && formValues.Prenom && formValues.Email) {\r\n      if (formValues.Confirm == formValues.Password) {\r\n        const user: any = {\r\n          nom: formValues.Nom,\r\n          prenom: formValues.Prenom,\r\n          email: formValues.Email,\r\n          Password: formValues.Password,\r\n          userName: formValues.userName,\r\n          dateInscription: new Date(),\r\n          status: true,\r\n        };\r\n        console.log(user);\r\n        this.authService.Inscription(user).subscribe({\r\n          next: (res: Response) => {\r\n            this.router.navigate(['/Utilisateur']);\r\n            alert('Ajout de l\\'utilisateur effectuée avec succès!');\r\n          },\r\n          error: (err: HttpErrorResponse) => {\r\n            this.errorMessage = err.message;\r\n            this.showError = true;\r\n          }\r\n        });\r\n      }\r\n      else alert('Confirmation de mot de passe incorrecte');\r\n    }\r\n    else alert('Registration failed');\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  \r\n}\r\n","<div class=\"background-titre\"> <h1> GESTION DES UTILISATEURS </h1> </div>\r\n\r\n\r\n<div class=\"ajouter-content\">\r\n\r\n  <div class=\"ajouter-entete\">\r\n    <div class=\"ajouter-return\" [routerLink]=\"['/Utilisateur']\"> <i class=\"fa-solid fa-angles-left\"></i> RETURN </div>\r\n    <div class=\"ajouter-titre\"> AJOUT D'UN UTILISATEUR </div>\r\n  </div>\r\n\r\n\r\n    <form [formGroup]=\"registerForm\" novalidate (ngSubmit)=\"registerUser(registerForm.value)\">\r\n      <div class=\"form-content\">\r\n\r\n        <div style=\"transform:translateX(35px)\" *ngIf=\"showError\" class=\"alert alert-danger\" role=\"alert\"> {{errorMessage}}  </div>\r\n\r\n        <em class=\"centered-adduser\" *ngIf=\"validateControl('Prenom') && hasError('Prenom', 'required')\">Saisir le prenom !</em>\r\n        <div class=\"form-content-rows\">\r\n          <label style=\"transform:translateY(-4px)\" for=\"nom\">PRENOM :</label>\r\n          <input type=\"text\" id=\"prenom\" name=\"prenom\" formControlName=\"Prenom\" required>\r\n        </div>\r\n\r\n        <em class=\"centered-adduser\" *ngIf=\"validateControl('Nom') && hasError('Nom', 'required')\">Saisir le nom !</em>\r\n        <div class=\"form-content-rows\">\r\n          <label style=\"transform:translateY(-4px) \" for=\"nom\">NOM :</label>\r\n          <input type=\"text\" id=\"nom\" name=\"nom\" formControlName=\"Nom\" required>\r\n        </div>\r\n\r\n        <em class=\"centered-adduser\" *ngIf=\"validateControl('userName') && hasError('userName', 'required')\">Saisir le nom d'utilisateur !</em>\r\n        <div class=\"form-content-rows\">\r\n          <label style=\"transform:translateY(-4px)\" for=\"nom\">UTILISATEUR :</label>\r\n          <input type=\"text\" id=\"userName\" name=\"userName\" formControlName=\"userName\" required>\r\n        </div>\r\n\r\n        <em class=\"centered-adduser\" *ngIf=\"validateControl('Email') && hasError('Email', 'email')\">Saisir une adresse email valide !</em>\r\n        <em class=\"centered-adduser\" *ngIf=\"validateControl('Email') && hasError('Email', 'required')\">Saisir une adresse email !</em>\r\n        <div class=\"form-content-rows\">\r\n          <label style=\"transform:translateY(-4px)\" for=\"nom\">EMAIL :</label>\r\n          <input type=\"email\" id=\"email\" name=\"email\" formControlName=\"Email\" required>\r\n        </div>\r\n\r\n        <em class=\"centered-adduser\" *ngIf=\"validateControl('Password') && hasError('Password', 'required')\">Saisir un mot de passe !</em>\r\n        <em class=\"centered-adduser\" *ngIf=\"validateControl('Password') && hasError('Password', 'minlength')\">Le mot de passe doit contenir au moins 6 caractères !</em>\r\n        <div class=\"form-content-rows\">\r\n          <label style=\"transform:translateY(-4px)\" for=\"password\">MOT DE PASSE :</label>\r\n          <input type=\"password\" id=\"Password\" name=\"Password\" formControlName=\"Password\" required>\r\n        </div>\r\n\r\n        <em class=\"centered-adduser\" *ngIf=\"validateControl('Confirm') && hasError('Password', 'required')\">Saisir un mot de passe !</em>\r\n        <em class=\"centered-adduser\" *ngIf=\"comparePassword('Password', 'Confirm')\"> Confirmation de mot de passe incorrect ! </em>\r\n        <div class=\"form-content-rows\">\r\n          <label style=\"transform:translateY(-4px)\" for=\"password\">CONFIRMATION MOT DE PASSE :</label>\r\n          <input type=\"password\" id=\"Confirm\" name=\"Confirm\" formControlName=\"Confirm\" required>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-content-rows\">\r\n          <label class=\"no-select\"></label> <div>\r\n            <button type=\"submit\" class=\"valider\" [disabled]=\"!registerForm.valid\">VALIDER</button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n  </form>\r\n\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}