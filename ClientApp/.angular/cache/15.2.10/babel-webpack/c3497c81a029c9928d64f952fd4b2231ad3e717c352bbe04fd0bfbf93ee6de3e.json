{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { Journalisation } from '../../Models/journalisation.model';\nlet AuthentificationAppExterneComponent = class AuthentificationAppExterneComponent {\n  constructor(UAService, RoleService, router, location, http, UtilisateurService, route, ApplicationService, JournalisationService) {\n    this.UAService = UAService;\n    this.RoleService = RoleService;\n    this.router = router;\n    this.location = location;\n    this.http = http;\n    this.UtilisateurService = UtilisateurService;\n    this.route = route;\n    this.ApplicationService = ApplicationService;\n    this.JournalisationService = JournalisationService;\n    this.googleClientId = environment.googleClientId;\n    this.linkedInClientId = environment.linkedInClientId;\n    this.urlCallback = \"https://localhost:44429/LinkedIn\";\n    this.journal = new Journalisation();\n    this.errorMessage = '';\n    this.showError = false;\n    this.urlAppExterne = \"\";\n    this.ReseauSocialErreur = () => {\n      const element = document.getElementById(\"userName\");\n      const element2 = document.getElementById('mdp');\n      if (element && element2) {\n        element.select();\n        element2.select();\n        element.select();\n      }\n      this.UtilisateurService.clearCookies();\n    };\n    this.validateControl = controlName => {\n      return this.loginForm.get(controlName).invalid && this.loginForm.get(controlName).touched;\n    };\n    this.hasError = (controlName, errorName) => {\n      return this.loginForm.get(controlName).hasError(errorName);\n    };\n    this.loginUser = loginFormValue => {\n      this.showError = false;\n      const login = {\n        ...loginFormValue\n      };\n      const userForAuth = {\n        userName: login.userName,\n        password: login.password\n      };\n      this.UtilisateurService.login(userForAuth).subscribe({\n        next: res => {\n          this.UtilisateurService.Recherche(login.userName).subscribe(userdata => {\n            localStorage.setItem(\"username\", userdata[0].userName);\n            this.UAService.getListByUtilisateur(userdata[0].id).subscribe(uadata => {\n              this.ApplicationService.Recherche(\"WBAuth\").subscribe(appdata => {\n                let app = uadata.filter(uaApp => uaApp.idApplication == appdata[0].id);\n                if (app[0].acces === false || userdata[0].status === false || res.is2StepVerificationRequired === true || userdata[0].emailConfirmed === false) {\n                  this.showError = true;\n                  if (userdata[0].status === false) {\n                    this.errorMessage = \"Votre compte est désactivé !\";\n                  } else if (app[0].acces === false) {\n                    this.errorMessage = \"Vous n'avez pas l'autorisation d'accéder à cette application !\";\n                  } else if (userdata[0].emailConfirmed === false) {\n                    this.errorMessage = \"Veuillez confirmer votre inscription par email!\";\n                  } else if (res.is2StepVerificationRequired) {\n                    this.router.navigate(['/TwoStepVerification'], {\n                      queryParams: {\n                        returnUrl: \"/Chargement\",\n                        provider: res.provider,\n                        email: userForAuth.userName\n                      }\n                    });\n                  }\n                } else {\n                  this.journal.guidUtilisateur = userdata[0].id;\n                  this.JournalisationService.EnregistrementJournalisations(this.journal).subscribe(() => {});\n                  if (uadata[0].idRole == null) {\n                    localStorage.setItem(\"role\", \"ROLE NON EFFECTUÉ\");\n                    localStorage.setItem(\"token\", res.token);\n                    this.UtilisateurService.sendAuthStateChangeNotification(res.isAuthSuccessful);\n                    this.router.navigate(['/Chargement']);\n                  } else {\n                    this.RoleService.getRole(uadata[0].idRole).subscribe(roledata => {\n                      localStorage.setItem(\"role\", roledata.nom);\n                      localStorage.setItem(\"token\", res.token);\n                      this.UtilisateurService.sendAuthStateChangeNotification(res.isAuthSuccessful);\n                      this.router.navigate(['/Chargement']);\n                    });\n                  }\n                }\n              });\n            });\n          });\n        },\n        error: err => {\n          this.errorMessage = err.message;\n          this.showError = true;\n        }\n      });\n    };\n  }\n  ngOnInit() {\n    const fullPath = this.location.path();\n    const parts = fullPath.split('/');\n    if (parts.length > 0) {\n      this.urlAppExterne = parts[parts.length - 1];\n    }\n    //if (this.UtilisateurService.isUserAuthenticated()) this.router.navigate(['/Accueil']);\n    //else if (!this.UtilisateurService.isUserAuthenticated()) this.UtilisateurService.clearCookies();\n    //this.ApplicationService.Recherche(\"www.wbauth.com\").subscribe((appdata) => {\n    //  if (appdata[0].auth2FA === true){\n    //    this.UtilisateurService.getUtilisateurs().subscribe((userdata) => {\n    //      for (const user of userdata) {\n    //        user.twoFactorEnabled = true;\n    //        this.UtilisateurService.updateUtilisateur(user.id, user).subscribe(() => { });\n    //      }\n    //    })\n    //  }\n    //  else if (appdata[0].auth2FA === false) {\n    //    this.UtilisateurService.getUtilisateurs().subscribe((userdata) => {\n    //      for (const user of userdata) {\n    //        user.twoFactorEnabled = false;\n    //        this.UtilisateurService.updateUtilisateur(user.id, user).subscribe(() => { });\n    //      }\n    //    })\n    //  }\n    //})\n    //this.journal.application = \"www.wbauth.com\"\n    //this.journal.dateConnexion = new Date();\n    //this.loginForm = new FormGroup({\n    //  userName: new FormControl(\"\", [Validators.required]),\n    //  password: new FormControl(\"\", [Validators.required])\n    //})\n    // @ts-ignore\n    window.onGoogleLibraryLoad = () => {\n      // @ts-ignore\n      google.accounts.id.initialize({\n        client_id: this.googleClientId,\n        callback: this.handleCredentialResponse.bind(this),\n        auto_select: false,\n        cancel_on_tap_outside: true\n      });\n      const renderOptions = {\n        type: \"icon\",\n        shape: \"circle\",\n        theme: \"outline\",\n        size: \"large\",\n        width: \"100%\"\n      };\n      const targetElement = document.getElementById(\"cnx-google\");\n      if (targetElement) {\n        targetElement.style.opacity = \"0\";\n        targetElement.style.marginBottom = \"-40px\";\n      }\n      // @ts-ignore\n      google.accounts.id.renderButton(targetElement, renderOptions);\n      // @ts-ignore\n      google.accounts.id.prompt(notification => {});\n    };\n  }\n  redirectInscription() {\n    this.router.navigate(['/InscriptionAppExterne/' + this.urlAppExterne]);\n  }\n  redirectForgotPassword() {\n    this.router.navigate(['/ForgotPassword']);\n  }\n  handleCredentialResponse(response) {\n    this.ApplicationService.Recherche(\"www.wbauth.com\").subscribe(appdata => {\n      if (appdata[0].authGoogle === false) {\n        this.showError = true;\n        this.errorMessage = \"l'authentification avec google est desactivé par l'administrateur !\";\n        this.ReseauSocialErreur();\n      } else {\n        this.UtilisateurService.LoginWithGoogle(response.credential).subscribe({\n          next: res => {\n            localStorage.setItem(\"username\", res.username);\n            const username = localStorage.getItem(\"username\");\n            this.UtilisateurService.Recherche(username).subscribe(userdata => {\n              this.UAService.getListByUtilisateur(userdata[0].id).subscribe(uadata => {\n                this.ApplicationService.Recherche(\"WBAuth\").subscribe(appdata => {\n                  let app = uadata.filter(uaApp => uaApp.idApplication == appdata[0].id);\n                  if (app[0].acces === false || userdata[0].status === false || userdata[0].emailConfirmed === false || res.is2StepVerificationRequired === true) {\n                    this.showError = true;\n                    if (userdata[0].status == false) {\n                      this.errorMessage = \"Votre compte est désactivé !\";\n                      this.ReseauSocialErreur();\n                    } else if (app[0].acces == false) {\n                      this.errorMessage = \"Vous n'avez pas l'autorisation d'accéder à cette application !\";\n                      this.ReseauSocialErreur();\n                    } else if (userdata[0].emailConfirmed === false) {\n                      this.errorMessage = \"Veuillez confirmer votre inscription par email!\";\n                      this.ReseauSocialErreur();\n                    } else if (res.is2StepVerificationRequired) {\n                      this.router.navigate(['/TwoStepVerification'], {\n                        queryParams: {\n                          returnUrl: \"/Chargement\",\n                          provider: res.provider,\n                          email: username\n                        }\n                      });\n                    }\n                  } else {\n                    this.journal.guidUtilisateur = userdata[0].id;\n                    this.JournalisationService.EnregistrementJournalisations(this.journal).subscribe(() => {});\n                    if (uadata[0].idRole == null) {\n                      localStorage.setItem(\"role\", \"ROLE NON EFFECTUÉ\");\n                      localStorage.setItem(\"token\", res.token);\n                      this.UtilisateurService.sendAuthStateChangeNotification(res.isAuthSuccessful);\n                      this.router.navigate(['/Chargement']);\n                    } else {\n                      this.RoleService.getRole(uadata[0].idRole).subscribe(roledata => {\n                        localStorage.setItem(\"role\", roledata.nom);\n                        localStorage.setItem(\"token\", res.token);\n                        this.UtilisateurService.sendAuthStateChangeNotification(res.isAuthSuccessful);\n                        this.router.navigate(['/Chargement']);\n                      });\n                    }\n                  }\n                });\n              });\n            });\n          },\n          error: err => {\n            this.errorMessage = `Échec de l'authentification ,les identifiants de votre compte google sont inexistants dans l'application !`;\n            this.showError = true;\n            this.ReseauSocialErreur();\n          }\n        });\n      }\n    });\n  }\n  cnxFacebook() {\n    this.ApplicationService.Recherche(\"www.wbauth.com\").subscribe(appdata => {\n      if (appdata[0].authFacebook === false) {\n        this.showError = true;\n        this.errorMessage = \"l'authentification avec facebook est desactivé par l'administrateur !\";\n        this.ReseauSocialErreur();\n      } else {\n        FB.login(result => {\n          this.UtilisateurService.LoginWithFacebook(result.authResponse.accessToken).subscribe({\n            next: res => {\n              localStorage.setItem(\"username\", res.username);\n              const username = localStorage.getItem(\"username\");\n              this.UtilisateurService.Recherche(username).subscribe(userdata => {\n                this.UAService.getListByUtilisateur(userdata[0].id).subscribe(uadata => {\n                  this.ApplicationService.Recherche(\"WBAuth\").subscribe(appdata => {\n                    let app = uadata.filter(uaApp => uaApp.idApplication == appdata[0].id);\n                    if (app[0].acces === false || userdata[0].status === false || userdata[0].emailConfirmed === false || res.is2StepVerificationRequired === true) {\n                      this.showError = true;\n                      if (userdata[0].status == false) {\n                        this.errorMessage = \"Votre compte est désactivé !\";\n                        this.ReseauSocialErreur();\n                      } else if (app[0].acces == false) {\n                        this.errorMessage = \"Vous n'avez pas l'autorisation d'accéder à cette application !\";\n                        this.ReseauSocialErreur();\n                      } else if (userdata[0].emailConfirmed === false) {\n                        this.errorMessage = \"Veuillez confirmer votre inscription par email!\";\n                        this.ReseauSocialErreur();\n                      } else if (res.is2StepVerificationRequired) {\n                        this.router.navigate(['/TwoStepVerification'], {\n                          queryParams: {\n                            returnUrl: \"/Chargement\",\n                            provider: res.provider,\n                            email: username\n                          }\n                        });\n                      }\n                    } else {\n                      this.journal.guidUtilisateur = userdata[0].id;\n                      this.JournalisationService.EnregistrementJournalisations(this.journal).subscribe(() => {});\n                      if (uadata[0].idRole == null) {\n                        localStorage.setItem(\"role\", \"ROLE NON EFFECTUÉ\");\n                        localStorage.setItem(\"token\", res.token);\n                        this.UtilisateurService.sendAuthStateChangeNotification(res.isAuthSuccessful);\n                        this.router.navigate(['/Chargement']);\n                      } else {\n                        this.RoleService.getRole(uadata[0].idRole).subscribe(roledata => {\n                          localStorage.setItem(\"role\", roledata.nom);\n                          localStorage.setItem(\"token\", res.token);\n                          this.UtilisateurService.sendAuthStateChangeNotification(res.isAuthSuccessful);\n                          this.router.navigate(['/Chargement']);\n                        });\n                      }\n                    }\n                  });\n                });\n              });\n            },\n            error: err => {\n              this.errorMessage = `Échec de l'authentification ,les identifiants de votre compte facebook sont inexistantes dans l'application !`;\n              this.showError = true;\n              this.ReseauSocialErreur();\n            }\n          }), {\n            scope: 'email'\n          };\n        });\n      }\n    });\n  }\n  cnxLinkedIn() {\n    this.ApplicationService.Recherche(\"www.wbauth.com\").subscribe(appdata => {\n      if (appdata[0].authLinkedIn === false) {\n        this.showError = true;\n        this.errorMessage = \"l'authentification avec LinkedIn est desactivé par l'administrateur !\";\n        this.ReseauSocialErreur();\n      } else {\n        window.location.href = encodeURI(`https://www.linkedin.com/oauth/v2/authorization?client_id=${this.linkedInClientId}&response_type=code&redirect_uri=${this.urlCallback}&scope=profile`);\n      }\n    });\n  }\n};\nAuthentificationAppExterneComponent = __decorate([Component({\n  selector: 'app-AuhtentificationAppExterne',\n  templateUrl: './AuthentificationAppExterne.component.html'\n})], AuthentificationAppExterneComponent);\nexport { AuthentificationAppExterneComponent };","map":{"version":3,"mappings":"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","names":["Component","environment","Journalisation","AuthentificationAppExterneComponent","constructor","UAService","RoleService","router","location","http","UtilisateurService","route","ApplicationService","JournalisationService","googleClientId","linkedInClientId","element","document","getElementById","element2","select","clearCookies","controlName","loginForm","get","invalid","touched","errorName","hasError","loginFormValue","showError","login","userForAuth","userName","password","subscribe","next","res","Recherche","userdata","localStorage","setItem","getListByUtilisateur","id","uadata","appdata","app","filter","uaApp","idApplication","acces","status","is2StepVerificationRequired","emailConfirmed","errorMessage","navigate","queryParams","returnUrl","provider","email","journal","guidUtilisateur","EnregistrementJournalisations","idRole","token","sendAuthStateChangeNotification","isAuthSuccessful","getRole","roledata","nom","error","err","message","ngOnInit","fullPath","path","parts","split","length","urlAppExterne","window","onGoogleLibraryLoad","google","accounts","initialize","client_id","callback","handleCredentialResponse","bind","auto_select","cancel_on_tap_outside","renderOptions","type","shape","theme","size","width","targetElement","style","opacity","marginBottom","renderButton","prompt","notification","redirectInscription","redirectForgotPassword","response","authGoogle","ReseauSocialErreur","LoginWithGoogle","credential","username","getItem","cnxFacebook","authFacebook","FB","result","LoginWithFacebook","authResponse","accessToken","scope","cnxLinkedIn","authLinkedIn","href","encodeURI","urlCallback","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\AccueilApplicationExterne\\Authentification\\AuthentificationAppExterne.component.ts"],"sourcesContent":["import { Component, NgModule, OnInit, NgZone } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UtilisateurService } from '../../Services/utilisateur.service';\r\nimport { RoleService } from '../../Services/role.service';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Login } from './../../auth/login.interface';\r\nimport { Response } from './../../auth/response.interface';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { UtilisateurApplicationService } from '../../Services/utilisateurapplication.service';\r\nimport { ApplicationService } from '../../Services/application.service';\r\nimport { JournalisationService } from '../../Services/journalisation.service';\r\nimport { CredentialResponse, PromptMomentNotification } from 'google-one-tap';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Journalisation } from '../../Models/journalisation.model';\r\ndeclare const FB: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-AuhtentificationAppExterne',\r\n  templateUrl: './AuthentificationAppExterne.component.html',\r\n})\r\n\r\nexport class AuthentificationAppExterneComponent implements OnInit {\r\n  private googleClientId = environment.googleClientId;\r\n  private linkedInClientId = environment.linkedInClientId;\r\n  private urlCallback = \"https://localhost:44429/LinkedIn\";\r\n  private journal: Journalisation = new Journalisation(); \r\n  loginForm!: FormGroup;\r\n  errorMessage: string = '';\r\n  showError: boolean = false;\r\n  urlAppExterne= \"\";\r\n\r\n\r\n  constructor(private UAService: UtilisateurApplicationService, private RoleService: RoleService, private router: Router, private location: Location, private http: HttpClient\r\n    ,private UtilisateurService: UtilisateurService, private route: ActivatedRoute, private ApplicationService: ApplicationService, private JournalisationService: JournalisationService){}\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    const fullPath = this.location.path(); \r\n    const parts = fullPath.split('/'); \r\n    if (parts.length > 0) {  this.urlAppExterne = parts[parts.length - 1];  }\r\n    \r\n    //if (this.UtilisateurService.isUserAuthenticated()) this.router.navigate(['/Accueil']);\r\n    //else if (!this.UtilisateurService.isUserAuthenticated()) this.UtilisateurService.clearCookies();\r\n\r\n    //this.ApplicationService.Recherche(\"www.wbauth.com\").subscribe((appdata) => {\r\n    //  if (appdata[0].auth2FA === true){\r\n    //    this.UtilisateurService.getUtilisateurs().subscribe((userdata) => {\r\n    //      for (const user of userdata) {\r\n    //        user.twoFactorEnabled = true;\r\n    //        this.UtilisateurService.updateUtilisateur(user.id, user).subscribe(() => { });\r\n    //      }\r\n    //    })\r\n    //  }\r\n    //  else if (appdata[0].auth2FA === false) {\r\n    //    this.UtilisateurService.getUtilisateurs().subscribe((userdata) => {\r\n    //      for (const user of userdata) {\r\n    //        user.twoFactorEnabled = false;\r\n    //        this.UtilisateurService.updateUtilisateur(user.id, user).subscribe(() => { });\r\n    //      }\r\n    //    })\r\n    //  }\r\n    //})\r\n\r\n    //this.journal.application = \"www.wbauth.com\"\r\n    //this.journal.dateConnexion = new Date();\r\n\r\n    //this.loginForm = new FormGroup({\r\n    //  userName: new FormControl(\"\", [Validators.required]),\r\n    //  password: new FormControl(\"\", [Validators.required])\r\n    //})\r\n\r\n    // @ts-ignore\r\n    window.onGoogleLibraryLoad = () => {\r\n      // @ts-ignore\r\n      google.accounts.id.initialize({\r\n        client_id: this.googleClientId,\r\n        callback: this.handleCredentialResponse.bind(this),\r\n        auto_select: false,\r\n        cancel_on_tap_outside: true\r\n      });\r\n      const renderOptions = { type: \"icon\", shape: \"circle\", theme: \"outline\", size: \"large\", width: \"100%\" };\r\n      const targetElement = document.getElementById(\"cnx-google\");\r\n      if (targetElement) {\r\n        targetElement.style.opacity = \"0\";\r\n        targetElement.style.marginBottom = \"-40px\";\r\n      }\r\n      // @ts-ignore\r\n      google.accounts.id.renderButton(targetElement, renderOptions);\r\n      // @ts-ignore\r\n      google.accounts.id.prompt((notification: PromptMomentNotification) => { });\r\n    }\r\n  }\r\n\r\n  redirectInscription() {\r\n    this.router.navigate(['/InscriptionAppExterne/' + this.urlAppExterne]);\r\n  }\r\n\r\n  redirectForgotPassword() {\r\n    this.router.navigate(['/ForgotPassword']);\r\n  }\r\n\r\n  handleCredentialResponse(response: CredentialResponse) {\r\n    this.ApplicationService.Recherche(\"www.wbauth.com\").subscribe((appdata) => {\r\n      if (appdata[0].authGoogle === false) {\r\n        this.showError = true;\r\n        this.errorMessage = \"l'authentification avec google est desactivé par l'administrateur !\"; this.ReseauSocialErreur();\r\n      }\r\n      else {\r\n        this.UtilisateurService.LoginWithGoogle(response.credential).subscribe({\r\n          next: (res: Response) => {\r\n            localStorage.setItem(\"username\", res.username);\r\n            const username = localStorage.getItem(\"username\");\r\n            this.UtilisateurService.Recherche(username).subscribe((userdata) => {\r\n              this.UAService.getListByUtilisateur(userdata[0].id).subscribe((uadata) => {\r\n                this.ApplicationService.Recherche(\"WBAuth\").subscribe((appdata) => {\r\n                  let app = uadata.filter((uaApp) => uaApp.idApplication == appdata[0].id);\r\n                  if (app[0].acces === false || userdata[0].status === false || userdata[0].emailConfirmed === false || res.is2StepVerificationRequired === true) {\r\n                    this.showError = true;\r\n                    if (userdata[0].status == false) { this.errorMessage = \"Votre compte est désactivé !\"; this.ReseauSocialErreur(); }\r\n                    else if (app[0].acces == false) { this.errorMessage = \"Vous n'avez pas l'autorisation d'accéder à cette application !\"; this.ReseauSocialErreur(); }\r\n                    else if (userdata[0].emailConfirmed === false) { this.errorMessage = \"Veuillez confirmer votre inscription par email!\"; this.ReseauSocialErreur(); }\r\n                    else if (res.is2StepVerificationRequired) {\r\n                      this.router.navigate(['/TwoStepVerification'],\r\n                        { queryParams: { returnUrl: \"/Chargement\", provider: res.provider, email: username } })\r\n                    }\r\n                  }\r\n                  else {\r\n                    this.journal.guidUtilisateur = userdata[0].id;\r\n                    this.JournalisationService.EnregistrementJournalisations(this.journal).subscribe(() => { });\r\n                    if (uadata[0].idRole == null) {\r\n                      localStorage.setItem(\"role\", \"ROLE NON EFFECTUÉ\");\r\n                      localStorage.setItem(\"token\", res.token);\r\n                      this.UtilisateurService.sendAuthStateChangeNotification(res.isAuthSuccessful);\r\n                      this.router.navigate(['/Chargement']);\r\n                    }\r\n                    else {\r\n                      this.RoleService.getRole(uadata[0].idRole).subscribe((roledata) => {\r\n                        localStorage.setItem(\"role\", roledata.nom);\r\n                        localStorage.setItem(\"token\", res.token);\r\n                        this.UtilisateurService.sendAuthStateChangeNotification(res.isAuthSuccessful);\r\n                        this.router.navigate(['/Chargement']);\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n            });\r\n          },\r\n          error: (err: HttpErrorResponse) => {\r\n            this.errorMessage = `Échec de l'authentification ,les identifiants de votre compte google sont inexistants dans l'application !`;\r\n            this.showError = true;\r\n            this.ReseauSocialErreur();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  cnxFacebook() {\r\n    this.ApplicationService.Recherche(\"www.wbauth.com\").subscribe((appdata) => {\r\n      if (appdata[0].authFacebook === false) {\r\n        this.showError = true;\r\n        this.errorMessage = \"l'authentification avec facebook est desactivé par l'administrateur !\";\r\n        this.ReseauSocialErreur();\r\n      }\r\n      else {\r\n        FB.login((result: any) => {\r\n          this.UtilisateurService.LoginWithFacebook(result.authResponse.accessToken).subscribe({\r\n            next: (res: Response) => {\r\n              localStorage.setItem(\"username\", res.username);\r\n              const username = localStorage.getItem(\"username\");\r\n              this.UtilisateurService.Recherche(username).subscribe((userdata) => {\r\n                this.UAService.getListByUtilisateur(userdata[0].id).subscribe((uadata) => {\r\n                  this.ApplicationService.Recherche(\"WBAuth\").subscribe((appdata) => {\r\n                    let app = uadata.filter((uaApp) => uaApp.idApplication == appdata[0].id);\r\n                    if (app[0].acces === false || userdata[0].status === false || userdata[0].emailConfirmed === false || res.is2StepVerificationRequired === true) {\r\n                      this.showError = true;\r\n                      if (userdata[0].status == false) { this.errorMessage = \"Votre compte est désactivé !\"; this.ReseauSocialErreur(); }\r\n                      else if (app[0].acces == false) { this.errorMessage = \"Vous n'avez pas l'autorisation d'accéder à cette application !\"; this.ReseauSocialErreur(); }\r\n                      else if (userdata[0].emailConfirmed === false) { this.errorMessage = \"Veuillez confirmer votre inscription par email!\"; this.ReseauSocialErreur(); }\r\n                      else if (res.is2StepVerificationRequired) {\r\n                        this.router.navigate(['/TwoStepVerification'],\r\n                        { queryParams: { returnUrl: \"/Chargement\", provider: res.provider, email: username } })\r\n                      }\r\n                    }\r\n                    else {\r\n                      this.journal.guidUtilisateur = userdata[0].id;\r\n                      this.JournalisationService.EnregistrementJournalisations(this.journal).subscribe(() => { });\r\n                      if (uadata[0].idRole == null) {\r\n                        localStorage.setItem(\"role\", \"ROLE NON EFFECTUÉ\");\r\n                        localStorage.setItem(\"token\", res.token);\r\n                        this.UtilisateurService.sendAuthStateChangeNotification(res.isAuthSuccessful);\r\n                        this.router.navigate(['/Chargement']);\r\n                      }\r\n                      else {\r\n                        this.RoleService.getRole(uadata[0].idRole).subscribe((roledata) => {\r\n                          localStorage.setItem(\"role\", roledata.nom);\r\n                          localStorage.setItem(\"token\", res.token);\r\n                          this.UtilisateurService.sendAuthStateChangeNotification(res.isAuthSuccessful);\r\n                          this.router.navigate(['/Chargement']);\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n              });\r\n            },\r\n            error: (err: HttpErrorResponse) => {\r\n              this.errorMessage = `Échec de l'authentification ,les identifiants de votre compte facebook sont inexistantes dans l'application !`;\r\n              this.showError = true;\r\n              this.ReseauSocialErreur();\r\n            }\r\n          })\r\n          , { scope: 'email' }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  cnxLinkedIn() {\r\n    this.ApplicationService.Recherche(\"www.wbauth.com\").subscribe((appdata) => {\r\n      if (appdata[0].authLinkedIn === false) {\r\n        this.showError = true;\r\n        this.errorMessage = \"l'authentification avec LinkedIn est desactivé par l'administrateur !\"; this.ReseauSocialErreur();\r\n      }\r\n      else {\r\n        window.location.href = encodeURI(`https://www.linkedin.com/oauth/v2/authorization?client_id=${this.linkedInClientId}&response_type=code&redirect_uri=${this.urlCallback}&scope=profile`);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  ReseauSocialErreur = () => {\r\n    const element = document.getElementById(\"userName\") as HTMLInputElement;\r\n    const element2 = document.getElementById('mdp') as HTMLInputElement;\r\n    if (element && element2) { element.select(); element2.select(); element.select(); }\r\n    this.UtilisateurService.clearCookies();\r\n  }\r\n\r\n  validateControl = (controlName: string) => {\r\n    return this.loginForm.get(controlName)!.invalid && this.loginForm.get(controlName)!.touched\r\n  }\r\n\r\n\r\n  hasError = (controlName: string, errorName: string) => {\r\n    return this.loginForm.get(controlName)!.hasError(errorName)\r\n  }\r\n\r\n\r\n  loginUser = (loginFormValue : any) => {\r\n    this.showError = false;\r\n    const login = { ...loginFormValue };\r\n    const userForAuth: Login = {\r\n      userName: login.userName,\r\n      password: login.password\r\n    }\r\n    this.UtilisateurService.login(userForAuth).subscribe({\r\n      next: (res: Response) => {\r\n          this.UtilisateurService.Recherche(login.userName).subscribe((userdata) => {\r\n            localStorage.setItem(\"username\", userdata[0].userName);          \r\n            this.UAService.getListByUtilisateur(userdata[0].id).subscribe((uadata) => {\r\n              this.ApplicationService.Recherche(\"WBAuth\").subscribe((appdata) => {\r\n                let app = uadata.filter((uaApp) => uaApp.idApplication == appdata[0].id);\r\n                if (app[0].acces === false || userdata[0].status === false || res.is2StepVerificationRequired === true || userdata[0].emailConfirmed === false) {\r\n                  this.showError = true;\r\n                  if (userdata[0].status === false) { this.errorMessage = \"Votre compte est désactivé !\"; }\r\n                  else if (app[0].acces === false) { this.errorMessage = \"Vous n'avez pas l'autorisation d'accéder à cette application !\"; }\r\n                  else if (userdata[0].emailConfirmed === false) { this.errorMessage = \"Veuillez confirmer votre inscription par email!\"; }\r\n                  else if (res.is2StepVerificationRequired) {\r\n                    this.router.navigate(['/TwoStepVerification'],\r\n                      { queryParams: { returnUrl: \"/Chargement\", provider: res.provider, email: userForAuth.userName } })\r\n                  }\r\n                }\r\n                else {\r\n                  this.journal.guidUtilisateur = userdata[0].id;\r\n                  this.JournalisationService.EnregistrementJournalisations(this.journal).subscribe(() => {});\r\n                  if (uadata[0].idRole == null) {\r\n                    localStorage.setItem(\"role\", \"ROLE NON EFFECTUÉ\");\r\n                    localStorage.setItem(\"token\", res.token);\r\n                    this.UtilisateurService.sendAuthStateChangeNotification(res.isAuthSuccessful);\r\n                    this.router.navigate(['/Chargement']);\r\n                  }\r\n                  else {\r\n                    this.RoleService.getRole(uadata[0].idRole).subscribe((roledata) => {\r\n                      localStorage.setItem(\"role\", roledata.nom);\r\n                      localStorage.setItem(\"token\", res.token);\r\n                      this.UtilisateurService.sendAuthStateChangeNotification(res.isAuthSuccessful);\r\n                      this.router.navigate(['/Chargement']);\r\n                    });\r\n                  }\r\n                }\r\n              });\r\n            });\r\n          });\r\n        },\r\n        error: (err: HttpErrorResponse) => {\r\n          this.errorMessage = err.message;\r\n          this.showError = true;\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}