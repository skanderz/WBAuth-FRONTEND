{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ActionService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl + 'Action';\n  }\n  getActions(IdJournalisation) {\n    return this.http.get(`${this.apiUrl}/List/${IdJournalisation}`);\n  }\n  getAction(id) {\n    return this.http.get(`${this.apiUrl}/Recherche/${id}`);\n  }\n  Recherche(rech) {\n    return this.http.get(`${this.apiUrl}/Recherche/${rech}`);\n  }\n  EnregistrementActions(Action) {\n    return this.http.post(`${this.apiUrl}/EnregistrementActions`, Action);\n  }\n  Clear(IdJournalisation) {\n    return this.http.delete(`${this.apiUrl}/clear?IdJournalisation=${IdJournalisation}`);\n  }\n  static #_ = this.ɵfac = function ActionService_Factory(t) {\n    return new (t || ActionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ActionService,\n    factory: ActionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAGH,WAAW,CAACI,MAAM,GAAG,QAAQ;EAER;EAEtCC,UAAU,CAACC,gBAAwB;IACjC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAQ,GAAG,IAAI,CAACH,MAAM,SAASE,gBAAgB,EAAE,CAAC;EACxE;EAEAE,SAAS,CAACC,EAAU;IAClB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACH,MAAM,cAAcK,EAAE,EAAE,CAAC;EAC7D;EAEAC,SAAS,CAACC,IAAY;IACpB,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACH,MAAM,cAAcO,IAAI,EAAE,CAAC;EAC/D;EAEAC,qBAAqB,CAACC,MAAW;IAC/B,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAM,GAAG,IAAI,CAACV,MAAM,wBAAwB,EAAES,MAAM,CAAC;EAC5E;EAEAE,KAAK,CAACT,gBAAwB;IAC5B,OAAO,IAAI,CAACH,IAAI,CAACa,MAAM,CAAM,GAAG,IAAI,CAACZ,MAAM,2BAA2BE,gBAAgB,EAAE,CAAC;EAC3F;EAAC;qBAvBUL,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAgB,SAAbhB,aAAa;IAAAiB,YAFZ;EAAM","names":["environment","ActionService","constructor","http","apiUrl","getActions","IdJournalisation","get","getAction","id","Recherche","rech","EnregistrementActions","Action","post","Clear","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Services\\action.service.ts"],"sourcesContent":["import { environment } from 'src/environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ActionService {\r\n  private apiUrl = environment.apiUrl + 'Action';\r\n\r\n  constructor(private http: HttpClient){}\r\n\r\n  getActions(IdJournalisation: number): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiUrl}/List/${IdJournalisation}`);\r\n  }\r\n\r\n  getAction(id: number): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/Recherche/${id}`);\r\n  }\r\n\r\n  Recherche(rech: string): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/Recherche/${rech}`);\r\n  }\r\n\r\n  EnregistrementActions(Action: any): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/EnregistrementActions`, Action);\r\n  }\r\n\r\n  Clear(IdJournalisation: number): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiUrl}/clear?IdJournalisation=${IdJournalisation}`);\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}