{"ast":null,"code":"import { Fonction } from '../../../Models/fonction.model';\nimport { Application } from '../../../Models/application.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../Services/permission.service\";\nimport * as i2 from \"../../../Services/fonction.service\";\nimport * as i3 from \"../../../Services/application.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function () {\n  return [\"/Permission\"];\n};\nexport class ModifierPermissionComponent {\n  constructor(PermissionService, FonctionService, ApplicationService, router, route) {\n    this.PermissionService = PermissionService;\n    this.FonctionService = FonctionService;\n    this.ApplicationService = ApplicationService;\n    this.router = router;\n    this.route = route;\n    this.fonction = new Fonction();\n    this.application = new Application();\n  }\n  ngOnInit() {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam) {\n      const id = +idParam;\n      if (!isNaN(id)) {\n        this.PermissionService.getMultiFonction(id).subscribe(data => {\n          if (data) {\n            this.permission = data;\n            this.FonctionService.getFonction(this.permission.idFonction).subscribe(data => {\n              if (data) {\n                this.fonction = data;\n              }\n              this.ApplicationService.getApplication(this.fonction.idApplication).subscribe(data => {\n                if (data) {\n                  this.application = data;\n                }\n              });\n            });\n          } else {\n            this.PermissionService.getFonctionUnique(id).subscribe(data => {\n              if (data) {\n                this.permission = data;\n                this.FonctionService.getFonction(this.permission.idFonction).subscribe(data => {\n                  if (data) {\n                    this.fonction = data;\n                  }\n                  this.ApplicationService.getApplication(this.fonction.idApplication).subscribe(data => {\n                    if (data) {\n                      this.application = data;\n                    }\n                  });\n                });\n              }\n            });\n          }\n        });\n      } else {\n        console.error('La valeur du paramètre \"id\" n\\'est pas un nombre valide.');\n      }\n    } else {\n      console.error('Le paramètre \"id\" est manquant dans l\\'URL.');\n    }\n  }\n  onSubmit() {\n    console.log(this.permission);\n    this.PermissionService.updatePermission(this.permission).subscribe(response => {\n      if (response) {\n        this.router.navigate(['/Permission']);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ModifierPermissionComponent_Factory(t) {\n    return new (t || ModifierPermissionComponent)(i0.ɵɵdirectiveInject(i1.PermissionService), i0.ɵɵdirectiveInject(i2.FonctionService), i0.ɵɵdirectiveInject(i3.ApplicationService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierPermissionComponent,\n    selectors: [[\"app-ModifierPermission\"]],\n    decls: 29,\n    vars: 5,\n    consts: [[1, \"background-titre\"], [1, \"ajouter-content\"], [1, \"ajouter-entete\"], [1, \"modifier-return\", 3, \"routerLink\"], [1, \"fa-solid\", \"fa-angles-left\"], [1, \"modifier-titre\"], [1, \"yellow-border\", 3, \"ngSubmit\"], [1, \"form-content\"], [1, \"form-content-rows\"], [\"for\", \"nomApp\"], [\"type\", \"text\", \"id\", \"nomApp\", \"name\", \"nomApp\", \"readonly\", \"\", 1, \"yellow-border\", 2, \"cursor\", \"not-allowed\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"type\"], [\"type\", \"text\", \"id\", \"nomFonc\", \"name\", \"nomFonc\", \"readonly\", \"\", 1, \"yellow-border\", 2, \"cursor\", \"not-allowed\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"nom\"], [\"type\", \"text\", \"id\", \"nom\", \"name\", \"nom\", \"required\", \"\", 1, \"yellow-border\", 3, \"ngModel\", \"ngModelChange\"], [1, \"no-select\"], [\"type\", \"submit\", 1, \"valider\"]],\n    template: function ModifierPermissionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \" GESTION DES PERMISSIONS \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3);\n        i0.ɵɵelement(6, \"i\", 4);\n        i0.ɵɵtext(7, \" RETURN \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵtext(9, \" MODIFICATION DE LA PERMISSION \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function ModifierPermissionComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"div\", 8)(13, \"label\", 9);\n        i0.ɵɵtext(14, \"APPLICATION :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierPermissionComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.application.nom = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 8)(17, \"label\", 11);\n        i0.ɵɵtext(18, \"FONCTION :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierPermissionComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.fonction.type = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 8)(21, \"label\", 13);\n        i0.ɵɵtext(22, \"NOM :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifierPermissionComponent_Template_input_ngModelChange_23_listener($event) {\n          return ctx.permission.nom = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 8);\n        i0.ɵɵelement(25, \"label\", 15);\n        i0.ɵɵelementStart(26, \"div\")(27, \"button\", 16);\n        i0.ɵɵtext(28, \"VALIDER\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0));\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.application.nom);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.fonction.type);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.permission.nom);\n      }\n    },\n    dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm, i4.RouterLink],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["Fonction","Application","ModifierPermissionComponent","constructor","PermissionService","FonctionService","ApplicationService","router","route","ngOnInit","idParam","snapshot","paramMap","get","id","isNaN","getMultiFonction","subscribe","data","permission","getFonction","idFonction","fonction","getApplication","idApplication","application","getFonctionUnique","console","error","onSubmit","log","updatePermission","response","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Permission\\Modifier\\ModifierPermission.component.ts","C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Permission\\Modifier\\ModifierPermission.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PermissionService } from '../../../Services/permission.service';\r\nimport { FonctionService } from '../../../Services/fonction.service';\r\nimport { ApplicationService } from '../../../Services/application.service';\r\nimport { Permission } from '../../../Models/permission.model';\r\nimport { Fonction } from '../../../Models/fonction.model';\r\nimport { Application } from '../../../Models/application.model';\r\n\r\n@Component({\r\n  selector: 'app-ModifierPermission',\r\n  templateUrl: './ModifierPermission.component.html'\r\n})\r\nexport class ModifierPermissionComponent implements OnInit {\r\n  public permission: any;\r\n  public fonction: Fonction = new Fonction();\r\n  public application: Application = new Application();\r\n\r\n  constructor(private PermissionService: PermissionService, private FonctionService: FonctionService, private ApplicationService: ApplicationService, private router: Router, private route: ActivatedRoute){}\r\n\r\n  ngOnInit(): void {\r\n    const idParam = this.route.snapshot.paramMap.get('id');\r\n    if (idParam) {\r\n      const id = +idParam;\r\n      if (!isNaN(id)) {\r\n        this.PermissionService.getMultiFonction(id).subscribe((data) => {\r\n          if (data) {\r\n            this.permission = data; \r\n            this.FonctionService.getFonction(this.permission.idFonction).subscribe((data) => {\r\n              if (data) { this.fonction = data; }\r\n              this.ApplicationService.getApplication(this.fonction.idApplication).subscribe((data) => { if (data) { this.application = data; } });\r\n            });\r\n          }\r\n          else {\r\n            this.PermissionService.getFonctionUnique(id).subscribe((data) => {\r\n              if (data) {\r\n                this.permission = data; \r\n                this.FonctionService.getFonction(this.permission.idFonction).subscribe((data) => {\r\n                  if (data) { this.fonction = data; }\r\n                  this.ApplicationService.getApplication(this.fonction.idApplication).subscribe((data) => { if (data) { this.application = data; } });\r\n                });\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n      else { console.error('La valeur du paramètre \"id\" n\\'est pas un nombre valide.'); }\r\n    }\r\n    else { console.error('Le paramètre \"id\" est manquant dans l\\'URL.'); }\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    console.log(this.permission);\r\n    this.PermissionService.updatePermission(this.permission).subscribe((response) => {\r\n      if (response) {  this.router.navigate(['/Permission']); }\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div class=\"background-titre\"> <h1> GESTION DES PERMISSIONS </h1> </div>\r\n\r\n\r\n<div class=\"ajouter-content\">\r\n\r\n  <div class=\"ajouter-entete\">\r\n    <div class=\"modifier-return\" [routerLink]=\"['/Permission']\"> <i class=\"fa-solid fa-angles-left\"></i> RETURN </div>\r\n    <div class=\"modifier-titre\"> MODIFICATION DE LA PERMISSION </div>\r\n  </div>\r\n\r\n\r\n  <form (ngSubmit)=\"onSubmit()\" class=\"yellow-border\">\r\n    <div class=\"form-content\">\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"nomApp\">APPLICATION :</label>\r\n        <input class=\"yellow-border\" type=\"text\" id=\"nomApp\" name=\"nomApp\" [(ngModel)]=\"application.nom\" style=\"cursor:not-allowed\" readonly>\r\n      </div>\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"type\">FONCTION :</label>\r\n        <input class=\"yellow-border\" type=\"text\" id=\"nomFonc\" name=\"nomFonc\" [(ngModel)]=\"fonction.type\" style=\"cursor:not-allowed\" readonly>\r\n      </div>\r\n\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label for=\"nom\">NOM :</label>\r\n        <input class=\"yellow-border\" type=\"text\" id=\"nom\" name=\"nom\" [(ngModel)]=\"permission.nom\" required>\r\n      </div>\r\n\r\n\r\n      <div class=\"form-content-rows\">\r\n        <label class=\"no-select\"></label> <div> <button type=\"submit\" class=\"valider\">VALIDER</button> </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  </form>\r\n\r\n\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}