{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Application } from '../../../Models/application.model';\nimport { UtilisateurApplication } from '../../../Models/utilisateurapplication.model';\nlet AccesComponent = class AccesComponent {\n  constructor(UAService, ApplicationService, RoleService, UtilisateurService, router, route, PermissionService) {\n    this.UAService = UAService;\n    this.ApplicationService = ApplicationService;\n    this.RoleService = RoleService;\n    this.UtilisateurService = UtilisateurService;\n    this.router = router;\n    this.route = route;\n    this.PermissionService = PermissionService;\n    this.Utilisateurs = [];\n    this.IdApp = 0;\n    this.applications = [];\n    this.UtilisateurApp = new UtilisateurApplication();\n    this.UtilisateurApps = [];\n    this.application = new Application();\n    this.accesTable = [];\n    this.rechTable = [];\n    this.AltTable = [];\n    this.userAppList = [];\n    this.utilisateurs = [];\n    this.roles = [];\n    this.rech = \"\";\n  }\n  ngOnInit() {\n    this.setPermissionsByRole();\n    this.ApplicationService.getApplications().subscribe(data => {\n      this.applications = data;\n      if (this.applications && this.applications.length > 0) {\n        this.IdApp = this.applications[0].id;\n        this.loadUtilisateursByIdApp(this.IdApp);\n        this.loadUtilisateurs();\n      }\n    }, error => {\n      console.error('Erreur lors de la récupération des applications : ', error);\n    });\n  }\n  setPermissionsByRole() {\n    this.ApplicationService.Recherche(\"www.wbauth.com\").subscribe(dataApp => {\n      if (dataApp[0].url == \"www.wbauth.com\") {\n        let role = localStorage.getItem(\"role\");\n        this.RoleService.Recherche(role, dataApp[0].id).subscribe(dataRole => {\n          if (dataRole && dataRole.length == 1) {\n            this.PermissionService.getListeFonctionUnique(dataApp[0].id, dataRole[0].id).subscribe(dataPermission => {\n              for (const perm of dataPermission) {\n                if (perm.nom == \"Gestion des roles\") {\n                  if (perm.status[0] === \"0\") {\n                    this.read = false;\n                  }\n                  if (perm.status[1] === \"1\") {\n                    this.add = true;\n                  }\n                  if (perm.status[2] === \"1\") {\n                    this.modify = true;\n                  }\n                  if (perm.status[3] === \"1\") {\n                    this.delete = true;\n                  }\n                }\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n  loadUtilisateurs() {\n    this.UtilisateurService.getUtilisateurs().subscribe(data => {\n      this.Utilisateurs = data; // userlist\n      for (const user of this.Utilisateurs) {\n        // chaque user\n        this.UAService.getListByUtilisateur(user.id).subscribe(UAdata => {\n          this.ApplicationService.getApplications().subscribe(AppData => {\n            this.applications = AppData; // App list \n            for (const app of this.applications) {\n              if (app.url === \"www.wbauth.com\") {\n                this.UtilisateurApps = UAdata; // userApp list\n                const result = this.UtilisateurApps.filter(ua => ua.guidUtilisateur === user.id && ua.idApplication === app.id);\n                if (result.length === 0) {\n                  this.UtilisateurApp.idRole = null;\n                  this.UtilisateurApp.idApplication = app.id;\n                  this.UtilisateurApp.guidUtilisateur = user.id;\n                  this.UAService.AddUtilisateurApplication(this.UtilisateurApp).subscribe(response => {\n                    if (response) {\n                      console.log(this.UtilisateurApp);\n                    }\n                  });\n                }\n              }\n            }\n          });\n        });\n      }\n    }, error => {\n      console.error('Erreur lors de la récupération des Utilisateur : ', error);\n    });\n  }\n  loadUtilisateursByIdApp(id) {\n    this.accesTable = [];\n    this.UAService.getListByApplication(id).subscribe(UAdata => {\n      this.userAppList = UAdata;\n      for (const ua of this.userAppList) {\n        this.UtilisateurService.getUtilisateur(ua.guidUtilisateur).subscribe(UserData => {\n          if (ua.idRole == null) {\n            this.accesTable.push({\n              guid: UserData.id,\n              userName: UserData.userName,\n              acces: ua.acces,\n              role: \"non effectuée\"\n            });\n          } else {\n            this.RoleService.getRole(ua.idRole).subscribe(RoleData => {\n              this.accesTable.push({\n                guid: UserData.id,\n                userName: UserData.userName,\n                acces: ua.acces,\n                role: RoleData.nom\n              });\n            });\n          }\n          ;\n        });\n      }\n    });\n  }\n  Recherche() {\n    if (this.rech == \"\") {\n      this.loadUtilisateursByIdApp(this.IdApp);\n    } else {\n      if (this.AltTable.length == 0) this.AltTable = this.accesTable;\n      this.rechTable = this.AltTable.filter(ua => {\n        return ua.userName.toLowerCase().includes(this.rech.toLowerCase()) || ua.guid.toLowerCase().includes(this.rech.toLowerCase());\n      });\n      this.accesTable = [];\n      this.accesTable = this.accesTable.concat(this.rechTable);\n      this.rechTable = [];\n    }\n  }\n  onModifierClick(id) {\n    this.router.navigate(['Utilisateur/ModifierAcces', id]);\n  }\n};\nAccesComponent = __decorate([Component({\n  selector: 'app-Acces',\n  templateUrl: './Acces.component.html'\n})], AccesComponent);\nexport { AccesComponent };","map":{"version":3,"mappings":"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","names":["Component","Application","UtilisateurApplication","AccesComponent","constructor","UAService","ApplicationService","RoleService","UtilisateurService","router","route","PermissionService","ngOnInit","setPermissionsByRole","getApplications","subscribe","data","applications","length","IdApp","id","loadUtilisateursByIdApp","loadUtilisateurs","error","console","Recherche","dataApp","url","role","localStorage","getItem","dataRole","getListeFonctionUnique","dataPermission","perm","nom","status","read","add","modify","delete","getUtilisateurs","Utilisateurs","user","getListByUtilisateur","UAdata","AppData","app","UtilisateurApps","result","filter","ua","guidUtilisateur","idApplication","UtilisateurApp","idRole","AddUtilisateurApplication","response","log","accesTable","getListByApplication","userAppList","getUtilisateur","UserData","push","guid","userName","acces","getRole","RoleData","rech","AltTable","rechTable","toLowerCase","includes","concat","onModifierClick","navigate","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Modules\\Utilisateur\\Acces\\Acces.component.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Utilisateur } from '../../../Models/utilisateur.model';\r\nimport { Role } from '../../../Models/role.model';\r\nimport { Application } from '../../../Models/application.model';\r\nimport { filter, Observable } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UtilisateurService } from '../../../Services/utilisateur.service';\r\nimport { RoleService } from '../../../Services/role.service';\r\nimport { ApplicationService } from '../../../Services/application.service';\r\nimport { UtilisateurApplicationService } from '../../../Services/utilisateurapplication.service';\r\nimport { UtilisateurApplication } from '../../../Models/utilisateurapplication.model';\r\nimport { PermissionService } from '../../Services/permission.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-Acces',\r\n  templateUrl: './Acces.component.html'\r\n})\r\nexport class AccesComponent implements OnInit {\r\n  Utilisateurs: any[] = [];\r\n  IdApp: number = 0;\r\n  applications: any[] = [];\r\n  UtilisateurApp: UtilisateurApplication = new UtilisateurApplication();\r\n  UtilisateurApps: UtilisateurApplication[] = [];\r\n  application: Application = new Application();\r\n  accesTable: { guid: string, userName: string, acces: boolean, role: string }[] = [];\r\n  rechTable: { guid: string, userName: string, acces: boolean, role: string }[] = [];\r\n  AltTable: { guid: string, userName: string, acces: boolean, role: string }[] = [];\r\n  userAppList: any[] = [];\r\n  utilisateurs: any[] = [];\r\n  roles: any[] = [];\r\n  rech: string = \"\";\r\n\r\n\r\n  constructor(private UAService: UtilisateurApplicationService, private ApplicationService: ApplicationService, private RoleService: RoleService,\r\n    private UtilisateurService: UtilisateurService, private router: Router, private route: ActivatedRoute, private PermissionService: PermissionService){}\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.setPermissionsByRole();\r\n    this.ApplicationService.getApplications().subscribe((data) => {\r\n      this.applications = data\r\n      if (this.applications && this.applications.length > 0) {\r\n        this.IdApp = this.applications[0].id;\r\n        this.loadUtilisateursByIdApp(this.IdApp);\r\n        this.loadUtilisateurs();\r\n      }\r\n    },\r\n      (error) => { console.error('Erreur lors de la récupération des applications : ', error); });\r\n  }\r\n\r\n\r\n  setPermissionsByRole() {\r\n    this.ApplicationService.Recherche(\"www.wbauth.com\").subscribe((dataApp) => {\r\n      if (dataApp[0].url == \"www.wbauth.com\") {\r\n        let role = localStorage.getItem(\"role\");\r\n        this.RoleService.Recherche(role, dataApp[0].id).subscribe((dataRole) => {\r\n          if (dataRole && dataRole.length == 1) {\r\n            this.PermissionService.getListeFonctionUnique(dataApp[0].id, dataRole[0].id).subscribe((dataPermission) => {\r\n              for (const perm of dataPermission) {\r\n                if (perm.nom == \"Gestion des roles\") {\r\n                  if (perm.status[0] === \"0\") { this.read = false; }\r\n                  if (perm.status[1] === \"1\") { this.add = true; }\r\n                  if (perm.status[2] === \"1\") { this.modify = true; }\r\n                  if (perm.status[3] === \"1\") { this.delete = true; }\r\n                }\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  loadUtilisateurs() {\r\n    this.UtilisateurService.getUtilisateurs().subscribe((data) => {\r\n      this.Utilisateurs = data; // userlist\r\n      for (const user of this.Utilisateurs) { // chaque user\r\n        this.UAService.getListByUtilisateur(user.id).subscribe((UAdata) => {\r\n          this.ApplicationService.getApplications().subscribe((AppData) => {\r\n            this.applications = AppData; // App list \r\n            for (const app of this.applications) {\r\n              if (app.url === \"www.wbauth.com\") {\r\n                this.UtilisateurApps = UAdata;  // userApp list\r\n                const result = this.UtilisateurApps.filter((ua) => (ua.guidUtilisateur === user.id) && (ua.idApplication === app.id));\r\n                if (result.length === 0) {\r\n                  this.UtilisateurApp.idRole = null;\r\n                  this.UtilisateurApp.idApplication = app.id;\r\n                  this.UtilisateurApp.guidUtilisateur = user.id;\r\n                  this.UAService.AddUtilisateurApplication(this.UtilisateurApp).subscribe((response) => {\r\n                    if (response) { console.log(this.UtilisateurApp); }\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }, (error) => { console.error('Erreur lors de la récupération des Utilisateur : ', error); });\r\n  }\r\n\r\n\r\n  loadUtilisateursByIdApp(id: number) {\r\n    this.accesTable = [];\r\n    this.UAService.getListByApplication(id).subscribe((UAdata) => {\r\n      this.userAppList = UAdata;\r\n      for (const ua of this.userAppList) {\r\n        this.UtilisateurService.getUtilisateur(ua.guidUtilisateur).subscribe((UserData) => {\r\n          if (ua.idRole == null) {\r\n            this.accesTable.push({ guid: UserData.id, userName: UserData.userName, acces: ua.acces, role: \"non effectuée\" });\r\n          }\r\n          else {\r\n            this.RoleService.getRole(ua.idRole).subscribe((RoleData) => {\r\n              this.accesTable.push({ guid: UserData.id, userName: UserData.userName, acces: ua.acces, role: RoleData.nom  });\r\n            })\r\n          };\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  Recherche(){\r\n    if (this.rech == \"\") {  this.loadUtilisateursByIdApp(this.IdApp);  }\r\n    else {\r\n      if (this.AltTable.length == 0) this.AltTable = this.accesTable;\r\n      this.rechTable = this.AltTable.filter(ua => {\r\n        return ua.userName.toLowerCase().includes(this.rech.toLowerCase()) || ua.guid.toLowerCase().includes(this.rech.toLowerCase());\r\n      });\r\n      this.accesTable = [];\r\n      this.accesTable = this.accesTable.concat(this.rechTable);\r\n      this.rechTable = [];\r\n    }     \r\n  }\r\n\r\n\r\n  onModifierClick(id: string) { this.router.navigate(['Utilisateur/ModifierAcces', id]); }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}