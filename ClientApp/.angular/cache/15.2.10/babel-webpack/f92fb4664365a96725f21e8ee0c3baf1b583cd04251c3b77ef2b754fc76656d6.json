{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class PasswordConfirmationValidatorService {\n  constructor() {\n    this.validateConfirmPassword = passwordControl => {\n      return confirmationControl => {\n        const confirmValue = confirmationControl.value;\n        const passwordValue = passwordControl.value;\n        //if (confirmValue === '') {  return; }\n        if (confirmValue !== passwordValue) {\n          return {\n            mustMatch: true\n          };\n        }\n        return null;\n      };\n    };\n  }\n  static #_ = this.ɵfac = function PasswordConfirmationValidatorService_Factory(t) {\n    return new (t || PasswordConfirmationValidatorService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PasswordConfirmationValidatorService,\n    factory: PasswordConfirmationValidatorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,oCAAoC;EAE/CC;IAEO,4BAAuB,GAAIC,eAAgC,IAAiB;MACjF,OAAQC,mBAAoC,IAAwC;QAClF,MAAMC,YAAY,GAAGD,mBAAmB,CAACE,KAAK;QAC9C,MAAMC,aAAa,GAAGJ,eAAe,CAACG,KAAK;QAC3C;QACA,IAAID,YAAY,KAAKE,aAAa,EAAE;UAAI,OAAQ;YAAEC,SAAS,EAAE;UAAI,CAAE;;QACnE,OAAO,IAAI;MACb,CAAC;IACH,CAAC;EAVe;EAAC;qBAFNP,oCAAoC;EAAA;EAAA;WAApCA,oCAAoC;IAAAQ,SAApCR,oCAAoC;IAAAS,YAFnC;EAAM","names":["PasswordConfirmationValidatorService","constructor","passwordControl","confirmationControl","confirmValue","value","passwordValue","mustMatch","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\auth\\password-confirmation-validator.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordConfirmationValidatorService {\n  \n  constructor() { }\n\n  public validateConfirmPassword = (passwordControl: AbstractControl): ValidatorFn => {\n    return (confirmationControl: AbstractControl) : { [key: string]: boolean } | null => {\n      const confirmValue = confirmationControl.value;\n      const passwordValue = passwordControl.value;\n      //if (confirmValue === '') {  return; }\n      if (confirmValue !== passwordValue) {   return  { mustMatch: true }  }\n      return null;\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}