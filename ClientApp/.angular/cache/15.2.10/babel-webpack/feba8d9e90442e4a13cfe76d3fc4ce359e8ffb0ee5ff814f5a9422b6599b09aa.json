{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class JournalisationService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl + 'Journalisation';\n  }\n  getJournalisations(IdUtilisateur) {\n    return this.http.get(`${this.apiUrl}/List/${IdUtilisateur}`);\n  }\n  getJournalisation(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  Recherche(rech) {\n    return this.http.get(`${this.apiUrl}/${rech}`);\n  }\n  EnregistrementJournalisations(id, Journalisation) {\n    return this.http.put(`${this.apiUrl}/EnregistrementJournalisations`, Journalisation);\n  }\n  deleteJournalisation(IdUtilisateur) {\n    return this.http.delete(`${this.apiUrl}/clear?IdUtilisateur=${IdUtilisateur}`);\n  }\n  static #_ = this.ɵfac = function JournalisationService_Factory(t) {\n    return new (t || JournalisationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JournalisationService,\n    factory: JournalisationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAGH,WAAW,CAACI,MAAM,GAAG,gBAAgB;EAEhB;EAEtCC,kBAAkB,CAAEC,aAAqB;IACvC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAQ,GAAG,IAAI,CAACH,MAAM,SAASE,aAAa,EAAE,CAAC;EACrE;EAEAE,iBAAiB,CAACC,EAAU;IAC1B,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACH,MAAM,IAAIK,EAAE,EAAE,CAAC;EACnD;EAEAC,SAAS,CAACC,IAAW;IACnB,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACH,MAAM,IAAIO,IAAI,EAAE,CAAC;EACrD;EAEAC,6BAA6B,CAACH,EAAU,EAAEI,cAAmB;IAC3D,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAM,GAAG,IAAI,CAACV,MAAM,gCAAgC,EAAES,cAAc,CAAC;EAC3F;EAEAE,oBAAoB,CAACT,aAAqB;IACxC,OAAO,IAAI,CAACH,IAAI,CAACa,MAAM,CAAM,GAAG,IAAI,CAACZ,MAAM,wBAAwBE,aAAa,EAAE,CAAC;EACrF;EAAC;qBAvBUL,qBAAqB;EAAA;EAAA;WAArBA,qBAAqB;IAAAgB,SAArBhB,qBAAqB;IAAAiB,YAFpB;EAAM","names":["environment","JournalisationService","constructor","http","apiUrl","getJournalisations","IdUtilisateur","get","getJournalisation","id","Recherche","rech","EnregistrementJournalisations","Journalisation","put","deleteJournalisation","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Skander\\source\\repos\\WBAuth.Frontend\\ClientApp\\src\\app\\Services\\journalisation.service.ts"],"sourcesContent":["import { environment } from 'src/environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class JournalisationService {\r\n  private apiUrl = environment.apiUrl + 'Journalisation'; \r\n\r\n  constructor(private http: HttpClient){}\r\n\r\n  getJournalisations( IdUtilisateur: number ): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiUrl}/List/${IdUtilisateur}`);\r\n  }\r\n\r\n  getJournalisation(id: number): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  Recherche(rech:string): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${rech}`);\r\n  }\r\n\r\n  EnregistrementJournalisations(id: number, Journalisation: any): Observable<any> {\r\n    return this.http.put<any>(`${this.apiUrl}/EnregistrementJournalisations`, Journalisation);\r\n  }\r\n\r\n  deleteJournalisation(IdUtilisateur: number): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiUrl}/clear?IdUtilisateur=${IdUtilisateur}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}